<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on farwmarth</title>
    <link>http://farwmarth.com/categories/java/</link>
    <description>Recent content in java on farwmarth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 29 Jul 2013 22:54:49 +0000</lastBuildDate>
    
	<atom:link href="http://farwmarth.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JAVA内存分配</title>
      <link>http://farwmarth.com/post/java%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link>
      <pubDate>Mon, 29 Jul 2013 22:54:49 +0000</pubDate>
      
      <guid>http://farwmarth.com/post/java%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;寄存器：我们在程序中无法控制&lt;/li&gt;
&lt;li&gt;栈：存放基本类型的数据和对象的引用，但对象本身不存放在栈中，而是存放在堆中&lt;/li&gt;
&lt;li&gt;堆：存放用new产生的数据&lt;/li&gt;
&lt;li&gt;静态域：存放在对象中用static定义的静态成员&lt;/li&gt;
&lt;li&gt;常量池：存放常量&lt;/li&gt;
&lt;li&gt;非RAM存储：硬盘等永久存储空间&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;java内存分配中的栈&#34;&gt;Java内存分配中的栈&lt;/h2&gt;

&lt;p&gt;在函数中定义的一些基本类型的变量数据和对象的引用变量都在函数的栈内存中分配。&lt;/p&gt;

&lt;p&gt;当在一段代码块定义一个变量时，Java就在栈中 为这个变量分配内存空间，当该变量退出该作用域后，Java会自动释放掉为该变量所分配的内存空间，该内存空间可以立即被另作他用。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>