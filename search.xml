<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[hexo自动化构建]]></title>
      <url>http://www.farwmarth.com/autohexo/</url>
      <content type="html"><![CDATA[<p>最近发现博客的图片和文章数量增长后,hexo生成和发布的时间越来越长,而且换了电脑后hexo的环境又要倒腾一遍,实在是消耗时间。</p>
<p>但是又不想换简书这种单纯的写作平台，毕竟博客还是需要一点个性化的元素。</p>
<p>那能不能我写完markdown然后commit之后就可以自动生成静态页面自动发布呢？当然懒人们有很多种办法。研究了一下一般都是用<code>webhook</code>来实现,目前大概有几种方式:</p>
<a id="more"></a>
<p>hexo源文章仓库托管在github上然后编成静态文件分发到github和coding.net的pages服务上。一般用<code>Travis CI</code>来做集成,转一张<a href="http://kchen.cc/2016/11/12/hexo-instructions/#Travis-CI-持续集成" target="_blank" rel="noopener">kcen</a>做的时序图<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/travis_github.jpg" alt="travis_github.jpg"><br>流程简化就是本地push源文章到github，触发webhook然后traivs帮你自动构建生成静态文件然后推送到page服务上。</p>
<p>为了追求速度,我把hexo文章仓库托管在coding.net的上,而且coding的私有项目不收费,也提供了webhook的功能.</p>
<p>在coding上也有像travis一样的国内服务,开始收费的<code>flow.ci</code>不予考虑, 看到<a href="http://janrone.com/2016/05/10/%E5%88%A9%E7%94%A8Daocloud%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2Hexo/" target="_blank" rel="noopener">这篇</a>博客<a href="https://www.daocloud.io/" target="_blank" rel="noopener">daocloud</a>好像是个不错的选择，但是在部署的时候还是要暴露私钥给第三方平台,也没有选择这种方案。</p>
<p>正好手上有一台闲置的vps,就选择了云主机上搭建一个hexo的环境,push的时候触发coding的webhook，回调云主机上用nginx反代的node服务，然后执行一个<code>shell</code>脚本拉代码自动编译发布<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/vps_coding_webhook.png" alt="travis_github.jpg"></p>
<p>基本流程没有变,只是把第三方的服务换成了自己的vps,把需要的密钥换成了部署公钥。</p>
<p>coding的部署公钥在此部署<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/codingkey.png" alt="travis_github.jpg"></p>
<p>webhook在此配置<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/webhook.png" alt="travis_github.jpg"></p>
<p>vps上的项目目录，hexo是clone下来的博客源码，webhook下的是<code>node server</code>,部署公钥放最顶层</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">├── blog_rsa</span><br><span class="line">├── blog_rsa.pub #部署公钥</span><br><span class="line">├── hexo    #博客源码</span><br><span class="line">│   ├── deploy.sh</span><br><span class="line">│   ├── source</span><br><span class="line">└── webhook # node服务</span><br><span class="line">    ├── config.js</span><br><span class="line">    ├── index.js</span><br><span class="line">    ├── logs</span><br></pre></td></tr></table></figure>
<p>因为部署公钥没有放<code>.ssh</code>目录下所以要在<code>~/.ssh/config</code>下指定一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host git.coding.net</span><br><span class="line">User xxx@email.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile    /data/publish/blog_rsa</span><br><span class="line">IdentitiesOnly  yes</span><br><span class="line"></span><br><span class="line">Host github.com</span><br><span class="line">User xxx@email.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile    /data/publish/blog_rsa</span><br><span class="line">IdentitiesOnly  yes</span><br></pre></td></tr></table></figure>
<p>node服务代码很简单,判定一下coding的hook是不是push请求,友情提示,启动node服务的时候可以用<a href="https://www.npmjs.com/package/forever" target="_blank" rel="noopener">forever</a>模块启动<code>forever start index.js</code><br><code>index.js</code></p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'./config.js'</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> log4js = <span class="built_in">require</span>(<span class="string">'log4js'</span>);</span><br><span class="line"><span class="keyword">var</span> logger = log4js.getLogger(<span class="string">"hook"</span>);</span><br><span class="line"></span><br><span class="line">log4js.configure(&#123;</span><br><span class="line">    appenders: [&#123;</span><br><span class="line">        type: <span class="string">'console'</span>,</span><br><span class="line">        level: <span class="string">'DEBUG'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        type: <span class="string">'file'</span>,</span><br><span class="line">        filename: <span class="string">'logs/hook.log'</span>,</span><br><span class="line">        category: <span class="string">'hook'</span>,</span><br><span class="line">        level: <span class="string">'INFO'</span>,</span><br><span class="line">        maxLogSize: <span class="number">20480</span>,</span><br><span class="line">        backups: <span class="number">10</span>,</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> now = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleDateString() + <span class="string">" "</span> + nowDate.toLocaleTimeString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> main = <span class="function"><span class="keyword">function</span>(<span class="params">req, res, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (data.commits) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data.token , config.token);</span><br><span class="line">        <span class="keyword">if</span> (data.token != config.token)&#123;</span><br><span class="line">            logger.error(<span class="string">"error token!!!!!!!"</span>);</span><br><span class="line">            res.end();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> project_name = data.repository.name,</span><br><span class="line">            commit_user = data.commits[<span class="number">0</span>].committer.name,</span><br><span class="line">            commit_user_email = data.commits[<span class="number">0</span>].committer.email,</span><br><span class="line">            commit_message = data.commits[<span class="number">0</span>].short_message;</span><br><span class="line">        <span class="keyword">let</span> pro_item = config.projects[project_name];</span><br><span class="line">        <span class="keyword">if</span> (!pro_item) &#123;</span><br><span class="line">            logger.warn(<span class="string">"push project not in config"</span>);</span><br><span class="line">            res.end();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(util.format(<span class="string">"commit_message:%s, project_name:%s, commit_user:%s, commit_user_email:%s"</span>, commit_message, project_name, commit_user, commit_user_email));</span><br><span class="line">        exec(util.format(<span class="string">"sh %s"</span>, config.projects.shell_name), &#123;</span><br><span class="line">            maxBuffer: <span class="number">400</span> * <span class="number">1024</span>,</span><br><span class="line">            cwd: pro_item.path</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, stdout, stderr</span>) </span>&#123;</span><br><span class="line">            cmd_result = err ? stderr : stdout;</span><br><span class="line">            logger.info(cmd_result);</span><br><span class="line">        &#125;);</span><br><span class="line">        res.end();</span><br><span class="line">        logger.debug(<span class="string">"push trigger end"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.zen) &#123;</span><br><span class="line">        <span class="comment">//ping</span></span><br><span class="line">        res.end();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> POST = <span class="string">''</span>;</span><br><span class="line">    req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        POST += chunk;</span><br><span class="line">    &#125;);</span><br><span class="line">    req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            POST = <span class="built_in">JSON</span>.parse(POST);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Error</span>) &#123;</span><br><span class="line">            POST = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        main(req, res, POST);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(config.port);</span><br><span class="line">logger.info(<span class="string">"Server runing at port: "</span> + config.port + <span class="string">"."</span>);</span><br></pre></td></tr></table></figure>
<p>config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#启动端口</span><br><span class="line"><span class="keyword">var</span> port = xxx;</span><br><span class="line">#与coding的token配置一致</span><br><span class="line"><span class="keyword">var</span> token = <span class="string">'xxx'</span>;</span><br><span class="line"><span class="keyword">var</span> projects = &#123;</span><br><span class="line">    hexo: &#123;</span><br><span class="line">        path: <span class="string">'/data/publish/hexo/'</span>,</span><br><span class="line">        url: <span class="string">'git@git.coding.net:farwmarth/webhook.git'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//push请求要执行的脚本</span></span><br><span class="line">    shell_name: <span class="string">"deploy.sh"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> hook_log = <span class="string">'hook.log'</span>;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    projects: projects,</span><br><span class="line">    port: port,</span><br><span class="line">    token: token,</span><br><span class="line">    hook_log: hook_log,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>deploy.sh</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line"><span class="meta">#</span>为了拉主题</span><br><span class="line">git submodule update --recursive --init</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>部署好服务,配置好webhook后，可以愉快地写完文章直接<code>commit</code>,而不用再等待<code>deploy</code>了.</p>
<h2 id="安全性总结"><a href="#安全性总结" class="headerlink" title="安全性总结"></a>安全性总结</h2><ul>
<li>用travis记得将私钥加密</li>
<li>如果要用密钥最好用项目部署公钥,并控制好读写权限</li>
<li>webhook最好设置<code>token</code></li>
</ul>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> coding </tag>
            
            <tag> weghook </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo图片迁移至七牛]]></title>
      <url>http://www.farwmarth.com/hexo%E5%9B%BE%E7%89%87%E8%BF%81%E7%A7%BB%E8%87%B3%E4%B8%83%E7%89%9B/</url>
      <content type="html"><![CDATA[<p>之前图片一直是直接到在page服务上的,最近发现图片越来越多,打算图片迁移到七牛上.</p>
<p>七牛可以cdn加速,每月有固定的免费流量,可以设置防盗链,可以自动压缩图片打水印。众多优点。对小博客来说真是有莫大的帮助。</p>
<p>七牛注册这些过程就略过不表了.前置工作</p>
<ul>
<li>注册七牛账号并创建对象空间，充十块自定义域名</li>
<li>绑定<a href="https://support.qiniu.com/hc/kb/article/68977" target="_blank" rel="noopener">加速域名</a>，自定义域名必须为中国大陆已备案。推荐使用二级域名。</li>
<li>设置一下防盗链和图片瘦身<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/qiniu_steal.png" alt="防盗链"></li>
<li>获取AccessKey  SecretKey</li>
</ul>
<a id="more"></a>
<h1 id="批量迁移"><a href="#批量迁移" class="headerlink" title="批量迁移"></a>批量迁移</h1><p><code>qrsync</code>已经被七牛废弃了,现在使用<a href="http://devtools.qiniu.com/qshell-v2.0.5.zip" target="_blank" rel="noopener">qshell</a>完成图片批量同步</p>
<p>我的迁移目录结构<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── gen4idx.py #生成索引</span><br><span class="line">├── images #要同步的图片,可多级</span><br><span class="line">├── qshell # 同步程序</span><br><span class="line">├── qsync.json #同步配置</span><br><span class="line">├── qsync.sh #同步shell</span><br><span class="line">└── upload.log #同步日志</span><br></pre></td></tr></table></figure></p>
<h2 id="生成图片索引gen4idx"><a href="#生成图片索引gen4idx" class="headerlink" title="生成图片索引gen4idx"></a>生成图片索引gen4idx</h2><p>因为七牛上传的图片没有预览界面只能在对象存储中搜索查看,非常不方便,我们可以在同步前遍历一下目录生成一个html也同步到七牛对象空间中.这样访问html就可以检索所有的图片了,改造了一下其他人写的索引代码放在<a href="https://gist.github.com/wujiyu115/d4c91852357853678b8f675b11f56421" target="_blank" rel="noopener">gist</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>要遍历的根目录 指定的图片目录用逗号隔开</span><br><span class="line">python gen4idx.py images NULL</span><br></pre></td></tr></table></figure>
<h2 id="qshell使用"><a href="#qshell使用" class="headerlink" title="qshell使用"></a><a href="https://developer.qiniu.com/kodo/tools/qshell" target="_blank" rel="noopener">qshell</a>使用</h2><h3 id="初始化账户"><a href="#初始化账户" class="headerlink" title="初始化账户"></a>初始化账户</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./qshell  account AccessKey  SecretKey</span><br></pre></td></tr></table></figure>
<h3 id="配置qsync-json"><a href="#配置qsync-json" class="headerlink" title="配置qsync.json"></a>配置qsync.json</h3><p>配置参考<a href="https://github.com/qiniu/qshell/blob/master/docs/qupload.md" target="_blank" rel="noopener">文档</a><br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"src_dir"</span>            :   <span class="string">"/Users/far/Develop/tools/qiniu/"</span>,</span><br><span class="line">   <span class="attr">"bucket"</span>             :   <span class="string">"farwmarth"</span>,</span><br><span class="line">   <span class="attr">"overwrite"</span>          :   <span class="literal">false</span>,</span><br><span class="line">   <span class="attr">"check_exists"</span>       :   <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">"check_hash"</span>         :   <span class="literal">false</span>,</span><br><span class="line">   <span class="attr">"check_size"</span>         :   <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">"rescan_local"</span>       :   <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">"skip_file_prefixes"</span> :   <span class="string">"qrsboxcli,qshell"</span>,</span><br><span class="line">   <span class="attr">"skip_fixed_strings"</span> :   <span class="string">".svn,.git"</span>,</span><br><span class="line">   <span class="attr">"skip_suffixes"</span>      :   <span class="string">".DS_Store,.exe,.log,.sh,.py,.pyc,.json,.md"</span>,</span><br><span class="line">   <span class="attr">"log_file"</span>           :   <span class="string">"upload.log"</span>,</span><br><span class="line">   <span class="attr">"log_level"</span>          :   <span class="string">"info"</span>,</span><br><span class="line">   <span class="attr">"log_rotate"</span>         :   <span class="number">1</span>,</span><br><span class="line">   <span class="attr">"log_stdout"</span>         :   <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./qshell qupload 2 qsync.json</span><br></pre></td></tr></table></figure>
<p>同步完成后会生成log,终端上也会有同步的过程和统计信息,如果同步异常中断了也会接着上次的进度续传的.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/qiniu_upload.png" alt="同步"></p>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>列举空间下的列表到控制台输出</span><br><span class="line">./qshell  listbucket farwmarth stdout</span><br><span class="line"><span class="meta">#</span>列举目录中的文件到result.txt中</span><br><span class="line">./qshell  dircache . result.txt</span><br></pre></td></tr></table></figure>
<h1 id="替换图片"><a href="#替换图片" class="headerlink" title="替换图片"></a>替换图片</h1><p>替换图片比较简单<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/qiniu_reg_relplace.png" alt="替换图片"></p>
<h1 id="几个上传七牛的写作插件"><a href="#几个上传七牛的写作插件" class="headerlink" title="几个上传七牛的写作插件"></a>几个上传七牛的写作插件</h1><ul>
<li>MWeb</li>
<li>alfred插件上传: <a href="https://github.com/iammapping/alfred-uploader" target="_blank" rel="noopener">https://github.com/iammapping/alfred-uploader</a></li>
<li>hexo插件: <a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">https://github.com/gyk001/hexo-qiniu-sync</a></li>
<li>极简图床: <a href="http://yotuku.cn/#/" target="_blank" rel="noopener">http://yotuku.cn/#/</a></li>
</ul>
<p>试了 <code>ulysses</code> <code>ia-write</code>等一打写作工具后最后停留在了<code>MWeb</code>和<code>Sublime</code>上.<code>MWeb</code>的各项插件很齐全,写MarkDown体验也好.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2017/03/mweb.png" alt="mweb"></p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> qiniu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给shadowsocks插上tcptun,bbr这对翅膀]]></title>
      <url>http://www.farwmarth.com/vultr/</url>
      <content type="html"><![CDATA[<p>最近<a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr</a> 搞活动充五刀送五刀.之前用的服务商速度有点不给力.想着撸个ss玩玩,晚上折腾到一点多, 易票联的<code>全球付</code>卡在vultr一直刷不了.又不想用<code>paypal</code>绑银行卡.试着把<code>全球付</code>的卡绑到<code>paypal</code>上。然后用<code>paypal</code>一刷居然成功了.</p>
<p><code>vultr</code>比<code>linode</code>同等配置价格更便宜.<code>500G</code>的流量绝对够用了.知乎上看了一下好像日本的线路速度比较快.自己也测试了一下.然后开了个实例准备试用几个月看效果如何.</p>
<h2 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h2><ul>
<li><p>国内线路测试vps速度ping<br><a href="http://ping.chinaz.com/45.76.185.184" target="_blank" rel="noopener">http://ping.chinaz.com/45.76.185.184</a></p>
</li>
<li><p>speedtest测试带宽</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py</span><br><span class="line">python speedtest.py</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Shadowsocks安装"><a href="#Shadowsocks安装" class="headerlink" title="Shadowsocks安装"></a>Shadowsocks安装</h1><h2 id="安装Shadowsocks-go"><a href="#安装Shadowsocks-go" class="headerlink" title="安装Shadowsocks-go"></a>安装Shadowsocks-go</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装</span><br><span class="line">wget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh</span><br><span class="line">chmod +x shadowsocks-go.sh</span><br><span class="line">./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>默认配置文件在</span><br><span class="line">/etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="安装后脚本提示："><a href="#安装后脚本提示：" class="headerlink" title="安装后脚本提示："></a>安装后脚本提示：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Congratulations, Shadowsocks-go install completed!</span><br><span class="line">Your Server IP:your_server_ip</span><br><span class="line">Your Server Port:your_server_port</span><br><span class="line">Your Password:your_password</span><br><span class="line">Your Local Port:1080</span><br><span class="line">Your Encryption Method:aes-256-cfb</span><br><span class="line"></span><br><span class="line">安装完成后即已后台启动`Shadowsocks-go`运行：</span><br><span class="line"><span class="meta">#</span>启动：</span><br><span class="line">/etc/init.d/shadowsocks start</span><br><span class="line"><span class="meta">#</span>停止：</span><br><span class="line">/etc/init.d/shadowsocks stop</span><br><span class="line"><span class="meta">#</span>重启：</span><br><span class="line">/etc/init.d/shadowsocks restart</span><br><span class="line"><span class="meta">#</span>状态：</span><br><span class="line">/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure>
<h3 id="多用户多端口配置文件示例："><a href="#多用户多端口配置文件示例：" class="headerlink" title="多用户多端口配置文件示例："></a>多用户多端口配置文件示例：</h3><p>配置文件路径：<code>/etc/shadowsocks/config.json</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;port_password&quot;:&#123;</span><br><span class="line">         &quot;8989&quot;:&quot;password0&quot;,</span><br><span class="line">         &quot;9001&quot;:&quot;password1&quot;,</span><br><span class="line">         &quot;9002&quot;:&quot;password2&quot;,</span><br><span class="line">         &quot;9003&quot;:&quot;password3&quot;,</span><br><span class="line">         &quot;9004&quot;:&quot;password4&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;timeout&quot;:600</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>BBR是google开源的一个TCP BBR拥塞控制算法,可以进行单边加速</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>手动安装要更新内核,用这个一键安装</span><br><span class="line"><span class="meta">#</span>https://blog.kuoruan.com/115.html</span><br><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>验证是否成功</span><br><span class="line">sysctl -a|grep tcp_congestion_control</span><br><span class="line"><span class="meta">#</span>net.ipv4.tcp_congestion_control = bbr</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>验证2</span><br><span class="line">lsmod | grep bbr</span><br><span class="line"><span class="meta">#</span>tcp_bbr                16384  5</span><br></pre></td></tr></table></figure>
<h1 id="kctrun"><a href="#kctrun" class="headerlink" title="kctrun"></a>kctrun</h1><h2 id="Kcptun介绍"><a href="#Kcptun介绍" class="headerlink" title="Kcptun介绍"></a>Kcptun介绍</h2><p>Kcptun 是一个非常简单和快速的，基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为KCP+UDP 流。而 KCP 是一个快速可靠协议，能以比 TCP浪费10%-20%的带宽的代价，换取平均延迟降低30%-40%，且最大延迟降低三倍的传输效果。</p>
<p>Kcptun 是 KCP 协议的一个简单应用，可以用于任意 TCP 网络程序的传输承载，以提高网络流畅度，降低掉线情况。由于 Kcptun 使用 Go 语言编写，内存占用低（经测试，在64M内存服务器上稳定运行），而且适用于所有平台，甚至 Arm 平台。</p>
<h2 id="简易原理"><a href="#简易原理" class="headerlink" title="简易原理"></a>简易原理</h2><p><img src="http://farwmarth.bestnewbee.com/images/kcp.jpg" alt="kcp"></p>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh</span><br><span class="line">chmod +x ./kcptun.sh</span><br><span class="line">/kcptun.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>查看kcptun日志</span><br><span class="line">./kcptun.sh log</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>配置文件</span><br><span class="line">/usr/share/kcptun/server-config.json</span><br><span class="line"><span class="meta">#</span>kcptun服务器</span><br><span class="line">/usr/share/kcptun/server_linux_amd64</span><br><span class="line"><span class="meta">#</span>Kcptun 日志文件目录:</span><br><span class="line">/var/log/kcptun/</span><br><span class="line"><span class="meta">#</span>开关kcptun</span><br><span class="line"><span class="meta">#</span>Supervisor 命令:</span><br><span class="line">    service supervisord &#123;start|stop|restart|status&#125;</span><br><span class="line">                        &#123;启动|关闭|重启|查看状态&#125;</span><br><span class="line"><span class="meta">#</span>Kcptun 相关命令:</span><br><span class="line">    supervisorctl &#123;start|stop|restart|status&#125; kcptun&lt;id&gt;</span><br><span class="line">                  &#123;启动|关闭|重启|查看状态&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Mac上kcptun和ss配置"><a href="#Mac上kcptun和ss配置" class="headerlink" title="Mac上kcptun和ss配置"></a>Mac上kcptun和ss配置</h1><p><a href="https://github.com/xtaci/kcptun/releases" target="_blank" rel="noopener">https://github.com/xtaci/kcptun/releases</a><br>下载 kcptun-darwin-amd64-20170308.tar.gz</p>
<h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo ./client_darwin_amd64 -l ":kcptun加速端口" -mode fast -r "vps的ip:kcptun对外端口" --crypt "加密方式(aes)" --key "kcptun密码"</span><br></pre></td></tr></table></figure>
<p><img src="http://farwmarth.bestnewbee.com/images/kcptun.jpg" alt="kcptun"></p>
<h2 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h2><p>win: <a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="noopener">https://github.com/dfdragon/kcptun_gclient</a><br>mac: <a href="https://github.com/dfdragon/kcptun_xclient" target="_blank" rel="noopener">https://github.com/dfdragon/kcptun_xclient</a><br>截图是windows的ui,mac配置差不多<br><img src="http://farwmarth.bestnewbee.com/images/Kcptun_GUI_config.png" alt="kcptun_gui"></p>
<h1 id="supervisord"><a href="#supervisord" class="headerlink" title="supervisord"></a>supervisord</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/supervisor/supervisord.conf</span><br><span class="line">files = /etc/supervisor/config.d/*.ini</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="配置参考"><a href="#配置参考" class="headerlink" title="配置参考"></a>配置参考</h2><ul>
<li><a href="https://teddysun.com/486.html" target="_blank" rel="noopener">https://teddysun.com/486.html</a></li>
<li><a href="https://blog.kuoruan.com/110.html" target="_blank" rel="noopener">https://blog.kuoruan.com/110.html</a></li>
<li><a href="http://hohothink.com/fq" target="_blank" rel="noopener">http://hohothink.com/fq</a></li>
<li><a href="http://xn--rgvu79ah1g.com/ios%E4%B9%8B%E8%B7%AF/speed-up" target="_blank" rel="noopener">http://xn--rgvu79ah1g.com/ios%E4%B9%8B%E8%B7%AF/speed-up</a></li>
<li><a href="https://miaocode.tk/hello-kcp/" target="_blank" rel="noopener">https://miaocode.tk/hello-kcp/</a></li>
</ul>
<h2 id="算法参考"><a href="#算法参考" class="headerlink" title="算法参考"></a>算法参考</h2><ul>
<li><a href="http://blog.csdn.net/dog250/article/details/52830576" target="_blank" rel="noopener">http://blog.csdn.net/dog250/article/details/52830576</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> vultr </tag>
            
            <tag> shadowsocks </tag>
            
            <tag> tcptun </tag>
            
            <tag> bbr </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[语音服务器的选型]]></title>
      <url>http://www.farwmarth.com/%E8%AF%AD%E9%9F%B3%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%80%89%E5%9E%8B/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近游戏要接入一下语音服务器,调查了一下融合的语音sdk<br>腾讯云GVoice:<a href="https://www.qcloud.com/document/product/556/7673" target="_blank" rel="noopener">https://www.qcloud.com/document/product/556/7673</a><br>好像只有这个比较靠谱,但是收费好像有点贵,还是决定基于原有的免费的百度语音识别造一个轮子<br><a id="more"></a></p>
<h1 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h1><p>要解决几个问题</p>
<ul>
<li>语音转文字翻译</li>
<li>高效的web服务器</li>
<li>分布式的文件存储</li>
<li>与游戏服务器沟通的消息队列选择</li>
</ul>
<h2 id="语音转文字翻译"><a href="#语音转文字翻译" class="headerlink" title="语音转文字翻译"></a>语音转文字翻译</h2><p>这个真没法自己造轮子,选择了百度的语音服务<br>语音识别<code>50000次/日</code>配额<br>支持的语音时长上限为60s</p>
<ul>
<li>auth文档<br><a href="http://developer.baidu.com/wiki/index.php?title=docs/oauth/client" target="_blank" rel="noopener">http://developer.baidu.com/wiki/index.php?title=docs/oauth/client</a></li>
<li>刷新access_token<br><a href="http://developer.baidu.com/wiki/index.php?title=%E4%BD%BF%E7%94%A8Refresh_Token%E8%8E%B7%E5%8F%96Access_Token" target="_blank" rel="noopener">http://developer.baidu.com/wiki/index.php?title=%E4%BD%BF%E7%94%A8Refresh_Token%E8%8E%B7%E5%8F%96Access_Token</a></li>
<li>语音识别接口<br><a href="http://yuyin.baidu.com/docs/asr/57" target="_blank" rel="noopener">http://yuyin.baidu.com/docs/asr/57</a></li>
</ul>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">local</span> new_timer = ngx.timer.at</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> access_token</span><br><span class="line"><span class="keyword">local</span> refresh_token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.timer_refresh_token</span><span class="params">(resp)</span></span></span><br><span class="line">    <span class="keyword">local</span> expires_in_sec = resp.expires_in - <span class="number">3600</span></span><br><span class="line">    expires_in_sec = expires_in_sec &lt; <span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">or</span> expires_in_sec</span><br><span class="line">    <span class="comment">--过期前一天刷新token</span></span><br><span class="line">    new_timer(expires_in_sec,M.refresh_token)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.gen_token</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> access_token <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> data = &#123; grant_type=<span class="string">"client_credentials"</span>, client_id = Config.AppKey, client_secret = Config.AppSecret&#125;</span><br><span class="line">        <span class="keyword">local</span> resp,err = http_util.get_baidu_token(Config.TOKEN_URL, data)</span><br><span class="line">        access_token = resp.access_token</span><br><span class="line">        refresh_token = resp.refresh_token</span><br><span class="line">        M.timer_refresh_token(resp)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.refresh_token</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">if</span> refresh_token <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> data = &#123; grant_type=<span class="string">"refresh_token"</span>, client_id = Config.AppKey, client_secret = Config.AppSecret, refresh_token = refresh_token &#125;</span><br><span class="line">        <span class="keyword">local</span> resp,err = http_util.get_baidu_token(Config.TOKEN_URL, data)</span><br><span class="line">        access_token = resp.access_token</span><br><span class="line">        refresh_token = resp.refresh_token</span><br><span class="line">        M.timer_refresh_token(resp)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        M.gen_token()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.translate_voice</span><span class="params">(voice)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span> = <span class="built_in">string</span>.<span class="built_in">len</span>(voice)</span><br><span class="line">    <span class="keyword">local</span> base64_str =  ngx.encode_base64(voice)</span><br><span class="line">    <span class="keyword">local</span> data = &#123;cuid = Config.CUID, token= access_token, channel = <span class="number">1</span>, <span class="built_in">format</span> = <span class="string">"amr"</span>, rate = <span class="number">8000</span>,</span><br><span class="line">            <span class="built_in">len</span> = <span class="built_in">len</span>, speech = base64_str &#125;</span><br><span class="line">    <span class="keyword">local</span> resp,err = http_util.post_ret_json(Config.VOICE_URL, data)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> err <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> err_no = resp.errno</span><br><span class="line">        <span class="keyword">if</span> ERR_TBL[err_no] <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> ERR_TBL[err_no]</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> resp.result[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="web服务器"><a href="#web服务器" class="headerlink" title="web服务器"></a>web服务器</h2><p>所有的结构是在python在<code>Flask</code>上构建的,怕运行效率不行想重新写一个.几经比较之后,没有选择比较熟悉的<code>java</code>语言和<code>tornado</code>,而是选择了<code>openresty</code>,主要是基于几点考虑</p>
<ul>
<li>是否是经过验证的框架</li>
<li>是否是熟悉的开发语言</li>
<li>开发和部署是否简便快捷</li>
</ul>
<p><code>openresty</code> 是在<code>nginx</code>的基础上嵌入了<code>lua</code>的支持,兼备了<code>Python</code>快速开发和<code>Nginx C</code>模块的高性能</p>
<h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><p>前期小规模的文件存储直接单机就可以了.而且语音这种是有时效性的,通过<code>ttl</code>过期即可清除,磁盘空间不会无限增长.<br>但为了做个新的尝试,也调查了一下分布式的小文件存储</p>
<ul>
<li>tfs : <a href="http://tfs.taobao.org/" target="_blank" rel="noopener">http://tfs.taobao.org/</a><br><code>tfs</code>淘宝的开源方案年久失修,果断弃之</li>
<li>mogilefs : <a href="https://github.com/mogilefs" target="_blank" rel="noopener">https://github.com/mogilefs</a><br>要加入<code>mysql</code>弃之</li>
<li>fastdfs : <a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs</a><br>c编写,用的人比较多,但是看了几篇对比文章之后也没有做为最终的选择</li>
<li>seaweedfs : <a href="https://github.com/chrislusf/seaweedfs" target="_blank" rel="noopener">https://github.com/chrislusf/seaweedfs</a></li>
<li>bilibfs : <a href="https://github.com/Terry-Mao/bfs" target="_blank" rel="noopener">https://github.com/Terry-Mao/bfs</a><br>借鉴了<code>seaweedfs</code>和<code>fastdfs</code>,<a href="http://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=406016886&amp;idx=1&amp;sn=f5aa286373fb981c9de904568fe7ddb2&amp;scene=5&amp;srcid=0411E8naA5E9O1R10U1Utv6y#rd" target="_blank" rel="noopener">这篇文章</a>可以对bfs有个大概的了解,没有用这个的原因是加加入</li>
<li>baidubfs : <a href="https://github.com/baidu/bfs" target="_blank" rel="noopener">https://github.com/baidu/bfs</a><br>c++编写,不熟悉</li>
</ul>
<p>最终使用了<code>seaweedfs</code> go语言编写,简单易用</p>
<p>参考:<br><a href="http://blog.qiniu.com/archives/2546" target="_blank" rel="noopener">http://blog.qiniu.com/archives/2546</a><br><a href="http://wenjun.org/?p=1087" target="_blank" rel="noopener">http://wenjun.org/?p=1087</a><br><a href="http://www.simlinux.com/books/FastDFS.pdf" target="_blank" rel="noopener">http://www.simlinux.com/books/FastDFS.pdf</a></p>
<h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><p>游戏内<code>auth</code>和后台<code>gm</code>通信中间件使用的<code>rabbitmq</code>,为了保持一致性也使用了这个</p>
<h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1><p><img src="http://farwmarth.bestnewbee.com/images/audio_server.png" alt="audio_server"></p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>由玩家发起语音聊天,将语音压缩成amr上传到中心主机nginx上,由nginx反代<code>seaweedfs</code>集群完成语音文件的存储,然后将<code>返回的文件id</code>加上<code>内网的集群ip</code>组合成<code>语音id</code>将消息信息<code>push</code>到<code>rabbitmq</code>队列中,游戏服务器作为<code>mq</code>的订阅者实时处理队列内容将消息按频道和<code>语音id</code>广播给对应的游戏客户端,游戏客户端用<code>语音id</code>请求中心主机nginx再从代理的<code>seaweedfs</code>集群中取语音文件.整个语音聊天的过程就完成了.</p>
<h2 id="关于百度语音识别部分"><a href="#关于百度语音识别部分" class="headerlink" title="关于百度语音识别部分"></a>关于百度语音识别部分</h2><p>百度语音识别api并不支持流式上传数据,而且把识别这部分放到上传语音的过程中加重了<code>rpc</code>调用的负担.所以这部分可以放到游戏客户端直接请求百度api</p>
]]></content>
      
        <categories>
            
            <category> audio </category>
            
            <category> skill </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将内网终端分享给其他人使用]]></title>
      <url>http://www.farwmarth.com/ttyd/</url>
      <content type="html"><![CDATA[<p>起因是某人要学习下<code>linux</code>,但是不想用虚拟机装linux,在网上也找了几个在线的<code>shell</code>练习网站,感觉不是很满意,于是想把自己内网主机上的终端share一下,github搜索了一下还真有这样的项目.</p>
<h2 id="ttyd"><a href="#ttyd" class="headerlink" title="ttyd"></a>ttyd</h2><p><code>ttyd</code>是一个把自己的终端通过web方式共享给其他人操作的工具</p>
<p><a href="https://github.com/tsl0922/ttyd" target="_blank" rel="noopener">https://github.com/tsl0922/ttyd</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ttyd login</span><br><span class="line"><span class="meta">#</span>默认端口是7681 用login方式要输入账号密码</span><br><span class="line"><span class="meta">#</span>http://localhost:7681</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="ngrok"><a href="#ngrok" class="headerlink" title="ngrok"></a>ngrok</h2><p><code>ngrok</code>服务可以分配给你一个域名让你本地的web项目提供给外网访问，特别适合向别人展示你本机的web demo 以及调试一些远程的API.</p>
<ul>
<li>qydev : <a href="http://qydev.com/" target="_blank" rel="noopener">http://qydev.com/</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./ngrok -config=ngrok.cfg -hostname farwmarth 7681</span><br><span class="line"><span class="meta">#</span>http://farwmarth.tunnel.qydev.com/</span><br></pre></td></tr></table></figure>
<p><img src="http://farwmarth.bestnewbee.com/images/ttyd.png" alt="ttyd"></p>
<h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, udp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发</p>
<h3 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh -O ./install-frps.sh</span><br><span class="line">chmod 700 ./install-frps.sh</span><br><span class="line">./install-frps.sh install</span><br></pre></td></tr></table></figure>
<h3 id="frp配合ttyd的配置"><a href="#frp配合ttyd的配置" class="headerlink" title="frp配合ttyd的配置"></a>frp配合ttyd的配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = frp.lu8.win</span><br><span class="line">server_port = 7000</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line">privilege_token = frp888</span><br><span class="line"></span><br><span class="line">[http_mode]</span><br><span class="line"><span class="meta">#</span>注意修改上方[]内的内容，不要与其他隧道名称重复</span><br><span class="line"><span class="meta">#</span>privilege_mode特权模式</span><br><span class="line">privilege_mode = true</span><br><span class="line">type = http</span><br><span class="line"><span class="meta">#</span>local_ip本地服务IP</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line"><span class="meta">#</span>local_port本地服务端口</span><br><span class="line">local_port = 7681</span><br><span class="line">custom_domains = farwmarth.frp.lu8.win</span><br></pre></td></tr></table></figure>
<h3 id="frp配合nginx"><a href="#frp配合nginx" class="headerlink" title="frp配合nginx"></a>frp配合nginx</h3><p>域名解析到服务器<code>frptest.xxx.com</code></p>
<h4 id="服务器frp配置"><a href="#服务器frp配置" class="headerlink" title="服务器frp配置"></a>服务器frp配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">    bind_addr = 0.0.0.0</span><br><span class="line">    bind_port = 7000</span><br><span class="line">    vhost_http_port = 5999</span><br><span class="line"></span><br><span class="line">[frptest]</span><br><span class="line">    type = http</span><br><span class="line">    auth_token = xxx</span><br><span class="line">    custom_domains = frptest.xxx.com</span><br></pre></td></tr></table></figure>
<h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">upstream frptest&#123;</span><br><span class="line">    server 127.0.0.1:5999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name frptest.xxx.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://frptest;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_read_timeout 7200;</span><br><span class="line">        proxy_set_header Connection "";</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-Ip $remote_addr;</span><br><span class="line">        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="客户端frp配置"><a href="#客户端frp配置" class="headerlink" title="客户端frp配置"></a>客户端frp配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">    server_addr = 服务器ip</span><br><span class="line">    server_port = 7000</span><br><span class="line">    auth_token xxx</span><br><span class="line">    log_file = ./frpc.log</span><br><span class="line">    log_level = info</span><br><span class="line">    log_max_days = 3</span><br><span class="line"></span><br><span class="line">[frptest]</span><br><span class="line">    local_ip = 127.0.0.1</span><br><span class="line">    local_port = 8080</span><br><span class="line">    type = http</span><br><span class="line">    auth_token = xxx</span><br></pre></td></tr></table></figure>
<h3 id="用frp做ssh转发"><a href="#用frp做ssh转发" class="headerlink" title="用frp做ssh转发"></a>用frp做ssh转发</h3><p>时序图大致如下:</p>
<p><img src="http://farwmarth.bestnewbee.com/14904631822511.jpg" alt=""></p>
<h4 id="外网服务器配置"><a href="#外网服务器配置" class="headerlink" title="外网服务器配置"></a>外网服务器配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 7000</span><br><span class="line">log_max_days = 7</span><br><span class="line">max_pool_count = 100</span><br><span class="line">log_file = frps.log</span><br><span class="line">log_level = info</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">listen_port = 6000</span><br><span class="line">type = tcp</span><br><span class="line">auth_token = 通讯加密token</span><br><span class="line">use_encryption = true</span><br><span class="line">use_gzip = true</span><br></pre></td></tr></table></figure>
<h4 id="内网客户端配置"><a href="#内网客户端配置" class="headerlink" title="内网客户端配置"></a>内网客户端配置</h4><p>先要安装ssh服务开启并将端口设置为<code>22022</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = 外网服务器ip</span><br><span class="line">server_port = 7000</span><br><span class="line">auth_token = 通讯加密token</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22022</span><br><span class="line">type = tcp</span><br><span class="line">use_gzip = true</span><br><span class="line">use_encryption = true</span><br></pre></td></tr></table></figure>
<h4 id="本机连接"><a href="#本机连接" class="headerlink" title="本机连接"></a>本机连接</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -oPort=6000 内网客户端ssh用户@外网服务器ip</span><br></pre></td></tr></table></figure>
<h4 id="外网服务器访问内网web服务"><a href="#外网服务器访问内网web服务" class="headerlink" title="外网服务器访问内网web服务"></a>外网服务器访问内网web服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 1234</span><br><span class="line">log_max_days = 7</span><br><span class="line">max_pool_count = 100</span><br><span class="line">log_file = frps.log</span><br><span class="line">log_level = info</span><br><span class="line">vhost_http_port = 1235</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type = http</span><br><span class="line">auth_token = xxx</span><br><span class="line">custom_domains = xxx.xxx.com</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = m1-test-pub2.m1.ejoy.com</span><br><span class="line">server_port = 1234</span><br><span class="line">auth_token = xxx</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type = http</span><br><span class="line">local_port =10003</span><br><span class="line">custom_domains = xxx.xxx.com</span><br></pre></td></tr></table></figure>
<p>通过<code>http://xxx.xxx.com:1235</code>可以访问内网web服务</p>
<h2 id="socket-pipe"><a href="#socket-pipe" class="headerlink" title="socket-pipe"></a>socket-pipe</h2><p>node写的,直接看作者的介绍</p>
<ul>
<li><a href="https://joyqi.com/javascript/socket-pipe.html" target="_blank" rel="noopener">https://joyqi.com/javascript/socket-pipe.html</a></li>
<li><a href="https://github.com/joyqi/socket-pipe" target="_blank" rel="noopener">https://github.com/joyqi/socket-pipe</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> ttyd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初级运维指南]]></title>
      <url>http://www.farwmarth.com/%E5%88%9D%E7%BA%A7%E8%BF%90%E7%BB%B4%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<h1 id="加固"><a href="#加固" class="headerlink" title="加固"></a>加固</h1><ul>
<li>CentOS 7防火墙换用Friewalld</li>
</ul>
<h1 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h1><h2 id="安装ssh"><a href="#安装ssh" class="headerlink" title="安装ssh"></a>安装ssh</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装</span><br><span class="line">yum install ssh</span><br><span class="line"><span class="meta">#</span>启动</span><br><span class="line">service sshd start</span><br><span class="line"><span class="meta">#</span>设置开机启动</span><br><span class="line">chkconfig ssd on</span><br><span class="line"><span class="meta">#</span>重启</span><br><span class="line">service sshd restart</span><br><span class="line"><span class="meta">#</span>重启网络</span><br><span class="line">service network restart</span><br><span class="line"><span class="meta">#</span>centos7</span><br><span class="line">systemctl restart  sshd.service</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置文件目录: <code>/etc/ssh/sshd_config</code> ,<a href="http://www.jinbuguo.com/openssh/sshd_config.html" target="_blank" rel="noopener">参考</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Port 22022 #对外端口,改了端口后别忘记了防火墙的出口端口设置</span><br><span class="line">Protocol 2 #协议</span><br><span class="line">RSAAuthentication yes #rsa登录</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile     .ssh/authorized_keys</span><br><span class="line">PermitRootLogin yes  #允许root用户以任何认证方式登录 without-password no</span><br><span class="line">SyslogFacility AUTHPRIV</span><br><span class="line">PasswordAuthentication no #禁止密码登录</span><br></pre></td></tr></table></figure>
<h3 id="只允许特定用户登录"><a href="#只允许特定用户登录" class="headerlink" title="只允许特定用户登录"></a>只允许特定用户登录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在sshd_config中设置AllowUsers</span><br><span class="line">AllowUsers a b c</span><br><span class="line">重启sshd服务，则只有a/b/c3个用户可以登陆</span><br></pre></td></tr></table></figure>
<h2 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>生成</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="meta">#</span>添加</span><br><span class="line">cat .ssh/id_rsa.pub &gt;&gt; .ssh/authorized_keys</span><br><span class="line"><span class="meta">#</span>检查</span><br><span class="line">cat .ssh/authorized_keys</span><br></pre></td></tr></table></figure>
<h2 id="常见免密码登录失败分析"><a href="#常见免密码登录失败分析" class="headerlink" title="常见免密码登录失败分析"></a>常见免密码登录失败分析</h2><h3 id="配置问题"><a href="#配置问题" class="headerlink" title="配置问题"></a>配置问题</h3><ul>
<li>检查配置文件<code>/etc/ssh/sshd_config</code>是否开启了<code>AuthorizedKeysFile</code>选项</li>
<li>检查<code>AuthorizedKeysFile</code>选项指定的文件是否存在并内容正常</li>
</ul>
<h3 id="目录权限问题"><a href="#目录权限问题" class="headerlink" title="目录权限问题"></a>目录权限问题</h3><ul>
<li>~权限设置为700</li>
<li>~/.ssh权限设置为700</li>
<li>~/.ssh/authorized_keys的权限设置为<code>600</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod 700 ~</span><br><span class="line">sudo chmod 700 ~/.ssh</span><br><span class="line">sudo chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="配置ssd防止暴力破解"><a href="#配置ssd防止暴力破解" class="headerlink" title="配置ssd防止暴力破解"></a><a href="https://github.com/denyhosts/denyhosts" target="_blank" rel="noopener">配置ssd防止暴力破解</a></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> KeyError: 'FAILED_ENTRY_REGEX10' 20161206居然有问题要还原代码编译 git reset --hard 65e1bc1</span><br><span class="line"><span class="meta">#</span>依赖</span><br><span class="line">pip install ipaddr</span><br><span class="line"><span class="meta">#</span>安装</span><br><span class="line">python steup.py install</span><br><span class="line"><span class="meta">#</span>编辑配置文件</span><br><span class="line">cp denyhosts.conf /etc</span><br><span class="line"><span class="meta">#</span>配置一下 /etc/denyhosts.conf</span><br><span class="line"><span class="meta">#</span>启动服务</span><br><span class="line">cp daemon-control-dist /etc/init.d/daemon-control</span><br><span class="line">chown root /etc/init.d/daemon-control</span><br><span class="line">chmod 700 /etc/init.d/daemon-control</span><br><span class="line"><span class="meta">#</span>编辑daemon-control</span><br><span class="line">DENYHOSTS_BIN   = "/usr/bin/denyhosts.py"</span><br><span class="line"><span class="meta">#</span>加入开机启动</span><br><span class="line">chkconfig --level 3 daemon-control on</span><br><span class="line">/etc/init.d/daemon-control start</span><br><span class="line"><span class="meta">#</span>日志tail -50 /var/log/denyhosts</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>https://github.com/denyhosts/denyhosts/blob/master/denyhosts.conf</span><br><span class="line"><span class="meta">#</span>linux版本相关 SECURE_LOG HOSTS_DENY LOCK_FILE</span><br><span class="line">SECURE_LOG = /var/log/secure  #ssh 日志文件，它是根据这个文件来判断的。</span><br><span class="line">HOSTS_DENY = /etc/hosts.deny  #控制用户登陆的文件，根据UNIX版本不同配置不同</span><br><span class="line">PURGE_DENY = 15m     #过多久后清除已经禁止的，默认为空，即马上清除掉，这个根据自己的需要设置。</span><br><span class="line">BLOCK_SERVICE  = sshd   #被加入hosts.deny后阻止的服务:阻止SSHD服务</span><br><span class="line"><span class="meta">#</span>允许无效用户失败的次数</span><br><span class="line">DENY_THRESHOLD_INVALID = 1</span><br><span class="line"><span class="meta">#</span>允许普通用户登陆失败的次数</span><br><span class="line">DENY_THRESHOLD_VALID = 10</span><br><span class="line"><span class="meta">#</span>允许root登陆失败的次数</span><br><span class="line">DENY_THRESHOLD_ROOT = 5</span><br><span class="line"><span class="meta">#</span>对WORK_DIR/restricted-usernames配置的用户次数判定</span><br><span class="line">DENY_THRESHOLD_RESTRICTED = 1</span><br><span class="line">WORK_DIR = /usr/share/denyhosts/data #工作目录</span><br><span class="line">SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=YES #allowed-hosts中的用户有可疑登录行为如果此配置为YES则会报告</span><br><span class="line">HOSTNAME_LOOKUP=NO  #是否做域名反解</span><br><span class="line">LOCK_FILE = /var/lock/subsys/denyhosts</span><br><span class="line"><span class="meta">#</span>########### THESE SETTINGS ARE OPTIONAL ############</span><br><span class="line">ADMIN_EMAIL =  wujiyu115@gmail.com #管理员邮件地址</span><br><span class="line">SMTP_HOST = localhost</span><br><span class="line">SMTP_PORT = 25</span><br><span class="line">SMTP_FROM = DenyHosts &lt;nobody@localhost&gt;</span><br><span class="line">SMTP_SUBJECT = Redocn-DenyHosts Report</span><br><span class="line">AGE_RESET_VALID=5d</span><br><span class="line">AGE_RESET_ROOT=25d</span><br><span class="line">AGE_RESET_RESTRICTED=25d</span><br><span class="line">AGE_RESET_INVALID=10d</span><br><span class="line"><span class="meta">#</span>######## THESE SETTINGS ARE SPECIFIC TO DAEMON MODE  ##########</span><br><span class="line">DAEMON_LOG = /var/log/denyhosts #日志文件</span><br><span class="line">DAEMON_SLEEP = 30s</span><br><span class="line">DAEMON_PURGE = 1h</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://skypegnu1.blog.51cto.com/8991766/1641064" target="_blank" rel="noopener">http://skypegnu1.blog.51cto.com/8991766/1641064</a></li>
<li><a href="https://help.aliyun.com/knowledge_detail/41212.html" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/41212.html</a></li>
</ul>
<h1 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>启动</span><br><span class="line">sudo  nginx</span><br><span class="line"><span class="meta">#</span>关闭</span><br><span class="line">sudo nginx -s stop</span><br><span class="line"><span class="meta">#</span>检测配置是否正常:</span><br><span class="line">nginx –t</span><br><span class="line"><span class="meta">#</span>重新启动</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><h3 id="nginx反向代理长链接"><a href="#nginx反向代理长链接" class="headerlink" title="nginx反向代理长链接"></a>nginx反向代理长链接</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">upstream chat_cluster&#123;</span><br><span class="line">     ##多server负载,根据ip_hash作分流也可以用weight权重分流</span><br><span class="line">    server 127.0.0.1:10000;</span><br><span class="line">    server 127.0.0.1:10001;</span><br><span class="line">    ip_hash;</span><br><span class="line">    keepalive 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name chat.rootk.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://chat_cluster;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        # very important, nginx will waitting for the response from tornado</span><br><span class="line">        # if the time have passed more than 7200, nginx send http 504 to client</span><br><span class="line">        proxy_read_timeout 7200;</span><br><span class="line">        proxy_set_header Connection "";</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-Ip $remote_addr;</span><br><span class="line">        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="lnmp集成环镜"><a href="#lnmp集成环镜" class="headerlink" title="lnmp集成环镜"></a>lnmp集成环镜</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>#默认网站(虚拟主机)##</span><br><span class="line">/usr/local/nginx/conf/vhost</span><br><span class="line"><span class="meta">#</span>LNMP默认网站配置文件：</span><br><span class="line">/usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="meta">#</span>LNMPA默认网站配置文件：</span><br><span class="line">/usr/local/nginx/conf/nginx.conf 和 /usr/local/apache/conf/extra/httpd-vhosts.conf</span><br><span class="line"><span class="meta">#</span>LAMP默认网站配置文件：</span><br><span class="line">/usr/local/apache/conf/extra/httpd-vhosts.conf</span><br><span class="line"><span class="meta">#</span>LAMP默认网站</span><br><span class="line">/home/wwwroot/default</span><br><span class="line"><span class="meta">#</span>做反代,nginx里面的server_name和tomcat那里的Host保持一致</span><br></pre></td></tr></table></figure>
<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!!!!iptables ACCEPT要放在DROP前才生效 /etc/sysconfig/iptables</span><br><span class="line"><span class="meta">#</span>查看iptables的数据</span><br><span class="line">iptables -L -n</span><br><span class="line"><span class="meta">#</span>保存iptables的数据</span><br><span class="line">service iptables save</span><br><span class="line"><span class="meta">#</span>把某端口的权限开放给某个IP</span><br><span class="line">iptables -I INPUT -s 113.68.65.85 -p tcp --dport 3306 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 3306 -j DROP</span><br><span class="line">service iptables save</span><br><span class="line"><span class="meta">#</span>把某端口权限打开 dport指本地，sport指外部</span><br><span class="line">iptables -A INPUT -p tcp --dport 8888 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 8888 -j ACCEPT</span><br><span class="line"><span class="meta">#</span>限制只能某个ip访问端口</span><br><span class="line">iptables -I INPUT -s  10.21.213.74  -p tcp --dport 8888 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 8888 -j DROP</span><br><span class="line"><span class="meta">#</span>插入到指定位置 -i</span><br><span class="line">iptables -I INPUT 2 -s 14.23.124.130  -p    tcp --dport 8888 -j ACCEPT</span><br><span class="line"><span class="meta">#</span>添加允许之后要DROP掉其他端口的input</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line"><span class="meta">#</span>查看INPUT的linnumber</span><br><span class="line">iptables -L INPUT –line-numbers</span><br><span class="line"><span class="meta">#</span>删除一条</span><br><span class="line">iptables -D INPUT 3</span><br><span class="line"><span class="meta">#</span>保存</span><br><span class="line">service iptables save</span><br><span class="line"><span class="meta">#</span>查看iptables状态</span><br><span class="line">service iptables status</span><br><span class="line"><span class="meta">#</span>iptables服务重启</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>
<h1 id="mysql配置"><a href="#mysql配置" class="headerlink" title="mysql配置"></a>mysql配置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"><span class="meta">#</span> Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>
<h2 id="忘记密码："><a href="#忘记密码：" class="headerlink" title="忘记密码："></a>忘记密码：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service mysqld stop</span><br><span class="line">mysqld_safe --user=root --skip-grant-tables</span><br><span class="line">mysql -u root</span><br><span class="line">use mysql</span><br><span class="line">update user set password=password("new_pass") where user="root";</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h2 id="为root添加远程连接的能力："><a href="#为root添加远程连接的能力：" class="headerlink" title="为root添加远程连接的能力："></a>为root添加远程连接的能力：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO root@"%" IDENTIFIED BY "root";</span><br><span class="line">use mysql;</span><br><span class="line">update user set Password = password('xxx') where User='root';</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta">#</span>修改 Mysql 配置文件 sudo vi /etc/mysql/my.cnf</span><br><span class="line"><span class="meta">#</span>注释#bind-address = 127.0.0.1</span><br><span class="line">重启sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>
<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CREATE USER 'herogame'@'localhost' IDENTIFIED BY 'xxx'</span><br></pre></td></tr></table></figure>
<h2 id="加到开机列表"><a href="#加到开机列表" class="headerlink" title="加到开机列表:"></a>加到开机列表:</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chkconfig -add mysqld</span><br></pre></td></tr></table></figure>
<h2 id="一条命令解决mysql-config-not-found"><a href="#一条命令解决mysql-config-not-found" class="headerlink" title="一条命令解决mysql_config not found:"></a>一条命令解决mysql_config not found:</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>遇到过几次pip安装mysql-python的时候出现如题的问题，在这里记录一下解决方法。</span><br><span class="line"><span class="meta">#</span>找不到mysql_config一般是由于通过lnmp.org或者其他方式安装mysql以后mysql_config是在/usr/local/mysql/bin/里面，这里面的文件不是在任意位置都可以访问的</span><br><span class="line"><span class="meta">#</span>解决方法：</span><br><span class="line">ln -s /usr/local/mysql/bin/mysql_config /usr/local/bin/mysql_config</span><br><span class="line"><span class="meta">#</span>将mysql_config链接到/usr/local/bin目录下</span><br></pre></td></tr></table></figure>
<h1 id="jdk安装"><a href="#jdk安装" class="headerlink" title="jdk安装"></a>jdk安装</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http://blog.csdn.net/sonnet123/article/details/9290561</span><br></pre></td></tr></table></figure>
<h1 id="Tomcat加固"><a href="#Tomcat加固" class="headerlink" title="Tomcat加固"></a>Tomcat加固</h1><h2 id="Tomcat帐号安全"><a href="#Tomcat帐号安全" class="headerlink" title="Tomcat帐号安全"></a>Tomcat帐号安全</h2><ul>
<li>将<code>$CATALINA_HOME\conf\tomcat-users.xml</code>中文件的所有用户都注释掉</li>
<li>删除除了需要部署上去的应用，其余位于<code>$CATALINA_HOME\webapps</code>文件夹中的应用</li>
<li>禁止Tomcat显示目录列表,确保<code>$CATALINA_HOME\conf\web.xml</code>中<code>listings</code>的值为<code>false</code></li>
<li>配置shutdown端口:<code>&lt;Serverport=&quot;未被占用的端口&quot; shutdown=&quot;较为复杂的字符串&quot;&gt;</code></li>
<li>隐藏Tomcat版本<code>catalina.jar\org\apache\catalina\util\ServerInfo.properties</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server.info=需要展现的信息如SmartCity</span><br><span class="line">server.number=SmartCity</span><br><span class="line">server.built=20140101</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="开机管理"><a href="#开机管理" class="headerlink" title="开机管理"></a>开机管理</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install sysv-rc-conf</span><br><span class="line"><span class="meta">#</span>直接加入启动程序，例如把 /etc/init.d/nginx 加入到系统自动 启动列表中：</span><br><span class="line">sudo sysv-rc-conf nginx on   //开启</span><br><span class="line">sudo sysv-rc-conf nginx off  //关闭</span><br></pre></td></tr></table></figure>
<h1 id="入侵日志分析"><a href="#入侵日志分析" class="headerlink" title="入侵日志分析"></a>入侵日志分析</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>查看登录成功日志过滤自己的ip ,-v 是not</span><br><span class="line">last |grep -v 113.68.65.85</span><br><span class="line"><span class="meta">#</span>查看登录日志,是否有暴力破解</span><br><span class="line">tail -500 /var/log/secure |grep   "Failed password"</span><br><span class="line"><span class="meta">#</span>history日志,查看是不是自己的操作</span><br><span class="line">history</span><br><span class="line"><span class="meta">#</span>查看所有用户</span><br><span class="line">cat /etc/passwd</span><br><span class="line"><span class="meta">#</span>查看1天前修改过的常规文件,看别人删除或者修改你的文件没</span><br><span class="line">find . -type f -mtime -1</span><br><span class="line"><span class="meta">#</span>查看开启的服务</span><br><span class="line">chkconfig --list | grep '3:on'</span><br><span class="line"><span class="meta">#</span>查看进程</span><br><span class="line">ps aux | grep python</span><br><span class="line"><span class="meta">#</span>端口情况</span><br><span class="line">sudo lsof -i</span><br><span class="line">sudo netstat -lptu</span><br><span class="line">sudo netstat -tulpn</span><br><span class="line">sudo netstat -ntlp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>查看程序启动时间</span><br><span class="line">ps -eo pid,lstart,etime,cmd |grep skynet</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://www.freebuf.com/articles/web/109001.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/109001.html</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/aix/library/au-sshlocks/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/aix/library/au-sshlocks/</a></li>
<li><a href="http://www.centoscn.com/CentOS/config/2015/0503/5347.html" target="_blank" rel="noopener">http://www.centoscn.com/CentOS/config/2015/0503/5347.html</a></li>
<li><a href="https://www.centos.bz/2012/12/block-port-scan-shell-script/" target="_blank" rel="noopener">https://www.centos.bz/2012/12/block-port-scan-shell-script/</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu,centos 备忘]]></title>
      <url>http://www.farwmarth.com/ubuntu%E5%A4%87%E5%BF%98/</url>
      <content type="html"><![CDATA[<h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件:"></a>安装常用软件:</h2><ul>
<li><code>subversion</code>  svn 版本命令行</li>
<li><code>lua5.2</code>  lua版本</li>
<li><code>ssh</code>    ssh 连接</li>
<li><code>nautilus-open-terminal</code>   终端</li>
<li><code>fcitx-table-wbpy</code>  五笔</li>
<li><code>avant-window-navigator</code> 启动器位置</li>
</ul>
<a id="more"></a>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 查看版本</span><br><span class="line">cat /etc/issue</span><br><span class="line"><span class="meta">#</span> 修改密码</span><br><span class="line">sudo passwd 用户名</span><br><span class="line"><span class="meta">#</span> 查看端口占用</span><br><span class="line">lsof -i:80</span><br><span class="line"><span class="meta">#</span> 所占端口</span><br><span class="line">netstat -antp | grep  skynet</span><br><span class="line"><span class="meta">#</span> 查看环境变量</span><br><span class="line">env</span><br><span class="line"><span class="meta">#</span> 查看当前系统版本信息</span><br><span class="line">cat /etc/issue</span><br><span class="line"><span class="meta">#</span> 查看端口数据</span><br><span class="line">tcpdump -s 0 -X 'tcp dst port 8888'</span><br><span class="line"><span class="meta">#</span> 卸载程序</span><br><span class="line">sudo dpkg -l sub*</span><br><span class="line">sudo dpkg -r sublime-text</span><br><span class="line"><span class="meta">#</span> 查看磁盘占用 </span><br><span class="line">du -sh /* </span><br><span class="line"><span class="meta">#</span>查找内存rsz为实际内存</span><br><span class="line">ps -e -o 'pid,comm,args,pcpu,rsz,vsz,stime,user,uid' |grep skynet</span><br><span class="line">ps -e -o 'pid,comm,rsz' |grep skynet</span><br><span class="line"><span class="meta">#</span>查找最后多少行信息</span><br><span class="line"> tail -n 50 nohup.out</span><br></pre></td></tr></table></figure>
<h1 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>按时间反序排序当前文件夹中文件（-r反序）</span><br><span class="line">ls -ltr</span><br><span class="line"><span class="meta">#</span>按时间</span><br><span class="line">ll -t -time-style=full-iso</span><br><span class="line"><span class="meta">#</span>在当前文件夹内查找最近一天内更改的文件（包括子文件夹）：</span><br><span class="line">find . -type f -mtime -1</span><br><span class="line"><span class="meta">#</span>1天以前更改的文件：</span><br><span class="line">find . -type f -mtime +1</span><br><span class="line"><span class="meta">#</span>最近10分钟内状态变化的文件：</span><br><span class="line">find . -type f -cmin -10</span><br><span class="line"><span class="meta">#</span>一天内修改过的文件</span><br><span class="line">find . -atime -1</span><br><span class="line"><span class="meta">#</span>查找指定名字的文件</span><br><span class="line">find . -name "*.xmind"  </span><br><span class="line"><span class="meta">#</span> 按大小查找</span><br><span class="line">find . -size +1000c -print </span><br><span class="line"><span class="meta">#</span>删除目录下所有的pyc</span><br><span class="line">find . -name "*.pyc" -exec rm -f &#123;&#125; \;</span><br><span class="line"><span class="meta">#</span>tree :生成目录结构</span><br><span class="line">tree . -L 1 #设置层次</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>linux 修改时间同步时间</span><br><span class="line">date -s 14:36:00</span><br><span class="line">clock -w</span><br><span class="line">/usr/sbin/ntpdate –u 0.asia.pool.ntp.org</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>按名称查找 </span><br><span class="line">find / -name mysql</span><br><span class="line"><span class="meta">#</span>查看glibc版本</span><br><span class="line">ldd  --version</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>指定前后行数</span><br><span class="line">cat a.txt |grep -C 5 xx</span><br><span class="line"><span class="meta">#</span>统计字符串出现次数</span><br><span class="line">cat logging.2016-11-19--01-03-29-31812.log |grep -c _recv_pay_data</span><br></pre></td></tr></table></figure>
<h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><ul>
<li>在Ubuntu下安装jdk 出现./install.sfx.2354: not found无法安装成功<figure class="highlight plain"><figcaption><span>apt-get install g++-multilib ```</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ 安装</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">sudo chmod u+x jdk-6u23-ea-bin-b03-linux-i586-18_oct_2010.bin   </span><br><span class="line">./jdk-6u23-ea-bin-b03-linux-i586-18_oct_2010.bin  </span><br><span class="line"></span><br><span class="line">sudo gedit ~/.bashrc </span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/home/far/Develop/tools/jdk1.6.0_38 </span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="改变键盘布局ctrl-win"><a href="#改变键盘布局ctrl-win" class="headerlink" title="改变键盘布局ctrl win"></a>改变键盘布局ctrl win</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -e &quot;ctrl:\|:ctrl&quot; /usr/share/X11/xkb/rules/evdev.lst</span><br><span class="line">setxkbmap -option altwin:ctrl_win</span><br><span class="line">setxkbmap -print</span><br></pre></td></tr></table></figure>
<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-pycurl</span><br><span class="line">sudo apt-get install python-pip</span><br><span class="line">--dabian</span><br><span class="line">sudo yum install gcc python-devel</span><br><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br><span class="line">查看已安装的python模块: help("modules")</span><br></pre></td></tr></table></figure>
<h3 id="给alias添加命令行参数"><a href="#给alias添加命令行参数" class="headerlink" title="给alias添加命令行参数"></a>给alias添加命令行参数</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias pc='commit() &#123; git add .; git commit -m "$1"; git push origin source &#125;; commit'</span><br></pre></td></tr></table></figure>
<h3 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h3><ul>
<li>上传文件<figure class="highlight plain"><figcaption><span>-P 端口号 -l 用户 -r 本地路径  服务器ip:服务器目录</span></figcaption><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">+ 备份 PuTTY 配置文件</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>开始-&gt;运行(Win+R)-&gt;regedit 找到 HKEY_CURRENT_USER/Software/SimonTatham 在 SimonTatham 这个节点上点击右键，选择导出，保存即可<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ putty在登录之后自动切换到目录</span><br><span class="line">```shell</span><br><span class="line">ssh---&gt;remote command 添加</span><br><span class="line">cd /my/path ; /bin/bash</span><br></pre></td></tr></table></figure></p>
<h2 id="ubuntu-常见问题"><a href="#ubuntu-常见问题" class="headerlink" title="ubuntu 常见问题"></a>ubuntu 常见问题</h2><h3 id="Ubuntu无法找到add-apt-repository问题的解决方法"><a href="#Ubuntu无法找到add-apt-repository问题的解决方法" class="headerlink" title="Ubuntu无法找到add-apt-repository问题的解决方法"></a>Ubuntu无法找到add-apt-repository问题的解决方法</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install python-software-properties</span><br><span class="line">apt-get install software-properties-common</span><br></pre></td></tr></table></figure>
<h3 id="应用菜单栏消失"><a href="#应用菜单栏消失" class="headerlink" title="应用菜单栏消失"></a>应用菜单栏消失</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">initctl restart unity-panel-service</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ubuntu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[国内源]]></title>
      <url>http://www.farwmarth.com/%E5%9B%BD%E5%86%85%E6%BA%90/</url>
      <content type="html"><![CDATA[<p>清华大学的源太全面了:<br><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/</a></p>
<h1 id="pypi"><a href="#pypi" class="headerlink" title="pypi"></a>pypi</h1><p>镜像状态监控: <a href="https://www.pypi-mirrors.org/" target="_blank" rel="noopener">https://www.pypi-mirrors.org/</a></p>
<ul>
<li>豆瓣:<a href="http://pypi.douban.com/" target="_blank" rel="noopener">http://pypi.douban.com/</a> </li>
<li>中国科学技术大学:<a href="http://pypi.mirrors.ustc.edu.cn/" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/</a>  </li>
<li>阿里云:<a href="http://mirrors.aliyun.com/pypi/simple" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple</a></li>
</ul>
<p>临时使用: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -i https://&lt;mirror&gt;/simple &lt;package&gt;</span><br></pre></td></tr></table></figure>
<p>全局设置:<br>添加到<code>~/.pip/pip.conf</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://&lt;mirror&gt;/simple</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="Brew"><a href="#Brew" class="headerlink" title="Brew"></a>Brew</h1><h2 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install proxychains-ng</span><br><span class="line">vim /usr/local/Cellar/proxychains-ng/4.11/etc/proxychains.conf  </span><br><span class="line"># 将最后一行的 socks4 127.0.0.1 9095 改成 </span><br><span class="line">socks5  127.0.0.1 1080  # 这个端口大家都懂什么意思吧</span><br><span class="line">proxychains4 brew install xxxxxxx</span><br></pre></td></tr></table></figure>
<h2 id="http-ban-ninja"><a href="#http-ban-ninja" class="headerlink" title="http://ban.ninja/"></a><a href="http://ban.ninja/" target="_blank" rel="noopener">http://ban.ninja/</a></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 设置环境变量 HOMEBREW_BOTTLE_DOMAIN 即可使用本镜像源加速下载 Homebrew 资源。</span><br><span class="line"># bash</span><br><span class="line"># 在 ~/.bashrc 中加入</span><br><span class="line">export HOMEBREW_BOTTLE_DOMAIN=http://7xkcej.dl1.z0.glb.clouddn.com</span><br><span class="line"># fish</span><br><span class="line"># 在 ~/.config/fish/config.fish 中加入</span><br><span class="line">set -x HOMEBREW_BOTTLE_DOMAIN http://7xkcej.dl1.z0.glb.clouddn.com</span><br></pre></td></tr></table></figure>
<h2 id="清华大学开源软件镜像站"><a href="#清华大学开源软件镜像站" class="headerlink" title="清华大学开源软件镜像站"></a>清华大学开源软件镜像站</h2><p>替换现有的git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"></span><br><span class="line">cd /usr/local/Library/Taps/homebrew/homebrew-core</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<p>使用homebrew-science或者homebrew-python</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/Library/Taps/homebrew/homebrew-science</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-science.git</span><br><span class="line"></span><br><span class="line">cd /usr/local/Library/Taps/homebrew/homebrew-python</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-python.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<h3 id="Homebrew-bottles"><a href="#Homebrew-bottles" class="headerlink" title="Homebrew-bottles"></a>Homebrew-bottles</h3><p>Homebrew-bottles 镜像使用帮助<br>注:该镜像是 Homebrew 二进制预编译包的镜像。本镜像站同时提供 Homebrew 的 formula 索引的镜像（即 brew update 时所更新内容），请参考 Homebrew 镜像使用帮助。</p>
<p>临时替换</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles</span><br></pre></td></tr></table></figure>
<p>长期替换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &apos;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&apos; &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>
<h2 id="coding-net"><a href="#coding-net" class="headerlink" title="coding.net"></a>coding.net</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/local &amp;&amp; git remote set-url origin https://git.coding.net/homebrew/homebrew.git</span><br><span class="line">cd $home &amp;&amp; brew update</span><br></pre></td></tr></table></figure>
<h1 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h1><p>(<a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener">https://github.com/yarnpkg/yarn</a>)</p>
<p>淘宝源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn config set registry 'https://registry.npm.taobao.org'</span><br></pre></td></tr></table></figure>
<h1 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h1><p>临时使用<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install</span><br></pre></td></tr></table></figure></p>
<p>默认使用<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm set registry https://registry.npm.taobao.org</span><br><span class="line">或编辑 ~/.npmrc 添加</span><br></pre></td></tr></table></figure></p>
<p>安装淘宝的cnpm<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>
<h1 id="git-proxy"><a href="#git-proxy" class="headerlink" title="git proxy"></a>git proxy</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#设置</span><br><span class="line">git config --global http.proxy &apos;socks5://127.0.0.1:1080&apos;</span><br><span class="line">git config --global https.proxy &apos;socks5://127.0.0.1:1080&apos;</span><br><span class="line">#取消</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>
<h2 id="使用proxychains4"><a href="#使用proxychains4" class="headerlink" title="使用proxychains4"></a>使用proxychains4</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#安装</span><br><span class="line">brew install proxychains-ng</span><br><span class="line">#编译代理地址</span><br><span class="line">vim /usr/local/etc/proxychains.conf</span><br><span class="line">｀http xxx.com 8080｀</span><br><span class="line">#设置别名</span><br><span class="line">alias pc=&quot;proxychains4&quot;</span><br><span class="line">#使用</span><br><span class="line">pc git clone xxx.git</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> soft </category>
            
        </categories>
        
        
        <tags>
            
            <tag> npm </tag>
            
            <tag> pypi </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[域名解析的一些概念]]></title>
      <url>http://www.farwmarth.com/a%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>##概念</p>
<ul>
<li><p>A记录（IP指向）<br>用户可以在此设置子域名并指向到自己的目标主机地址上，从而实现通过域名找到服务器找到相应网页的功能。<br>说明：指向的目标主机地址类型只能使用IP地址。</p>
</li>
<li><p>CNAME（别名指向）</p>
</li>
</ul>
<p>通常称别名指向。您可以为一个主机设置别名。相当于用子域名来代替ip地址，优点是如果ip地址变化，只需要改动子域名的解析，而不需要逐一改变ip地址解析。</p>
<pre><code>1. CNAME的目标主机地址只能使用主机名，不能使用IP地址；
2. 主机名前不能有任何其他前缀，如：http://等是不被允许的；
3. A记录优先于CNAME记录。即如果一个主机地址同时存在A记录和CNAME记录，则CNAME记录不生效。
</code></pre><a id="more"></a>
<ul>
<li>MX记录</li>
</ul>
<p>邮件交换记录。用于将以该域名为结尾的电子邮件指向对应的邮件服务器以进行处理。如：用户所用的邮件是以域名mydomain.com为结尾的，则需要在管理界面中添加该域名的MX记录来处理所有以@mydomain.com结尾的邮件。<br>说明：</p>
<pre><code>1. MX记录可以使用主机名或IP地址；
2. MX记录可以通过设置优先级实现主辅服务器设置，&quot;优先级&quot;中的数字越小表示级别越高。也可以使用相同优先级达到负载均衡的目的；
3. 如果在&quot;主机名&quot;中填入子域名则此MX记录只对该子域名生效。
</code></pre><ul>
<li>NS记录（Name Server）</li>
</ul>
<p>是域名服务器记录。用来表明由哪台服务器对该域名进行解析。您注册域名时，总有默认的DNS服务器，每个注册的域名都是由一个DNS域名服务器来进行解析的，DNS服务器NS记录地址一般以以下的形式出现：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ns1.domain.com</span><br><span class="line">ns2.domain.com</span><br></pre></td></tr></table></figure></p>
<p>说明：</p>
<pre><code>1. &quot;优先级&quot;中的数字越小表示级别越高；
2. &quot;IP地址/主机名&quot;中既可以填写IP地址，也可以填写像ns.mydomain.com这样的主机地址，但必须保证该主机地址有效。如，将 news.mydomain.com的NS记录指向到ns.mydomain.com，在设置NS记录的同时还需要设置ns.mydomain.com的 指向，否则NS记录将无法正常解析；
3. NS记录优先于A记录。即，如果一个主机地址同时存在NS记录和A记录，则A记录不生效。这里的NS记录只对子域名生效。
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> domain </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在CentOS 6.X 上升级 Python为 2.7]]></title>
      <url>http://www.farwmarth.com/%E5%8D%87%E7%BA%A7centos%E4%B8%8A%E7%9A%84python/</url>
      <content type="html"><![CDATA[<pre><code>CentOS 6.X 自带的python版本是 2.6 , 但是2.6已经被不被官方支持了，今天写后台程序放到阿里云上运行发现2.6的一些api和2.7不一样了。于是想升级下python
</code></pre><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y zlib-devel bzip2-devel openssl-devel xz-libs wget</span><br></pre></td></tr></table></figure>
<h2 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://www.python.org/ftp/python/2.7.8/Python-2.7.8.tar.xz</span><br><span class="line"># 可以使用国内的源</span><br><span class="line">wget http://mirrors.sohu.com/python/2.7.8/Python-2.7.8.tar.xz</span><br><span class="line">xz -d Python-2.7.8.tar.xz</span><br><span class="line">tar -xvf Python-2.7.8.tar</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="安装详情："><a href="#安装详情：" class="headerlink" title="安装详情："></a>安装详情：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 进入目录:</span><br><span class="line">cd Python-2.7.8</span><br><span class="line"># 运行配置 configure:</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line"># 编译安装:</span><br><span class="line">make</span><br><span class="line">make altinstall</span><br><span class="line"># 检查 Python 版本:</span><br><span class="line">[root@dbmasterxxx ~]# python2.7 -V</span><br><span class="line">Python 2.7.8</span><br></pre></td></tr></table></figure>
<h2 id="链接python"><a href="#链接python" class="headerlink" title="链接python"></a>链接python</h2><p>为了使我们刚安装的<code>2.7.8</code> 生效要么加入<code>PATH</code>目录要么进入软连接：</p>
<h3 id="加入PATH"><a href="#加入PATH" class="headerlink" title="加入PATH"></a>加入PATH</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH=&quot;/usr/local/bin:$PATH&quot;</span><br></pre></td></tr></table></figure>
<h3 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#如果连接时提示错误“ln: creating symbolic link `/usr/bin/python&apos;: File exists”则先改名</span><br><span class="line">mv /usr/bin/python /usr/bin/python2.6</span><br><span class="line">ln -s /usr/local/bin/python2.7  /usr/bin/python</span><br></pre></td></tr></table></figure>
<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@dbmasterxxx ~]# python -V</span><br><span class="line">Python 2.7.8</span><br><span class="line">[root@dbmasterxxx ~]# which python </span><br><span class="line">/usr/bin/python</span><br></pre></td></tr></table></figure>
<h2 id="安装-setuptools"><a href="#安装-setuptools" class="headerlink" title="安装 setuptools"></a>安装 setuptools</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#获取软件包</span><br><span class="line">wget --no-check-certificate https://pypi.python.org/packages/source/s/setuptools/setuptools-1.4.2.tar.gz</span><br><span class="line"># 解压:</span><br><span class="line">tar -xvf setuptools-1.4.2.tar.gz</span><br><span class="line">cd setuptools-1.4.2</span><br><span class="line"># 使用 Python 2.7.8 安装 setuptools</span><br><span class="line">python2.7 setup.py install</span><br></pre></td></tr></table></figure>
<h2 id="安装-PIP"><a href="#安装-PIP" class="headerlink" title="安装 PIP"></a>安装 PIP</h2><p><code>curl  https://bootstrap.pypa.io/get-pip.py | python2.7 -</code></p>
<h2 id="修复-yum-工具"><a href="#修复-yum-工具" class="headerlink" title="修复 yum 工具"></a>修复 yum 工具</h2><p>此时yum应该是失效的，因为此时默认python版本已经是2.7了。而yum需要的是2.6 所以：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#修改 yum中的python </span><br><span class="line">将第一行  #!/usr/bin/python  改为 #!/usr/bin/python2.6</span><br></pre></td></tr></table></figure>
<h2 id="安装sqlite3"><a href="#安装sqlite3" class="headerlink" title="安装sqlite3"></a>安装sqlite3</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install sqlite-devel</span><br><span class="line">pip install pysqlite</span><br><span class="line"><span class="meta">#</span>重新编译python</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给Iphone换个自定义的铃声]]></title>
      <url>http://www.farwmarth.com/%E7%BB%99Iphone%E6%8D%A2%E4%B8%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E9%93%83%E5%A3%B0/</url>
      <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>iPhone的铃声格式是m4r格式，普通的mp3无法直接设置为铃声,所以需要使用铃声制作工具来转换,一般电话铃声的最长时长设置为40s,闹钟的时长最长为30s</p>
<h1 id="制作工具"><a href="#制作工具" class="headerlink" title="制作工具"></a>制作工具</h1><h2 id="Ringer制作铃声"><a href="#Ringer制作铃声" class="headerlink" title="Ringer制作铃声"></a>Ringer制作铃声</h2><p>Ringer是Mac上制作铃声的工具,操作非常简单,将下载的歌曲播放到Ringer的主界面</p>
<ul>
<li>大音轨用于精确控制,双击大的音轨可以从点击处开始播放,设置头尾的Preview可以听整个铃声,下面的小音轨用来快速拖动预览声音</li>
<li>可以制作两种:铃声和立名声音,没发现太大的区别只是最大时长不一样</li>
<li>FadeOut/FadeIn : 为铃声添加淡入淡出效果</li>
<li>设置好后点击Create按钮即可将制作好的铃声自动导入到Itunes中</li>
</ul>
<a id="more"></a>
<p><img src="http://farwmarth.bestnewbee.com/images/ringer.png" alt="ringe"></p>
<h2 id="Itools制作铃声"><a href="#Itools制作铃声" class="headerlink" title="Itools制作铃声"></a>Itools制作铃声</h2><p><img src="http://farwmarth.bestnewbee.com/images/itools_ring.png" alt="ringe"></p>
<h2 id="Itunes制作铃声"><a href="#Itunes制作铃声" class="headerlink" title="Itunes制作铃声"></a>Itunes制作铃声</h2><p>其实Itunes也可以制作铃声,步骤稍微繁琐一些.<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.25.27.png" alt="屏幕快照 2016-12-18 20.25.27"></p>
<p>在显示简介界面来截取铃声长度,如果要预览可以点击确定,在itunes上面的播放区播放预览<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.32.17.png" alt="屏幕快照 2016-12-18 20.32.17"><br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.32.51.png" alt="屏幕快照 2016-12-18 20.32.51"></p>
<p>转换AAC版本在新版在itunes中移动了位置，并不在右键菜单中,而在文件菜单<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.33.20.png" alt="屏幕快照 2016-12-18 20.33.20"></p>
<p><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.33.51.png" alt="屏幕快照 2016-12-18 20.33.51"></p>
<p>转换好后签名为m4r<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.38.38.png" alt="屏幕快照 2016-12-18 20.38.38"></p>
<p>切换到铃声选项<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.39.22.png" alt="屏幕快照 2016-12-18 20.39.22"></p>
<p>将刚才重命名的m4r文件添加资料库中,如果是在itnues音乐目录下直接改名的可能要移动到桌面或其他位置，不然会出现相同名字而导入失败<br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2020.40.07.png" alt="屏幕快照 2016-12-18 20.40.07"></p>
<p><img src="http://farwmarth.bestnewbee.com/images/2016-12-18%2021.04.34.png" alt="屏幕快照 2016-12-18 21.04.34"></p>
<h1 id="Itunes同步"><a href="#Itunes同步" class="headerlink" title="Itunes同步"></a>Itunes同步</h1><p><img src="http://farwmarth.bestnewbee.com/images/2016-12-18_13-54-31_.png" alt="Voila_Capture 2016-12-18_13-54-31_"><br><img src="http://farwmarth.bestnewbee.com/images/2016-12-18_13-56-22_.png" alt="Voila_Capture 2016-12-18_13-56-22_"></p>
<h1 id="Iphone上的铃声制作软件"><a href="#Iphone上的铃声制作软件" class="headerlink" title="Iphone上的铃声制作软件"></a>Iphone上的铃声制作软件</h1><p>iphone上在线下载设置铃声的软件不在少数,制作铃声的却寥寥无几。<br>目前只找到了这个：<br><a href="https://itunes.apple.com/cn/app/shou-ji-ling-sheng-mian-fei-ban/id435945279?mt=8" target="_blank" rel="noopener">https://itunes.apple.com/cn/app/shou-ji-ling-sheng-mian-fei-ban/id435945279?mt=8</a><br>可以下载搜索并且自己裁剪铃声，但是有广告，体验也不是太好</p>
<h1 id="设置铃声"><a href="#设置铃声" class="headerlink" title="设置铃声"></a>设置铃声</h1><p> 同步成功后在iphone的铃声设置界面可以找到刚才我们自己制作的铃声</p>
]]></content>
      
        <categories>
            
            <category> soft </category>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> iphone </tag>
            
            <tag> skill </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何避免一些危险的指令操作]]></title>
      <url>http://www.farwmarth.com/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E4%B8%80%E4%BA%9B%E5%8D%B1%E9%99%A9%E7%9A%84%E6%8C%87%E4%BB%A4%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="git引发的事故"><a href="#git引发的事故" class="headerlink" title="git引发的事故"></a>git引发的事故</h1><p>上周服务器的一位同事一个不小心用了<code>git push -f</code>,抹掉了我们一上午的工作内容,还好抹掉的记录不是太多大概八九条.<br>各自花了大概半小时恢复了数据</p>
<h2 id="恢复过程"><a href="#恢复过程" class="headerlink" title="恢复过程"></a>恢复过程</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>查看所有的本地操作数据</span><br><span class="line">git reflog</span><br><span class="line"><span class="meta">#</span>或者查看所有数据,找到被抹掉的commit</span><br><span class="line">git log -g</span><br><span class="line"><span class="meta">#</span>复制一个提交节点并在当前分支做一次完全一样的新提交。</span><br><span class="line">git cherry-pick commit_id</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>可以看出强制提交这个命令的危险性,如何来禁止强制呢?</p>
<h2 id="禁止强制推送"><a href="#禁止强制推送" class="headerlink" title="禁止强制推送"></a>禁止强制推送</h2><h3 id="本地禁止强制推送"><a href="#本地禁止强制推送" class="headerlink" title="本地禁止强制推送"></a>本地禁止强制推送</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global receive.denyNonFastForwards true</span><br><span class="line">git config --global receive.denyDeletes true</span><br></pre></td></tr></table></figure>
<h3 id="hook方式"><a href="#hook方式" class="headerlink" title="hook方式"></a>hook方式</h3><p><a href="https://gist.github.com/stefansundin/d465f1e331fc5c632088" target="_blank" rel="noopener">https://gist.github.com/stefansundin/d465f1e331fc5c632088</a></p>
<h3 id="gitbucket-远程仓库禁止强制推送"><a href="#gitbucket-远程仓库禁止强制推送" class="headerlink" title="gitbucket 远程仓库禁止强制推送"></a>gitbucket 远程仓库禁止强制推送</h3><p>gitbucket提供了分支权限配置: <a href="https://confluence.atlassian.com/bitbucketserver/stash-3-10-release-notes-776640856.html" target="_blank" rel="noopener">参考</a></p>
<p><code>Rewriting history</code> 就是防止强制推送</p>
<p><img src="https://confluence.atlassian.com/bitbucketserver/files/776640856/776640857/1/1433804733697/STASH310_branch_permissions.png" alt=""></p>
<h3 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h3><p><a href="https://help.github.com/articles/configuring-protected-branches/" target="_blank" rel="noopener">https://help.github.com/articles/configuring-protected-branches/</a></p>
<p><img src="http://farwmarth.bestnewbee.com/images/git_push_force.png" alt=""></p>
<h3 id="gitlab配置"><a href="#gitlab配置" class="headerlink" title="gitlab配置"></a>gitlab配置</h3><p><a href="https://about.gitlab.com/2014/11/26/keeping-your-code-protected/" target="_blank" rel="noopener">https://about.gitlab.com/2014/11/26/keeping-your-code-protected/</a></p>
<p><img src="https://about.gitlab.com/images/protected_branches.png" alt=""></p>
<h1 id="强制删除rm-rf"><a href="#强制删除rm-rf" class="headerlink" title="强制删除rm -rf"></a>强制删除<code>rm -rf</code></h1><p>mac下可以用zsh这样的终端<code>rm -rf /</code>会有二次确认</p>
<h3 id="trash-cli"><a href="#trash-cli" class="headerlink" title="trash-cli"></a>trash-cli</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>https://github.com/andreafrancia/trash-cli</span><br><span class="line">easy_install trash-cli</span><br></pre></td></tr></table></figure>
<h3 id="rmtrash"><a href="#rmtrash" class="headerlink" title="rmtrash"></a>rmtrash</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install rmtrash</span><br><span class="line"><span class="meta">#</span>配置</span><br><span class="line">alias rm="rmtrash"</span><br><span class="line">alias rmdir="rmdirtrash"</span><br></pre></td></tr></table></figure>
<h3 id="mv替代rm"><a href="#mv替代rm" class="headerlink" title="mv替代rm"></a>mv替代rm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/.trash</span><br><span class="line">alias rm=trash  </span><br><span class="line">alias r=trash  </span><br><span class="line">alias rl="ls ~/.trash"</span><br><span class="line">alias ur=undelfile</span><br><span class="line">undelfile()</span><br><span class="line">&#123;</span><br><span class="line">  mv -i ~/.trash/$@ ./</span><br><span class="line">&#125;</span><br><span class="line">trash()</span><br><span class="line">&#123;  </span><br><span class="line">  mv $@ ~/.trash/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> hook </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[权重随机算法]]></title>
      <url>http://www.farwmarth.com/%E6%9D%83%E9%87%8D%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>带权随机算法在游戏开发中应用广泛,最近在做商店随机商品又遇到这种问题,重新思考并总结了一下带权随机的做法.</p>
<p>带权随机其实很好理解<br>比如我们希望抽到A的抽到的比重是10,B的比重是5,C的比重是1,如下图<br><img src="http://farwmarth.bestnewbee.com/images/044TM313-0.jpg" alt="044TM313"></p>
<a id="more"></a>
<h2 id="权重和计算"><a href="#权重和计算" class="headerlink" title="权重和计算"></a>权重和计算</h2><p>常规做法是计算权重总和sum，然后在1到sum之间随机选择一个数R，之后遍历整个集合，统计遍历的项的权重之和，如果大于等于R，就停止遍历，选择遇到的项<br>好处:没有额外的空间占用，算法也比较简单。<br>坏处:选取的时候要遍历集合，时间复杂度是O（n）。</p>
<h3 id="常规做法"><a href="#常规做法" class="headerlink" title="常规做法"></a>常规做法</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">math</span>.<span class="built_in">randomseed</span>(<span class="built_in">os</span>.<span class="built_in">time</span>())</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pick</span><span class="params">(rules, count)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> total_weight = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _, v <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">        total_weight = total_weight + v.weight</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>, count <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> rd = <span class="built_in">math</span>.<span class="built_in">random</span>(total_weight)</span><br><span class="line">        <span class="keyword">for</span> _, rule <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> rd &lt;= rule.weight <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">table</span>.<span class="built_in">insert</span>(ret, rule.item)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                rd = rd - rule.weight</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">weight_unique_pick_one</span><span class="params">(rules, count)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">get_total_weight</span><span class="params">( rules )</span></span></span><br><span class="line">        <span class="keyword">local</span> total_weight = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> _, v <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">            total_weight = total_weight + v.weight</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> total_weight</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> total_weight =get_total_weight(rules)</span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>, count <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> rd = <span class="built_in">math</span>.<span class="built_in">random</span>(total_weight)</span><br><span class="line">        <span class="keyword">for</span> index, rule <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> rd &lt;= rule.weight <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">table</span>.<span class="built_in">insert</span>(ret, rule.item)</span><br><span class="line">                <span class="built_in">table</span>.<span class="built_in">remove</span>(rules, index)</span><br><span class="line">                total_weight =get_total_weight(rules)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                rd = rd - rule.weight</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--test</span></span><br><span class="line"><span class="keyword">local</span> ret = weight_unique_pick_one(&#123;&#123;item=<span class="number">1</span>,weight=<span class="number">1</span>&#125;,&#123;item=<span class="number">2</span>,weight=<span class="number">50</span>&#125;,&#123;item=<span class="number">3</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">4</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">5</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">6</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">7</span>,weight=<span class="number">50</span>&#125;,&#123;item=<span class="number">8</span>,weight=<span class="number">4</span>&#125;&#125;,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"------------------"</span>)</span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(ret) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(i,v)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="按照权重排序优化"><a href="#按照权重排序优化" class="headerlink" title="按照权重排序优化"></a>按照权重排序优化</h3><p>对项目集按照权重排序。这样遍历的时候，概率高的项排在前面，减少遍历的项。<br>比较{A:5，B:2，C:2，D:1}和{B:2，C:2，A:5，D:1}<br>前者遍历步数的期望是5/10<em>1+2/10</em>2+2/10<em>3+1/10</em>4而后者是2/10<em>1+2/10</em>2+5/10<em>3+1/10</em>4。<br>好处:提高了平均选取速度。<br>坏处:需要进行排序，并且不易添加删除修改项。</p>
<p>实现很简单将上面的<code>weight_unique_pick_one</code>方法中<code>rules</code>按字段<code>weight</code>做一个高到低排序就可以了<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">weight_unique_pick_one</span><span class="params">(rules, count)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line">    <span class="built_in">table</span>.<span class="built_in">sort</span>(rules,<span class="function"><span class="keyword">function</span><span class="params">(a, b)</span></span> <span class="keyword">return</span> b.weight &lt; a.weight <span class="keyword">end</span> )</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h3 id="折半查找改进版本"><a href="#折半查找改进版本" class="headerlink" title="折半查找改进版本"></a>折半查找改进版本</h3><p>折半查找的改进方法是将所有项的区间定义头尾,构造一个已排序的区间,然后用二分法加快查找<code>random</code>的区间</p>
<p>实现如下:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">binsearch</span><span class="params">( t,value )</span></span></span><br><span class="line">    <span class="keyword">local</span> i_start,i_end,i_mid = <span class="number">1</span>,#t,<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i_start &lt;= i_end <span class="keyword">do</span></span><br><span class="line">        i_mid = <span class="built_in">math</span>.<span class="built_in">floor</span>( (i_start+i_end)/<span class="number">2</span> )</span><br><span class="line">        <span class="keyword">local</span> value2 =  t[i_mid]</span><br><span class="line">        <span class="keyword">if</span> value == value2 <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> i_mid</span><br><span class="line">        <span class="keyword">elseif</span>  value &gt; value2 <span class="keyword">then</span></span><br><span class="line">            i_end = i_mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i_start = i_mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">bisect_left</span><span class="params">( t,value )</span></span></span><br><span class="line">    <span class="keyword">local</span> i_start,i_end,i_mid = <span class="number">1</span>,#t,<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i_start &lt; i_end <span class="keyword">do</span></span><br><span class="line">        i_mid = <span class="built_in">math</span>.<span class="built_in">floor</span>( (i_start+i_end)/<span class="number">2</span> )</span><br><span class="line">        <span class="keyword">local</span> value2 =  t[i_mid]</span><br><span class="line">        <span class="keyword">if</span>  value2 &lt; value <span class="keyword">then</span></span><br><span class="line">            i_start = i_mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i_end = i_mid</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> i_start</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">get_weight_interval</span><span class="params">( rules )</span></span></span><br><span class="line">    <span class="keyword">local</span> total_weight = <span class="number">0</span></span><br><span class="line">    <span class="keyword">local</span> weight_interval = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _, v <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">        total_weight = total_weight + v.weight</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(weight_interval,total_weight)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> total_weight,weight_interval</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">weight_unique_pick</span><span class="params">(rules, count)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> total_weight,weight_interval =get_weight_interval(rules)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>, count <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> rd = <span class="built_in">math</span>.<span class="built_in">random</span>(total_weight)</span><br><span class="line">        <span class="keyword">local</span> b_index = bisect_left(weight_interval,rd)</span><br><span class="line">        <span class="keyword">local</span> item = rules[b_index]</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(ret, item.item)</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">remove</span>(rules, b_index)</span><br><span class="line">        total_weight,weight_interval =get_weight_interval(rules)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--test</span></span><br><span class="line"><span class="keyword">local</span> ret = weight_unique_pick(&#123;&#123;item=<span class="number">1</span>,weight=<span class="number">1</span>&#125;,&#123;item=<span class="number">2</span>,weight=<span class="number">100</span>&#125;,&#123;item=<span class="number">3</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">4</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">5</span>,weight=<span class="number">50</span>&#125;&#125;,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"------------------"</span>)</span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(ret) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(i,v)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="纯算法实现"><a href="#纯算法实现" class="headerlink" title="纯算法实现"></a>纯算法实现</h2><p>算法来源:<br><a href="http://utopia.duth.gr/~pefraimi/research/data/2007EncOfAlg.pdf" target="_blank" rel="noopener">http://utopia.duth.gr/~pefraimi/research/data/2007EncOfAlg.pdf</a><br>参考:<br><a href="http://kanglinxm.blogspot.jp/2013/10/blog-post.html" target="_blank" rel="noopener">http://kanglinxm.blogspot.jp/2013/10/blog-post.html</a></p>
<p>纯算法实现的关键实现:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _,item <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> u = <span class="built_in">math</span>.<span class="built_in">random</span>();</span><br><span class="line">    <span class="keyword">local</span> w_i = <span class="number">1</span> / item.weight;</span><br><span class="line">    <span class="keyword">local</span> k = <span class="built_in">math</span>.<span class="built_in">pow</span>(u, w_i);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>随机一个<code>0-1</code>之间的小数作为底数,将<code>1/权重</code>作为幂,权重越大,随机数相同时结果越大.将<code>k</code>由大到小排序取前<code>count</code>个即为要随机的个数.这种算法缺点是必须随机所有的项得到随机结果集.</p>
<p>完整实现:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">weight_unique_math</span><span class="params">(rules, count)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line">    <span class="keyword">local</span> all_random_weight = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _,item <span class="keyword">in</span> <span class="built_in">ipairs</span>(rules) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> u = <span class="built_in">math</span>.<span class="built_in">random</span>();</span><br><span class="line">        <span class="keyword">local</span> w_i = <span class="number">1</span> / item.weight;</span><br><span class="line">        <span class="keyword">local</span> k = <span class="built_in">math</span>.<span class="built_in">pow</span>(u, w_i);</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(all_random_weight,&#123;item =item.item,random_weight = k&#125;)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">table</span>.<span class="built_in">sort</span>(all_random_weight,<span class="function"><span class="keyword">function</span><span class="params">(a, b)</span></span> <span class="keyword">return</span> b.random_weight &lt; a.random_weight <span class="keyword">end</span> )</span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>,count <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> item = all_random_weight[i].item</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(ret,item)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> items = &#123;&#123;item=<span class="number">1</span>,weight=<span class="number">1</span>&#125;,&#123;item=<span class="number">2</span>,weight=<span class="number">50</span>&#125;,&#123;item=<span class="number">3</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">4</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">5</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">6</span>,weight=<span class="number">4</span>&#125;,&#123;item=<span class="number">7</span>,weight=<span class="number">50</span>&#125;,&#123;item=<span class="number">8</span>,weight=<span class="number">4</span>&#125;&#125;</span><br><span class="line"><span class="keyword">local</span> ret = weight_unique_math(items,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(ret) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(i,v)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 随机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[readthedocs切换到mkdocs]]></title>
      <url>http://www.farwmarth.com/mkdocs/</url>
      <content type="html"><![CDATA[<p>之前把学习笔记用<code>sphinx</code>生成然后托管在<code>github</code>上,然后用<code>readthedocs</code>的<code>webhook</code>自动<code>build</code>文章数量渐多感觉排版拥挤.于是google了一下找了个替代品,那就就是这篇文章的主角<code>mkdocs</code></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://github.com/mkdocs/mkdocs" target="_blank" rel="noopener">mkdocs</a>是一个支持<code>markdown</code>语法的项目文档管理工具，结构很简单,一个<code>yml</code>配置文件管理文档结构和主题信息,<code>docs</code>目录则是项目文档.官方文档(<a href="http://www.mkdocs.org/" target="_blank" rel="noopener">http://www.mkdocs.org/</a>)</p>
<a id="more"></a>
<h3 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装mkdocs</span><br><span class="line">pip install mkdocs</span><br><span class="line"><span class="meta">#</span>新建工程目录</span><br><span class="line">mkdocs new my-project</span><br><span class="line"><span class="meta">#</span>切换到工程目录</span><br><span class="line">cd my-project</span><br></pre></td></tr></table></figure>
<p>工程目录如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── mkdocs.yml</span><br><span class="line">├── docs</span><br><span class="line">│   ├── index.md</span><br></pre></td></tr></table></figure></p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>启动服务器,默认端口是8000 Running at: http://127.0.0.1:8000/</span><br><span class="line">mkdocs serve</span><br></pre></td></tr></table></figure>
<p><img src="http://farwmarth.bestnewbee.com/images/first_mkdocs.png" alt="first_mkdocs"></p>
<h3 id="所有命令"><a href="#所有命令" class="headerlink" title="所有命令"></a>所有命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>生成html</span><br><span class="line">mkdocs build</span><br><span class="line"><span class="meta">#</span>新建工程目录</span><br><span class="line">mkdocs new my-project</span><br><span class="line"><span class="meta">#</span>部署到github的gh-deploy分支</span><br><span class="line">mkdocs gh-deploy -v</span><br><span class="line"><span class="meta">#</span>markdown生成json文件</span><br><span class="line">mkdocs json</span><br><span class="line"><span class="meta">#</span>启动预览</span><br><span class="line">mkdocs serve</span><br></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我用的主题是<code>material</code>:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install mkdocs-material</span><br></pre></td></tr></table></figure></p>
<p>项目配置大概列了一,大致分为几部分：<code>项目信息</code>，<code>托管信息</code>，<code>版权信息</code>，<code>主题与文档目录</code>，<code>配色信息</code>,<code>额外插件</code>，还有就是<code>项目文档目录结构</code>有些配置与主题相关<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Project information</span><br><span class="line">site_name: farwmarth’s note</span><br><span class="line">site_author: &apos;farwmarth&apos;</span><br><span class="line">site_url: &apos;http://learndocs.farwmarth.com&apos;</span><br><span class="line"></span><br><span class="line"># Repository</span><br><span class="line"># repo_name: &apos;GitHub&apos;</span><br><span class="line"># repo_url: &apos;https://github.com/wujiyu115/learndocs&apos;</span><br><span class="line"></span><br><span class="line"># Copyright</span><br><span class="line">copyright: &apos;Copyright (c) 2016 farwmarth&apos;</span><br><span class="line"></span><br><span class="line"># Documentation and theme</span><br><span class="line">docs_dir: &apos;docs&apos;</span><br><span class="line">theme: &apos;material&apos;</span><br><span class="line"># theme: &apos;cinder&apos;</span><br><span class="line"></span><br><span class="line">extra:</span><br><span class="line">  palette:</span><br><span class="line">    primary: &apos;blue grey&apos;</span><br><span class="line">    accent: &apos;blue grey&apos;</span><br><span class="line">  author:</span><br><span class="line">    github: &apos;wujiyu115&apos;</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">markdown_extensions:</span><br><span class="line">  #高亮</span><br><span class="line">  - codehilite(css_class=code)</span><br><span class="line">  - admonition</span><br><span class="line">  - toc:</span><br><span class="line">      permalink: &apos;#&apos;</span><br><span class="line"></span><br><span class="line">pages:</span><br><span class="line">- Home: &apos;index.md&apos;</span><br><span class="line">- 数据结构与算法:</span><br><span class="line">    - &apos;排序算法介绍&apos;: &apos;data_algorithms/algorithms1_intro.md&apos;</span><br><span class="line">- c++基础:</span><br><span class="line">    - &apos;c++环境搭建(Win)&apos;: &apos;cplus/cplus_win.md&apos;</span><br><span class="line">    - &apos;编译过程&apos;: &apos;cplus/cplus4_complier.md&apos;</span><br><span class="line">    - &apos;常量修饰符&apos;: &apos;cplus/cplus5_const.md&apos;</span><br><span class="line">- python:</span><br><span class="line">    - &apos;语言简介&apos;: &apos;python/py1_intro.md&apos;</span><br></pre></td></tr></table></figure></p>
<h2 id="托管到github"><a href="#托管到github" class="headerlink" title="托管到github"></a>托管到github</h2><p>之前误认为<code>github</code>只能有一个<code>page</code>页,看了 <a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="noopener">官方</a>的介绍之后发现并非如此，有两种方式创建<code>page</code>页，一种是创建一个就<code>{username}.github.com</code>的库项目,另一种则是创建任意库项目可以在<code>setting</code>中<code>Launch automatic page generator</code>生成<code>gh-pages</code>分支，创建方式这里就不细说了,可以根据<a href="https://pages.github.com/" target="_blank" rel="noopener">page官方</a>的引导去操作。</p>
<p>这个表格是<code>username库项目</code>和<code>任意库项项目</code>对应的域名指向.</p>
<table>
<thead>
<tr>
<th>Type of GitHub Pages site</th>
<th>Pages default domain &amp; host location on GitHub</th>
<th>Location of the source files for building your Pages site</th>
</tr>
</thead>
<tbody>
<tr>
<td>User Pages site</td>
<td><code>username.github.io</code></td>
<td><code>master</code></td>
</tr>
<tr>
<td>Project Pages site owned by a <strong>user account</strong></td>
<td>、</td>
<td><code>master</code>, <code>gh-pages</code>, or a <code>/docs</code> folder on <code>master</code></td>
</tr>
</tbody>
</table>
<p><code>username库项目</code>毫无疑问地址就是<code>username.github.io</code>,<code>任意库项项目</code>生成的工程页则是<code>username.github.io/projectname</code>.<br>我现在的做法是在<code>username库项目</code>下的<code>CNAME</code>指向我的主域名<code>farwmarth.com</code>,<code>learndocs库项项目</code>的<code>CNAME</code>指向我的二级域名<code>learndocs.farwmarth.com</code>.</p>
<p><code>dnspod</code>配置如下：</p>
<p><img src="http://farwmarth.bestnewbee.com/images/mkdocscname.png" alt="mkdocscname"></p>
<p>最后<code>learndocs库项项目</code>源文件托管到<code>master</code>分支,然后<code>mkdocs gh-deploy</code>把生成的<code>html</code>静态页面托管是<code>gh-pages</code>分支。注意<code>master</code>分支把生成的<code>site</code>目录忽略掉<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "site/" &gt;&gt; .gitignore</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[NodeJs初探]]></title>
      <url>http://www.farwmarth.com/node/</url>
      <content type="html"><![CDATA[<h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><p>node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="mac-node使用"><a href="#mac-node使用" class="headerlink" title="mac node使用"></a>mac node使用</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装</span><br><span class="line">brew install node</span><br><span class="line"><span class="meta">#</span>升级node</span><br><span class="line">brew upgrade node</span><br></pre></td></tr></table></figure>
<h4 id="linux-node"><a href="#linux-node" class="headerlink" title="linux node"></a>linux node</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>ubuntu安装6.x</span><br><span class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"><span class="meta">#</span>升级node</span><br><span class="line">npm install -g n</span><br><span class="line">n stable</span><br><span class="line"><span class="meta">#</span>升级npm</span><br><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure>
<h4 id="nodejs常用命令"><a href="#nodejs常用命令" class="headerlink" title="nodejs常用命令"></a>nodejs常用命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>查看版本</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure>
<h3 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h3><h4 id="创建最简单的webserver"><a href="#创建最简单的webserver" class="headerlink" title="创建最简单的webserver"></a>创建最简单的webserver</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">'127.0.0.1'</span>;</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.statusCode = <span class="number">200</span>;</span><br><span class="line">  res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>);</span><br><span class="line">  res.end(<span class="string">'Hello World\n'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(port, hostname, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="断言-assert"><a href="#断言-assert" class="headerlink" title="断言(assert)"></a>断言(assert)</h4><p>当需要在一个值为FALSE时中断当前操作的话，可以使用断言<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> assert  = <span class="built_in">require</span> (<span class="string">"assert"</span>)</span><br><span class="line">assert(<span class="literal">true</span>)<span class="comment">//成功</span></span><br><span class="line">assert(<span class="number">1</span>)<span class="comment">//成功</span></span><br><span class="line">assert(<span class="literal">false</span>,<span class="string">"it's false"</span>)<span class="comment">//触发断言</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//deepEqual用于比较对象的属性是否相等,但会忽略原型链上的属性,原始值使用==</span></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">  a : &#123;</span><br><span class="line">    b : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> obj2 = &#123;</span><br><span class="line">  a : &#123;</span><br><span class="line">    b : <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> obj3 = &#123;</span><br><span class="line">  a : &#123;</span><br><span class="line">    b : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj4 = <span class="built_in">Object</span>.create(obj1);</span><br><span class="line"></span><br><span class="line">assert.deepEqual(obj1, obj1);</span><br><span class="line"><span class="comment">//同一对象成功</span></span><br><span class="line">assert.deepEqual(obj1, obj2);</span><br><span class="line"><span class="comment">//失败,对象值不相等</span></span><br><span class="line">assert.deepEqual(obj1, obj3);</span><br><span class="line"><span class="comment">//成功,值相等</span></span><br><span class="line">assert.deepEqual(obj1, obj4);</span><br><span class="line"><span class="comment">//失败,忽略原型链上的值</span></span><br></pre></td></tr></table></figure></p>
<h4 id="node-base64"><a href="#node-base64" class="headerlink" title="node base64"></a>node base64</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> Buffer(<span class="string">"Hello World"</span>).toString(<span class="string">'base64'</span>));</span><br><span class="line">&lt;!--SGVsbG8gV29ybGQ=--&gt;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> Buffer(<span class="string">"SGVsbG8gV29ybGQ="</span>, <span class="string">'base64'</span>).toString(<span class="string">'ascii'</span>))</span><br><span class="line">&lt;!--Hello World--&gt;</span><br></pre></td></tr></table></figure>
<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p>NPM的全称是Node Package Manager，如ruby的gem，Python的PyPL、setuptools，PHP的pear，NPM就是Nodejs的包管理器</p>
<h3 id="npm常用命令"><a href="#npm常用命令" class="headerlink" title="npm常用命令"></a>npm常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>版本</span><br><span class="line">npm -v</span><br><span class="line"><span class="meta">#</span>升级模块</span><br><span class="line">npm update modulename</span><br><span class="line">sudo npm install npm -g</span><br></pre></td></tr></table></figure>
<h3 id="npm-使用新资源库"><a href="#npm-使用新资源库" class="headerlink" title="npm 使用新资源库"></a>npm 使用新资源库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>以资源库安装</span><br><span class="line">npm --registry "http://npm.hacknodejs.com/" install underscore</span><br><span class="line"><span class="meta">#</span>默认资源库为淘宝</span><br><span class="line">npm config set registry "http://npm.taobao.org/"</span><br></pre></td></tr></table></figure>
<h3 id="Node-sass-安装失败解决方案"><a href="#Node-sass-安装失败解决方案" class="headerlink" title="Node-sass 安装失败解决方案"></a>Node-sass 安装失败解决方案</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>mac</span><br><span class="line">SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/ npm install node-sass --save-dev</span><br></pre></td></tr></table></figure>
<h3 id="usr-bin-env-‘node’-No-such-file-or-directory"><a href="#usr-bin-env-‘node’-No-such-file-or-directory" class="headerlink" title="/usr/bin/env: ‘node’: No such file or directory"></a>/usr/bin/env: ‘node’: No such file or directory</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/bin/nodejs /usr/bin/node</span><br></pre></td></tr></table></figure>
<h2 id="node调试"><a href="#node调试" class="headerlink" title="node调试"></a>node调试</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo npm install supervisor -g   #安装</span><br><span class="line">supervisor index.js</span><br></pre></td></tr></table></figure>
<h2 id="node后台运行"><a href="#node后台运行" class="headerlink" title="node后台运行"></a>node后台运行</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup node app.js &gt; /foo/log.txt 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span>或者</span><br><span class="line">sudo npm install forever -g   #安装</span><br><span class="line">forever list</span><br><span class="line">forever start app.js</span><br><span class="line">forever stop app.js</span><br><span class="line">forever start -l forever.log -o out.log -e err.log app.js   #输出日志和错误</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[read-the-docs托管学习笔记]]></title>
      <url>http://www.farwmarth.com/readthedocs/</url>
      <content type="html"><![CDATA[<h2 id="Sphinx"><a href="#Sphinx" class="headerlink" title="Sphinx"></a>Sphinx</h2><p><a href="http://sphinx-doc.org/" target="_blank" rel="noopener">Sphinx</a>是一个基于Python的文档生成项目,采用了<strong>reStructuredText</strong>作为文档写作语言 ,不过也可以通过模块支持其他格式.<br>(Sphinx标记结构)[<a href="http://www.pythondoc.com/sphinx/markup/]" target="_blank" rel="noopener">http://www.pythondoc.com/sphinx/markup/]</a></p>
<h3 id="Sphinx安装"><a href="#Sphinx安装" class="headerlink" title="Sphinx安装"></a>Sphinx安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install sphinx sphinx-autobuild</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>创建目录</span><br><span class="line">cd /path/to/project</span><br><span class="line">mkdir docs</span><br><span class="line"><span class="meta">#</span>sphinx工作目录基本配置</span><br><span class="line">cd docs</span><br><span class="line"><span class="meta">#</span>可以回车按默认配置来写</span><br><span class="line">sphinx-quickstart</span><br><span class="line"><span class="meta">#</span>quickstart 后生成的目录结构</span><br><span class="line">readthedocs</span><br><span class="line">│ make.bat</span><br><span class="line">│ Makefile</span><br><span class="line">├─build</span><br><span class="line">└─source</span><br><span class="line">　　│ conf.py</span><br><span class="line">　　│ index.rst</span><br><span class="line">　　├─_static</span><br><span class="line">　　└─_templates</span><br><span class="line"><span class="meta">#</span> 默认会有一个index.rst,make html用来生成html页面</span><br><span class="line">make html</span><br></pre></td></tr></table></figure>
<h3 id="添加一篇文章"><a href="#添加一篇文章" class="headerlink" title="添加一篇文章"></a>添加一篇文章</h3><p>在<code>source</code>目录下新建<code>hello.rst</code>:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello,world</span><br><span class="line">======================================</span><br></pre></td></tr></table></figure></p>
<p>index.rst修改如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Contents:</span><br><span class="line"></span><br><span class="line">.. toctree::</span><br><span class="line">   :maxdepth: 2</span><br><span class="line"></span><br><span class="line">   hello</span><br></pre></td></tr></table></figure></p>
<p><code>make html</code>后效果如下:<br><img src="http://farwmarth.bestnewbee.com/images/sphinx.png" alt="sphinx"></p>
<p><code>toctree</code> 支持多级目录,有时候要区分同文件比如<code>python.rst</code>,<code>swift.rst</code>笔记在不同的目录,<code>toctree</code>这样设置:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Contents:</span><br><span class="line"></span><br><span class="line">.. toctree::</span><br><span class="line"></span><br><span class="line">   python/python</span><br><span class="line">   swift/swift</span><br></pre></td></tr></table></figure></p>
<h3 id="支持markdown编写"><a href="#支持markdown编写" class="headerlink" title="支持markdown编写"></a>支持markdown编写</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install recommonmark</span><br></pre></td></tr></table></figure>
<p>更改<strong>conf.py</strong>:<br><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> recommonmark.parser <span class="keyword">import</span> CommonMarkParser</span><br><span class="line"></span><br><span class="line">source_parsers = &#123;</span><br><span class="line">    <span class="string">'.md'</span>: CommonMarkParser,</span><br><span class="line">&#125;</span><br><span class="line">source_suffix = [<span class="string">'.rst'</span>, <span class="string">'.md'</span>]</span><br></pre></td></tr></table></figure></p>
<h3 id="更改主题-sphinx-rtd-theme"><a href="#更改主题-sphinx-rtd-theme" class="headerlink" title="更改主题 sphinx_rtd_theme"></a>更改主题 <a href="https://github.com/snide/sphinx_rtd_theme" target="_blank" rel="noopener">sphinx_rtd_theme</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install sphinx_rtd_theme</span><br></pre></td></tr></table></figure>
<p>更改<strong>conf.py</strong>:<br><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sphinx_rtd_theme</span><br><span class="line"></span><br><span class="line">html_theme = <span class="string">"sphinx_rtd_theme"</span></span><br><span class="line"></span><br><span class="line">html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]</span><br></pre></td></tr></table></figure></p>
<h3 id="Github托管-read-the-docs发布"><a href="#Github托管-read-the-docs发布" class="headerlink" title="Github托管, read_the_docs发布"></a>Github托管, read_the_docs发布</h3><p><a href="https://read-the-docs.readthedocs.io/en/latest" target="_blank" rel="noopener">doc</a></p>
<ol>
<li>github上<code>push</code>用<code>sphinx-quickstart</code>生成的项目,<code>build</code>目录可以设置到.gitignore中</li>
<li>登录<a href="https://readthedocs.org/" target="_blank" rel="noopener">readthedocs</a>,注册账号,<code>Connected Services</code>中授权<code>github</code></li>
<li><a href="https://readthedocs.org/dashboard/" target="_blank" rel="noopener">dashboard</a>中<code>Import a Porject</code>导入<code>github</code>中的项目然后<code>build</code></li>
</ol>
<h3 id="Webhooks监听github提交"><a href="#Webhooks监听github提交" class="headerlink" title="Webhooks监听github提交"></a>Webhooks监听github提交</h3><ol>
<li>在文档项目的<code>setting</code>中选中<code>Webhooks &amp; Services</code>,</li>
<li>在<code>Services</code>项中点击<code>Add service</code></li>
<li>选择<code>ReadTheDocs</code>,点击<code>Active</code></li>
</ol>
<h3 id="make-nonlocal-image-URI-found-waring-gone"><a href="#make-nonlocal-image-URI-found-waring-gone" class="headerlink" title="make nonlocal image URI found waring gone"></a>make <code>nonlocal image URI found</code> waring gone</h3><p>更改<code>conf.py</code><br><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sphinx.environment</span><br><span class="line"><span class="keyword">from</span> docutils.utils <span class="keyword">import</span> get_source_line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_warn_node</span><span class="params">(self, msg, node, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg.startswith(<span class="string">'nonlocal image URI found:'</span>):</span><br><span class="line">        self._warnfunc(msg, <span class="string">'%s:%s'</span> % get_source_line(node), **kwargs)</span><br><span class="line"></span><br><span class="line">sphinx.environment.BuildEnvironment.warn_node = _warn_node</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> sphinx github readthedoc </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vsftpd使用]]></title>
      <url>http://www.farwmarth.com/vsftpd/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>vsftpd意思为“very secure FTP daemon(非常安全的FTP进程)”，是一个基于GPL发布的类UNIX类操作系统上运行的服务器的名字（是一种守护进程），可以运行在诸如Linux、BSD、Solaris、HP-UX以及Irix等系统上面。vsftpd支持很多其他传统的FTP服务器不支持的良好特性</p>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装</span><br><span class="line">yum install vsftpd</span><br><span class="line"><span class="meta">#</span>启动</span><br><span class="line">service vsftpd start</span><br><span class="line"><span class="meta">#</span>重启</span><br><span class="line">service vsfptd restart</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>在<code>/etc/vsftpd</code>目录下的配置文件:</p>
<ul>
<li><code>vsfptd.conf</code>:主配置</li>
<li><code>ftpusers</code>:不允许登录的用户,不受任何配制项的影响</li>
<li><code>userlist_file</code>:<code>userlist_enable</code>和<code>userlist_deny</code>控制,这两个参数配置不同他可以是白名单也可以是黑名单.创建tom: 在user_list中,jim:不在user_list中测试配置关系<ul>
<li>Case 1: userlist_enable=YES, userlist_deny=YES<br>tom: 拒绝登入<br>jim: 允许登录</li>
<li>Case 2: userlist_enable=YES, userlist_deny=NO<br>tom: 允许登录<br>jim:拒绝登录（如user_list文件开头的注释所述，甚至不会提示输入密码，即无登入提示框，直接拒绝连接）</li>
<li>Case 3: userlist_enable=NO,userlist_deny=NO<br>tom: 允许登录<br>jim: 允许登录</li>
<li>Case 4: userlist_enable=NO,userlist_deny=YES<br>tom: 允许登录<br>jim: 允许登录</li>
<li>userlist_enable和userlist_deny两个选项联合起来针对的是：本地全体用户（除去ftpusers中的用户）和出现在user_list文件中的用户以及不在在user_list文件中的用户这三类用户集合进行的设置。</li>
<li>当且仅当userlist_enable=YES时：userlist_deny项的配置才有效，user_list文件才会被使用；当其为NO时，无论userlist_deny项为何值都是无效的，本地全体用户（除去ftpusers中的用户）都可以登入FTP</li>
<li>当userlist_enable=YES时，userlist_deny=YES时：user_list是一个黑名单，即：所有出现在名单中的用户都会被拒绝登入；</li>
<li>当userlist_enable=YES时，userlist_deny=NO时：user_list是一个白名单，即：只有出现在名单中的用户才会被准许登入(user_list之外的用户都被拒绝登入)；另外需要特别提醒的是：使用白名单后，匿名用户将无法登入！除非显式在user_list中加入一行：anonymous</li>
</ul>
</li>
</ul>
<h3 id="更改vsfptd-conf关键配置"><a href="#更改vsfptd-conf关键配置" class="headerlink" title="更改vsfptd.conf关键配置:"></a>更改vsfptd.conf关键配置:</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>接受匿名用户</span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="meta">#</span>若为YES,则userlist_file中的用户将不能登录,为NO则只有userlist_file的用户可以登录</span><br><span class="line">userlist_deny=NO</span><br><span class="line"><span class="meta">#</span>监听端口</span><br><span class="line">listen_port = 21</span><br><span class="line"><span class="meta">#</span>指定默认用户目录</span><br><span class="line">local_root=/var/www/html</span><br><span class="line"><span class="meta">#</span>指定系统用户只能访问其主目录</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=YES</span><br><span class="line"><span class="meta">#</span>匿名用户目录</span><br><span class="line">anon_root=/var/www/html</span><br></pre></td></tr></table></figure>
<h3 id="添加用户登录"><a href="#添加用户登录" class="headerlink" title="添加用户登录"></a>添加用户登录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>添加用户update主目录为/home/user_update</span><br><span class="line">useradd -d /home/user_update update -s /bin/bash</span><br><span class="line"><span class="meta">#</span>设置密码</span><br><span class="line">passwd update</span><br><span class="line"><span class="meta">#</span># 更改用户update的主目录为/update</span><br><span class="line">usermod -d /user_update update</span><br><span class="line"><span class="meta">#</span>在 `/etc/vsftpd/userlist_file` 中添加`update`用户</span><br><span class="line"><span class="meta">#</span>更改目录权限给update</span><br><span class="line">chown -R update client_update/</span><br><span class="line">chmod -R 755 目录</span><br></pre></td></tr></table></figure>
<h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables status</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>
<h3 id="cannot-change-directory-root"><a href="#cannot-change-directory-root" class="headerlink" title="cannot change directory:/root"></a>cannot change directory:/root</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>设置切换目录</span><br><span class="line">setsebool -P ftpd_disable_trans 1</span><br><span class="line"><span class="meta">#</span>设置ftp读写控制</span><br><span class="line">setsebool -P allow_ftpd_full_access 1</span><br><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure>
<h3 id="linux-vsftpd-550-create-directory-operation-failed"><a href="#linux-vsftpd-550-create-directory-operation-failed" class="headerlink" title="linux vsftpd 550 create directory operation failed"></a>linux vsftpd 550 create directory operation failed</h3><p>关闭SELinux方法<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure></p>
<h4 id="如果用root登录"><a href="#如果用root登录" class="headerlink" title="如果用root登录"></a>如果用root登录</h4><ul>
<li>注释 <code>/etc/vsftpd/ftpusers</code> 中<code>root</code>用户</li>
<li>在 <code>/etc/vsftpd/userlist_file</code> 中添加<code>root</code>用户</li>
</ul>
<h2 id="配详解"><a href="#配详解" class="headerlink" title="配详解"></a>配详解</h2><p><a href="http://blog.sina.com.cn/s/blog_56ae1d580100yhel.html" target="_blank" rel="noopener">vsftpd.conf中文详解</a><br><code>/etc/vsftpd/vsftpd.conf</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#################用户选项###############</span><br><span class="line">接受匿名用户</span><br><span class="line">anonymous_enable=YES</span><br><span class="line"></span><br><span class="line">#匿名用户login时不询问口令</span><br><span class="line">no_anon_password=YES</span><br><span class="line"></span><br><span class="line">#匿名用户主目录</span><br><span class="line">anon_root=(none)</span><br><span class="line"></span><br><span class="line">#接受本地用户</span><br><span class="line">local_enable=YES</span><br><span class="line"></span><br><span class="line">#本地用户主目录</span><br><span class="line">local_root=(none)</span><br><span class="line"></span><br><span class="line">#如果匿名用户需要密码,那么使用banned_email_file里面的电子邮件地址的用户不能登录</span><br><span class="line">deny_email_enable=YES</span><br><span class="line"></span><br><span class="line">#仅在没有pam验证版本时有用,是否检查用户有一个有效的shell来登录</span><br><span class="line">check_shell=YES</span><br><span class="line"></span><br><span class="line">#若启用此选项,userlist_deny选项才被启动</span><br><span class="line">userlist_enable=YES</span><br><span class="line"></span><br><span class="line">#若为YES,则userlist_file中的用户将不能登录,为NO则只有userlist_file的用户可以登录</span><br><span class="line">userlist_deny=NO</span><br><span class="line"></span><br><span class="line">#如果和chroot_local_user一起开启,那么用户锁定的目录来自/etc/passwd每个用户指定的目录(这个不是很清楚,很哪位熟悉的指点一下)</span><br><span class="line">passwd_chroot_enable=NO</span><br><span class="line"></span><br><span class="line">#定义匿名登入的使用者名称。默认值为ftp。</span><br><span class="line">ftp_username=FTP</span><br><span class="line"></span><br><span class="line">#################用户权限控制###############</span><br><span class="line"></span><br><span class="line">#可以上传(全局控制).</span><br><span class="line">write_enable=YES</span><br><span class="line"></span><br><span class="line">#本地用户上传文件的umask</span><br><span class="line">local_umask=022</span><br><span class="line"></span><br><span class="line">#上传文件的权限配合umask使用</span><br><span class="line">#file_open_mode=0666</span><br><span class="line"></span><br><span class="line">#匿名用户可以上传</span><br><span class="line">anon_upload_enable=NO</span><br><span class="line"></span><br><span class="line">#匿名用户可以建目录</span><br><span class="line">anon_mkdir_write_enable=NO</span><br><span class="line"></span><br><span class="line">匿名用户其它的写权利(更改权限?)</span><br><span class="line">anon_other_write_enable=NO</span><br><span class="line"></span><br><span class="line">如果设为YES，匿名登入者会被允许下载可阅读的档案。默认值为YES。</span><br><span class="line">anon_world_readable_only=YES</span><br><span class="line"></span><br><span class="line">#如果开启,那么所有非匿名登陆的用户名都会被切换成guest_username指定的用户名</span><br><span class="line">#guest_enable=NO</span><br><span class="line"></span><br><span class="line">所有匿名上传的文件的所属用户将会被更改成chown_username</span><br><span class="line">chown_uploads=YES</span><br><span class="line"></span><br><span class="line">匿名上传文件所属用户名</span><br><span class="line">chown_username=lightwiter</span><br><span class="line"></span><br><span class="line">#如果启动这项功能，则所有列在chroot_list_file之中的使用者不能更改根目录</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"></span><br><span class="line">#允许使用\&quot;async ABOR\&quot;命令,一般不用,容易出问题</span><br><span class="line">async_abor_enable=YES</span><br><span class="line"></span><br><span class="line">管控是否可用ASCII 模式上传。默认值为NO。</span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line"></span><br><span class="line">#管控是否可用ASCII 模式下载。默认值为NO。</span><br><span class="line">ascii_download_enable=YES</span><br><span class="line"></span><br><span class="line">#这个选项必须指定一个空的数据夹且任何登入者都不能有写入的权限，当vsftpd 不需要file system 的权限时，就会将使用者限制在此数据夹中。默认值为/usr/share/empty</span><br><span class="line">secure_chroot_dir=/usr/share/empty</span><br><span class="line"></span><br><span class="line">###################超时设置##################</span><br><span class="line"></span><br><span class="line">#空闲连接超时</span><br><span class="line">idle_session_timeout=600</span><br><span class="line"></span><br><span class="line">#数据传输超时</span><br><span class="line">data_connection_timeout=120</span><br><span class="line"></span><br><span class="line">#PAVS请求超时</span><br><span class="line">ACCEPT_TIMEOUT=60</span><br><span class="line"></span><br><span class="line">#PROT模式连接超时</span><br><span class="line">connect_timeout=60</span><br><span class="line"></span><br><span class="line">################服务器功能选项###############</span><br><span class="line"></span><br><span class="line">#开启日记功能</span><br><span class="line">xferlog_enable=YES</span><br><span class="line"></span><br><span class="line">#使用标准格式</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"></span><br><span class="line">#当xferlog_std_format关闭且本选项开启时,记录所有ftp请求和回复,当调试比较有用.</span><br><span class="line">#log_ftp_protocol=NO</span><br><span class="line"></span><br><span class="line">#允许使用pasv模式</span><br><span class="line">pasv_enable=YES</span><br><span class="line"></span><br><span class="line">#关闭安全检查,小心呀.</span><br><span class="line">#pasv_promiscuous+NO</span><br><span class="line"></span><br><span class="line">#允许使用port模式</span><br><span class="line">#port_enable=YES</span><br><span class="line"></span><br><span class="line">#关闭安全检查</span><br><span class="line">#prot_promiscuous</span><br><span class="line"></span><br><span class="line">#开启tcp_wrappers支持</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"></span><br><span class="line">#定义PAM 所使用的名称，预设为vsftpd。</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line"></span><br><span class="line">#当服务器运行于最底层时使用的用户名</span><br><span class="line">nopriv_user=nobody</span><br><span class="line"></span><br><span class="line">#使vsftpd在pasv命令回复时跳转到指定的IP地址.(服务器联接跳转?)</span><br><span class="line">pasv_address=(none)</span><br><span class="line"></span><br><span class="line">#################服务器性能选项##############</span><br><span class="line"></span><br><span class="line">#是否能使用ls -R命令以防止浪费大量的服务器资源</span><br><span class="line">#ls_recurse_enable=YES</span><br><span class="line"></span><br><span class="line">#是否使用单进程模式</span><br><span class="line">#one_process_model</span><br><span class="line"></span><br><span class="line">#绑定到listen_port指定的端口,既然都绑定了也就是每时都开着的,就是那个什么standalone模式</span><br><span class="line">listen=YES</span><br><span class="line"></span><br><span class="line">#当使用者登入后使用ls -al 之类的指令查询该档案的管理权时，预设会出现拥有者的UID，而不是该档案拥有者的名称。若是希望出现拥有者的名称，则将此功能开启。</span><br><span class="line">text_userdb_names=NO</span><br><span class="line"></span><br><span class="line">#显示目录清单时是用本地时间还是GMT时间,可以通过mdtm命令来达到一样的效果</span><br><span class="line">use_localtime=NO</span><br><span class="line"></span><br><span class="line">#测试平台优化</span><br><span class="line">#use_sendfile=YES</span><br><span class="line"></span><br><span class="line">################信息类设置################</span><br><span class="line"></span><br><span class="line">#login时显示欢迎信息.如果设置了banner_file则此设置无效</span><br><span class="line">ftpd_banner=欢迎来到湖南三辰Fake-Ta FTP 网站.</span><br><span class="line"></span><br><span class="line">#允许为目录配置显示信息,显示每个目录下面的message_file文件的内容</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"></span><br><span class="line">#显示会话状态信息,关!</span><br><span class="line">#setproctitle_enable=YES</span><br><span class="line"></span><br><span class="line">############## 文件定义 ##################</span><br><span class="line"></span><br><span class="line">#定义不能更改用户主目录的文件</span><br><span class="line">chroot_list_file=/etc/vsftpd/vsftpd.chroot_list</span><br><span class="line"></span><br><span class="line">#定义限制/允许用户登录的文件</span><br><span class="line">userlist_file=/etc/vsftpd/vsftpd.user_list</span><br><span class="line"></span><br><span class="line">#定义登录信息文件的位置</span><br><span class="line">banner_file=/etc/vsftpd/banner</span><br><span class="line"></span><br><span class="line">#禁止使用的匿名用户登陆时作为密码的电子邮件地址</span><br><span class="line">banned_email_file=/etc/vsftpd.banned_emails</span><br><span class="line"></span><br><span class="line">#日志文件位置</span><br><span class="line">xferlog_file=/var/log/vsftpd.log</span><br><span class="line"></span><br><span class="line">#目录信息文件</span><br><span class="line">message_file=.message</span><br><span class="line"></span><br><span class="line">############## 目录定义 #################</span><br><span class="line"></span><br><span class="line">#定义用户配置文件的目录</span><br><span class="line">user_config_dir=/etc/vsftpd/userconf</span><br><span class="line"></span><br><span class="line">#定义本地用户登陆的根目录,注意定义根目录可以是相对路径也可以是绝对路径.相对路径是针对用户家目录来说的.</span><br><span class="line">local_root=webdisk #此项设置每个用户登陆后其根目录为/home/username/webdisk</span><br><span class="line"></span><br><span class="line">#匿名用户登陆后的根目录</span><br><span class="line">anon_root=/var/ftp</span><br><span class="line"></span><br><span class="line">#############用户连接选项#################</span><br><span class="line"></span><br><span class="line">#可接受的最大client数目</span><br><span class="line">max_clients=100</span><br><span class="line"></span><br><span class="line">#每个ip的最大client数目</span><br><span class="line">max_per_ip=5</span><br><span class="line"></span><br><span class="line">#使用标准的20端口来连接ftp</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"></span><br><span class="line">#绑定到某个IP,其它IP不能访问</span><br><span class="line">listen_address=192.168.0.2</span><br><span class="line"></span><br><span class="line">#绑定到某个端口</span><br><span class="line">#listen_port=2121</span><br><span class="line"></span><br><span class="line">#数据传输端口</span><br><span class="line">#ftp_data_port=2020</span><br><span class="line"></span><br><span class="line">#pasv连接模式时可以使用port 范围的上界，0 表示任意。默认值为0。</span><br><span class="line">pasv_max_port=0</span><br><span class="line"></span><br><span class="line">#pasv连接模式时可以使用port 范围的下界，0 表示任意。默认值为0。</span><br><span class="line">pasv_min_port=0</span><br><span class="line"></span><br><span class="line">##############数据传输选项#################</span><br><span class="line"></span><br><span class="line">#匿名用户的传输比率(b/s)</span><br><span class="line">anon_max_rate=51200</span><br><span class="line"></span><br><span class="line">#本地用户的传输比率(b/s)</span><br><span class="line">local_max_rate=5120000</span><br></pre></td></tr></table></figure></p>
<p><a href="http://desert3.iteye.com/blog/1685734" target="_blank" rel="noopener">http://desert3.iteye.com/blog/1685734</a></p>
]]></content>
      
        
        <tags>
            
            <tag> vsftpd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[脚本自动化手册]]></title>
      <url>http://www.farwmarth.com/%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<h2 id="同步文件"><a href="#同步文件" class="headerlink" title="同步文件"></a>同步文件</h2><h3 id="rsync-remote-synchronize"><a href="#rsync-remote-synchronize" class="headerlink" title="rsync(remote synchronize)"></a>rsync(remote synchronize)</h3><p>实现远程同步功能的软件,它在同步文件的同时,可以保持原来文件的权限、时间、软硬链接等附加信息.</p>
<h4 id="rsync认证方式"><a href="#rsync认证方式" class="headerlink" title="rsync认证方式"></a>rsync认证方式</h4><p>rsync有两种常用的认证方式，一种是<code>rsync-daemon</code>方式，另外一种是ssh方式。在平时使用过程，我们使用最多的是<code>rsync-daemon</code>方式</p>
<h4 id="rsync服务器架设"><a href="#rsync服务器架设" class="headerlink" title="rsync服务器架设"></a>rsync服务器架设</h4><p>rsync的主要有以下三个配置文件<code>rsyncd.conf</code>(主配置文件)、<code>rsyncd.secrets</code>(密码文件)、<code>rsyncd.motd</code>(rysnc服务器信息)</p>
<a id="more"></a>
<ul>
<li>rsyncd.conf</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>从远程机器同步文件到本机</span><br><span class="line">/usr/bin/rsync -rlptDvzHS --port=1111 --password-file=/etc/xx.password root@1.1.1.1::xx/bin/logic/   /data/xx/bin/logic/</span><br><span class="line"><span class="meta">#</span>本机目录同步,--delete-excluded:目标目录中存在在源目录不存在删除,并且如果 --exclude指定的也会删除</span><br><span class="line">rsync --delete-excluded -avzp --exclude=3rd  target/ des/</span><br></pre></td></tr></table></figure>
<h3 id="scp-复制rsa密钥到远程主机"><a href="#scp-复制rsa密钥到远程主机" class="headerlink" title="scp 复制rsa密钥到远程主机"></a>scp 复制rsa密钥到远程主机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp  C:\Users\Administrator\.ssh\vps_Identity.pub user@example.com:/home/user/.ssh/vps_far.pub</span><br></pre></td></tr></table></figure>
<h3 id="lrzsz-便携的ssh上传下载工具"><a href="#lrzsz-便携的ssh上传下载工具" class="headerlink" title="lrzsz 便携的ssh上传下载工具"></a>lrzsz 便携的ssh上传下载工具</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install lrzsz</span><br><span class="line"><span class="meta">#</span>从服务器下载</span><br><span class="line">sz download.txt</span><br><span class="line"><span class="meta">#</span>从本机选择文件上传</span><br><span class="line">rz</span><br></pre></td></tr></table></figure>
<h2 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h2><h3 id="haozip"><a href="#haozip" class="headerlink" title="haozip"></a>haozip</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;D:\Program Files\HaoZip\HaoZipC.exe&quot; a -tzip crt.zip C:\Users\Administrator.PC-20150720QKHJ\AppData\Roaming\VanDyke\Config\*</span><br></pre></td></tr></table></figure>
<h3 id="tar-压缩"><a href="#tar-压缩" class="headerlink" title="tar 压缩"></a>tar 压缩</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zcvf $PackFile $Project &gt; /dev/null</span><br></pre></td></tr></table></figure>
<h2 id="linux-切割文件"><a href="#linux-切割文件" class="headerlink" title="linux 切割文件"></a>linux 切割文件</h2><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>按文件大小切割</span><br><span class="line">split  -b 10m yybao_s1.out  yybao_s1_</span><br><span class="line"><span class="meta">#</span>按文件行数切割</span><br><span class="line">split -l 100 test.txt</span><br></pre></td></tr></table></figure>
<h3 id="logrotate"><a href="#logrotate" class="headerlink" title="logrotate"></a>logrotate</h3><p>强制执行某个日志的切,如<code>log.config</code>是在<code>/etc/logrotate.d</code>下文件的文件名<code>logrotate -f  log.config</code></p>
<h4 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">opt/clps_tomcat/logs/catalina.out #要切割的日志</span><br><span class="line">&#123;</span><br><span class="line">daily  #每日执行</span><br><span class="line">dateext #切换后的日志文件会附加上一个短横线和YYYYMMDD格式的日期</span><br><span class="line">copytruncate #复制日志后会清空在数据</span><br><span class="line">nocompress   ##不压缩</span><br><span class="line">rotate 15   ##保留15次ratate日志</span><br><span class="line"><span class="meta">#</span>size=5MB # k,MB(M),GB(G)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="mac-下-logrotate-安装"><a href="#mac-下-logrotate-安装" class="headerlink" title="mac 下 logrotate 安装"></a>mac 下 logrotate 安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>执行</span><br><span class="line">brew install logrotate</span><br><span class="line"><span class="meta">#</span>.zshrc</span><br><span class="line">export LOGROTATE_HOME=/usr/local/Cellar/logrotate/3.9.1/sbin</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;LOGROTATE_HOME&#125;</span><br></pre></td></tr></table></figure>
<h4 id="日志切割"><a href="#日志切割" class="headerlink" title="日志切割"></a>日志切割</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">”/data/yxiii/bin/logs/*.out“</span><br><span class="line">&#123;</span><br><span class="line">size 10m</span><br><span class="line">dateext</span><br><span class="line">copytruncate</span><br><span class="line">nocompress</span><br><span class="line">rotate 20</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="linux-定时任务"><a href="#linux-定时任务" class="headerlink" title="linux  定时任务"></a>linux  定时任务</h2><h3 id="at-命令"><a href="#at-命令" class="headerlink" title="at 命令"></a>at 命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>明天四点执行shell.sh中的命令</span><br><span class="line">at -f shell.sh 4 am tomorrow</span><br><span class="line">at -f /home/far/Develop/heros/code/server/trunk/bin/stop.sh  4:00 tomorrow</span><br><span class="line"><span class="meta">#</span>查看指定任务</span><br><span class="line">at -c 8</span><br><span class="line"><span class="meta">#</span>查看列表</span><br><span class="line">atq</span><br><span class="line"><span class="meta">#</span>删除指定任务</span><br><span class="line">atrm 1</span><br></pre></td></tr></table></figure>
<h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><h4 id="crontab脚本目录"><a href="#crontab脚本目录" class="headerlink" title="crontab脚本目录"></a>crontab脚本目录</h4><ul>
<li><code>/etc/crontab</code>: 这个文件负责安排由系统管理员制定的维护系统以及其他任务的crontab</li>
<li><code>/etc/cron.d/</code>: 这个目录用来存放任何要执行的crontab文件或脚本</li>
<li><code>/var/spool/cron/far</code>: 这个目录下存放的是每个用户（包括root）的crontab任务</li>
</ul>
<h4 id="crontab-服务查看"><a href="#crontab-服务查看" class="headerlink" title="crontab 服务查看"></a>crontab 服务查看</h4><ul>
<li>启动服务: <code>/sbin/service crond start</code></li>
<li>关闭服务:<code>/sbin/service crond stop</code></li>
<li>重启服务: <code>/sbin/service crond restart</code></li>
<li>重新载入配置: <code>/sbin/service crond reload</code></li>
<li>查看服务状态: <code>/sbin/service crond status</code></li>
</ul>
<h4 id="crontab-选项"><a href="#crontab-选项" class="headerlink" title="crontab  选项"></a>crontab  选项</h4><ul>
<li><p>概要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crontab [ -u user ] file</span><br><span class="line">crontab [ -u user ] [ -i ] &#123; -e | -l | -r &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-l:在控制台输出计划执行结果</p>
</li>
<li>-r :移除指定的文件计划</li>
<li>-e 编辑crontab默认配置文件</li>
<li>-i : -r移除之前加上确认</li>
<li>验证是否已删除 crontab 文件: <code>ls /var/spool/cron/crontabs</code></li>
</ul>
<h4 id="基本配置-1"><a href="#基本配置-1" class="headerlink" title="基本配置"></a>基本配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line">HOME=/</span><br><span class="line"><span class="meta">#</span> .---------------- minute (0 - 59)</span><br><span class="line"><span class="meta">#</span> |  .------------- hour (0 - 23)</span><br><span class="line"><span class="meta">#</span> |  |  .---------- day of month (1 - 31)</span><br><span class="line"><span class="meta">#</span> |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"><span class="meta">#</span> |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7)  OR</span><br><span class="line"><span class="meta">#</span>sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"><span class="meta">#</span> |  |  |  |  |</span><br><span class="line"><span class="meta">#</span> *  *  *  *  *  command to be executed</span><br><span class="line">0 4 8 5 *  /Users/far/Develop/workdir/heros_codingnet/bin/stop.sh</span><br><span class="line">43 23 7 5 *  /Users/far/Develop/workdir/heros_codingnet/bin/stop.sh</span><br><span class="line">59 23 12 * * /bin/bash /root/stop_games.sh all</span><br></pre></td></tr></table></figure>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="自动打包文件备份到指定目录"><a href="#自动打包文件备份到指定目录" class="headerlink" title="自动打包文件备份到指定目录"></a>自动打包文件备份到指定目录</h3><p>把<code>/data</code>下文件打包备份到<code>/data/backup</code>下以天为文件名,并清除七天以前的备份`<br>增加计划任务<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export EDITOR=vi</span><br><span class="line">crontab -e</span><br><span class="line">0 0 * * * /data/bak.sh;</span><br></pre></td></tr></table></figure></p>
<p>bak.sh文件内容如下:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">logs_dir=/data</span><br><span class="line">bak_dir=/data/backup</span><br><span class="line">bak_file=bak_`date +%Y%m%d`</span><br><span class="line">echo "begining of tar"</span><br><span class="line">tar zcf $bak_dir/$bak_file.gz  $logs_dir/*.*</span><br><span class="line">echo "clearing file.log"</span><br><span class="line">find $bak_dir -mtime +7 -exec rm -rf &#123;&#125; \;</span><br><span class="line"><span class="meta">#</span>end</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[驾考]]></title>
      <url>http://www.farwmarth.com/%E9%A9%BE%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      <content type="html"><![CDATA[<h2 id="报考"><a href="#报考" class="headerlink" title="报考"></a>报考</h2><p>驾照这个事情其实被搁置了很久,一来人太懒,再者觉得边上班还要请假练车是件比较让人头痛的事情,年初的时候被催着把这报名的事情给完成了,报名之前听说广州报个名,拿到证一年多是家常便饭,主要是排队时间太长了.</p>
<p>报考前也逛了一下附近的驾校,知乎上,贴吧上一些帖子也琢磨了下,一般驾校分快慢班,快班的意思就是广州练车可能就到湖南去考试,快班自然价格要贵一些，包括了长途的交通费用，还有一个就是手动档和自动档,一般都学习手动档,学费便宜一些,另外可以驾驶自动档的车型。<br><a id="more"></a></p>
<p>斟酌之后还是直接在帖吧里找了一个教练的qq,电话聊了一下觉得这个教练不错,简单约定了一下就把其他四个同事也拉过来报名了。把教练而不直接在驾校报名或者像猪兼强那种平台的原因是:最终都练车和时间分配的都是教练把握,不经过第三方中转价格也更透明一些。有的驾校场地比较小,虽然离得近但是练车时间太少了通过率不高。</p>
<h2 id="科目一"><a href="#科目一" class="headerlink" title="科目一"></a>科目一</h2><p>3月份报的名,然后交了一部分定金,科目一考完后才把全额交完.<br>科目一的考试感觉就像是回到了小学时代.在考试前把一千多道题用&lt;&lt;驾考宝典&gt;&gt;<br>整个过一遍,然后针对自己把易错的题再捊一遍就差不多了。考试题目是一百道,及格是九十分,我列了一下科目一一些考试题:</p>
<pre><code>#### 手势题
学员所看到的交警手势都是镜面动作,不要考虑站在交警的角度上看动作.

速记口决:左手过头勿前行，右手摆动靠边停。两手平伸右手摆，警察叔叔让直行。掌心向前你别动，哪手摆动向哪行。左手侧摆须待转，右手横摆道变更。变道安全很重要，右手下摆是慢行

#### 易错点
+ 拿到驾照后实习期为一年12个月
+ 无中线,城三公四,同一向道,城五公七.
+ 高速二车道:100,60,三车道110,90,60,最高120，最低60
+ 虚线可以变道,实线无法变
+ 转弯的机动车让直行车辆先行，右方道路来车先行，右转弯车让左转弯车先行.
+ 白色菱形是人行道预警,要减速
+ 夜间有前车时要超车,远近灯变换是提醒前车,左转向灯是提示后车我要超车
+ 重新驾驶证:瞒1吊2贿赂撤3醉5逃终生
+ 逃前人死3-7年，逃后人死7年以上，其余均为3年 闰
+ 行驶的标志是用圆圈表示，而停车位是用矩形
+ 酒驾20醉驾扣12分，醉驾80,约束至酒醒,五年内不得重新取得机动车驾驶证
+ 黄灯前轮过线可通行,红灯,整车过线才可通行.黄灯闪烁瞭望确认无行人后通过
+ 分离式路基公路左、右行车道分开修建的公路，包括中央分隔带不等宽的和左、右两侧行车道不等高的公路
+ 有虚线的是紧急停车带,无的是错车道
+ 高速公路字体黄色最高速度，黑色建议速度，白色最低速度
+ 白色虚线，可跨越同向车道中心线，黄色虚线，指示标志，可超车掉头。
+ 白色虚线和三角地带标组成标线:左入口右出口
+ 箭头尾巴有弯折的是转弯，尾巴是弧线的是变道
+ 机动车匝道驶入高速公路，开启左转向灯，进入减速车道开启右转向灯
+ 发生故障时，高速在来车方向150以外设置警告标志，非高速50-100米，要开启危险报警闪光灯
+ 不得连续驾驶4小时以上，休息20分钟
+ 初得驾驶证有效期为6年，再是10年，长期
+ 科目二三考试预约次数不得超过5次
+ 准考证明的有效期是3年
+ 申请驾驶证。汽车18-70岁，三轮车18-60岁
+ 驾驶证过期后90日内换证，信息变更30日内，防撞带不需要信息变更
+ 驶入左转向灯，驶出右转向灯
</code></pre><h2 id="科目二"><a href="#科目二" class="headerlink" title="科目二"></a>科目二</h2><p>因为新平台运营的关系考试科目一通过后十天就可以预约科目二，这样节省了不少时间,刚开始对科目二挺没底的,因为以前只操作过两轮自行车….，练车大概流程是这样的：</p>
<p>第一天:转模拟方向盘,对于经常玩赛车游戏的同学来说是小菜一碟,练习打火,踩离合,挂挡,刹车,然后教练会带着你兜几圈熟悉一下开车的感觉。</p>
<p>第二天:练习倒车入库,为了应付考试教练一般都会有参考物,到固定参考点时转动方向盘,如果想提高容错率,前提是控制好离合让车速保持稳定,科目二都是在一档模式,转弯时会因为阻力变大要放部分离合保持速度.个人感觉最难把握的不是离合,而是入库时车身偏移时的方向修正。反正就是要反复练习,即使被教练骂得狗血淋头…</p>
<p>第三天:就进入其他项练习了，上坡定点，侧方停车，曲线行驶和直角转弯,这里面没啥难点,主要是定点的时候参照物不好照,考场的车座位和参照物可能不一样,不过没太大影响，误差不太大只是扣分而已.还有就是直角转弯的时候要把握后转弯的时间点，这个也是有参考物的。</p>
<p>放上知乎大神们的原理剖析图,只做参考,最终还是按自己教练方法来,有时候看得方法一多脑子容易弄混.<br><a href="https://www.zhihu.com/question/24518251" target="_blank" rel="noopener">https://www.zhihu.com/question/24518251</a></p>
<p>下面是科目二的一些摘录:</p>
<pre><code>### 离合
踩到底时整腿跟进,从底返回时腿跟着往外移动一段距离,然后用脚跟作支撑点成角度压住离合.
离合是提供动力是一个缓慢的过程:不要幅度过大.
非空档时一定不要松离合.踩车未松开,不要将离合松到最大。

###  刹车
在要定点停车时，踩车脚要提前准备，速度过快也可以轻踏刹车来减速。

### 档位
换档和归空档都要将刹车踩到底
换档前养成好习惯:先归空档,踩离合的左脚先松开调整位置再踩下去。再换档。

### 方向盘
记住转过去多少回转多少


### 上下车顺序:
上车:系安全带---&gt;调整座位----&gt;点火---&gt;离合归空档调到1档---&gt;拉起手刹---&gt;轻松离合缓慢起步
下车:归空档----&gt;拉手刹---&gt;熄火

### 倒车入库
#### 倒车入库顺序
右边起点倒入库----&gt;调整车身左转弯----&gt;左边入库-----&gt;右转弯开回右起点

#### 右起点入库
挂后退档,1档起步,观察左视镜下边缘-----&gt;左视镜下边缘盖过起点黄线时方向盘向右打死(一圏半到时钟3点)-----&gt;观察右视镜后方,先看到库左边线,当车尾与左顶角接触时将方向盘回拉四分之一圈(时钟12点方向)----&gt;继续观察右视镜倒退后左库被盖过,此后只能看到右库边----&gt;右库边与车身有三十公分左右间隙时宽度正合适,转过头观察左视镜注意左边车身与左库边----&gt;当左库边出现在视野里时继续倒退----&gt;当整条左库边线即将出现在视野时将方向盘回拉至九点方向再回转一圏(其实就是起点时转了一圈半后回拉一圈半)-----&gt;观察左视镜与左库入口的黄线,下边缘刚盖过黄线时刹车归空档。

#### 左转弯
如果车身在右入库后有倾斜起步时踩低离合微调车身挂前起1档-----&gt;直行时当我们自己的肩刚过左库入口边线时立即身左打方向盘1圈四分之一(逆时针12点方向)------&gt;一直保持方向盘转弯到左侧虚线处,这个位置用眼镜观察左视镜下边缘过黄虚线大约两三个手指的视角踩车停止-----&gt;归空档重踩左离合脚挂后退档，放刹车轻放离合后退-----&gt;保持方向盘12点方向不动后退，观察右视镜,右后车轮中央踩上右库直边线时(如果不好理解就是想象将直边延长至车身处与右后胎中央相交)身左四分之一方向盘(即左边打满9点方向)------&gt;转头观察左视镜,左库边将要全部出现在视野时方向盘回正(右转一圈半)----&gt;后面的过程与右入库相同(观察左视镜与左库入口的黄线,下边缘刚盖过黄线时刹车归空档。)

#### 开回起点
1档起步压低离合-----&gt;直行当车盖边边缘即将盖住道路实虚线时快速方向盘向(右边一圈半)-----&gt;转变时不松一点离合不要让车身停止前进-----&gt;要转完变时离合压低防止冲得太快来不及回调方向----&gt;直视远方当车身与道路线平行时快速(左边一圈半)方向盘回位----&gt;观察左视镜与起点黄虚线距离过两手指时刹车空档------&gt;拉起手刹---&gt;熄火下车。

####  偏差修正
看视镜车尾与库边的距离,哪边宽方向盘往哪边打,修正幅度在45到90度内,太小轮胎转动过小

### 坡道定点停车
开至停车待上坡区------&gt;轻松离合上坡(保证足够的动力不要上到一半车身间停)-----&gt;眼睛瞄准调整车盘与右道路边线的轻微贴合观察水管与车内空调右角角度------&gt;到个人估算角度时(矮一点的人是三点一线，高的人可能要过一点水管)同时刹车和离合-------&gt;数5秒不要松开踩车,轻放离合直到车身震动有足够动力一二秒,保持这个离合位置------&gt;轻松刹车上坡到坡顶------&gt;下坡时离合踩到底刹车踩一半让车身保持惯性前行,不要忘记打方向盘转弯,如果方向盘没有即时转过来再下压点刹车降速------&gt;到平地时先松踩车,方向盘转回,轻放离合(和平地起步一样)


### 侧方停车
开到虚线侧方停车前先观察前方的车辆是否已侧方完成------&gt;开到侧方起点虚线处(角度也是左视镜下边缘与虚线二三手指)-----&gt;归档后退档,后退起步当左视镜下边缘刚盖过虚线时方向盘(向右一周)---&gt;继续后退观察右视镜,当车身右车尾与库顶点还有一点角度时(顶点快要出现在视野)方向盘(左转一圈)----&gt;后退让后车轮中央正好踩在中央的虚线上立即将方向盘向左打满(一圈半9点方向)----&gt;压低离合准备刹车脚,立即看前方的车盖左缝隙与边库虚线距离,当左缝隙刚过虚线内边缘时立刻刹车-----&gt;归空档挂前进1档保持方向盘左满一直走,当左车角刚要接近道路边线方向盘回位(右一圈半)-----&gt;(这时要踩低离合因为要转两圈边方向盘盘)当车盖圆盘接近道路线时方向盘(右一圈)-----&gt;车身平时(左打回一圈)

### 曲线行驶 直角转弯
曲线行驶:倒八字走法,进曲线时先打一圈一直走然后车头跟着弯道线走，边走边转动方向盘。回拐脚处方向盘回位车头跟着弯道线走。
直角转弯:车盖圆盘视角贴着边线内边缘,车盖将要盖到黄线时将方向一边打满(一圈半),车身直了回位一圈半.
</code></pre><h3 id="长途考"><a href="#长途考" class="headerlink" title="长途考"></a>长途考</h3><p>长途考是广东省比较特殊的地方。权当一次短途旅行就好.大概是四人一车,每人开四十公里,沿途风景如画,速度跑起来要注意是的是方向盘微动就可以了.<br>我们去的是一个叫连南的县城,属于少数民族占比较多的地方,附近的小店里有瑶族的特色服装，吃了吃清远鸡,买了买茶,并没有传说中的大保健。</p>
<h2 id="科目三"><a href="#科目三" class="headerlink" title="科目三"></a>科目三</h2><p>考试步骤倒是挺简单的,主要是细节比较多,要多练习形成肌肉反应,还有就是科目三的考场路况和路线都不尽相同,像化南和化东车辆比较少,考试毫无压力,路况对于新手来说大大增加了难度系数。科目三算是我最最悲剧的地方,居然挂在灯光上，还没起步。扭了两下灯光扭不动就跪了.</p>
<p>科目三考试可能有两种车型，传奇和捷达,所以考试前一般都会花一百五买钟练习一下传奇车型提升下成功率。传奇和捷达有几个地方不一样,第一是挂档可能要更向内侧用力。第二是手刹位置。第三是灯光。</p>
<p>下面是科目三不同考场的线路和操作摘录:</p>
<pre><code>### 华观路

下坡路，带刹车起步防止溜车（松一段离合，松完刹车）。一挡起步，左转下坡路（观察左方车辆），右转，最优左边第二条道（不要走第一四道），上二档，前方公交站后(变到最左边车道，在考试变更车道前变到最左边)，请变更车道(变最左)，直线通过路口（红绿灯🚥），超车（如果在最左道不用管请保持直线行驶），环岛掉头（左灯，车多换一挡注意环岛左边的车流），掉头快完成时水盖处右灯，选择左边第二条道(有点弯向右打点方向)，通过学校，通过人行道（红绿灯🚥）后（提前左灯，斑马线处开始变更左车道上二档），加减档（60时速标志处开始松油门），会车（红绿灯🚥），直线行驶，终点。

### 化南

绕车一圈检查（离车身30公分左右），上车准备，起步(追线右侧30公分)，（左转灯，喇叭，镜子，一挡，手刹），三秒右灯！！！，靠边停车（空挡手刹），再起步，（左转灯，喇叭，镜子，一挡，手刹），上二档，会车（左右看），加减档（先减到一挡，再升到二档，离合不要松太慢导致与提示不符），（变更右车道）右转弯，左边第二道。变更左车道（左灯，打灯反应时间五秒内），掉头（桥上减到一挡，左灯），直线行驶（匀加速到35左右，没特殊情况不减速，直线方向盘不要大幅度动），保持直线行驶，左转弯，靠边停车考试结束


### 化东

起步，一挡右转，右边第二条道，换二档，超车(左超)，返回原车道（只要打右灯），直行通过路口，变更左车道，前方掉头（1档），掉头后换二档，前方人行道，过路口加减档，60时速牌（没有前方加减档语音），会车，变更左车道，二档沿中线掉头（方向一圈），左边第二条道，直线行驶，变更车道（左）。靠边停车

### 其他注意点
+ 会车，人行道，学校，公交站，车速过30的话松油门，左右看
+ 离合脚松完拿下来，油门脚不加油时脚尖松开
+ 停车一挡起步

#### 灯光
两格近光，远光，跟车行驶(近光)，远光，交替灯光（远光打到近光再向上拨动），警示灯，关所有灯光(警示灯，近光灯)。

灯光还要注意一点就是传奇车型和捷达的开关不一样。
</code></pre><h2 id="科目四"><a href="#科目四" class="headerlink" title="科目四"></a>科目四</h2><p>科目三考完之后三天后就可以约考科目四了<br>科目四和科目一雷同，都是一个背题的过程。题目比科目一要少,只有50道,而题型除了单选和判断还增加了多选题。</p>
<h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>8月份终于是拿到了,在广州来说算是快的,比较幸运的是这段时期新平台试运营,新平台上报考排队的人不是太多。回顾这几个月的过程,无论是练车时的专注度也好,上下班回来那么多趟也好.把一件事情完结总是有种大圆满的喜悦感。</p>
]]></content>
      
        
        <tags>
            
            <tag> life </tag>
            
            <tag> driver </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信开发调试]]></title>
      <url>http://www.farwmarth.com/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<h2 id="接入文档"><a href="#接入文档" class="headerlink" title="接入文档"></a>接入文档</h2><p><a href="http://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="noopener">http://mp.weixin.qq.com/wiki/home/index.html</a></p>
<h2 id="申请免费公众号"><a href="#申请免费公众号" class="headerlink" title="申请免费公众号"></a>申请免费公众号</h2><p>无需公众号,普通微信既可申请测试公众号:<br><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index" target="_blank" rel="noopener">http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index</a></p>
<a id="more"></a>
<p>JS接口安全域名:<br><a href="http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html" target="_blank" rel="noopener">http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html</a><br>OpenID:<br>针对每个公众号会产生一个安全的OpenID<br>UnionID:<br>对所有这些同一开放平台账号下的公众号和应用，只有一个UnionID<br>access_token:<br>众号调用各接口时都需使用access_token。开发者需要进行妥善保存。access_token的存储至少要保留512个字符空间。access_token的有效期目前为2个小时，需定时刷新</p>
<h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p>原理是通过外网服务转发至内网端口达到本地调试:</p>
<ul>
<li><a href="https://ngrok.com/" target="_blank" rel="noopener">https://ngrok.com/</a></li>
<li><a href="https://natapp.cn" target="_blank" rel="noopener">https://natapp.cn</a><br>教程:<a href="https://natapp.cn/article/wechat_local_debug" target="_blank" rel="noopener">https://natapp.cn/article/wechat_local_debug</a></li>
<li><a href="http://qydev.com/" target="_blank" rel="noopener">http://qydev.com/</a></li>
<li><a href="http://www.ittun.com/" target="_blank" rel="noopener">http://www.ittun.com/</a></li>
<li><a href="http://www.ngrok.cc/" target="_blank" rel="noopener">http://www.ngrok.cc/</a></li>
<li><a href="http://getfrp.yzxx-soft.com/" target="_blank" rel="noopener">http://getfrp.yzxx-soft.com/</a></li>
<li><a href="https://diannaobos.com/frp/" target="_blank" rel="noopener">https://diannaobos.com/frp/</a></li>
</ul>
<h2 id="下载调试工具"><a href="#下载调试工具" class="headerlink" title="下载调试工具"></a>下载调试工具</h2><p><a href="http://mp.weixin.qq.com/wiki/10/e5f772f4521da17fa0d7304f68b97d7e.html" target="_blank" rel="noopener">http://mp.weixin.qq.com/wiki/10/e5f772f4521da17fa0d7304f68b97d7e.html</a></p>
<h2 id="禁止微信缓存"><a href="#禁止微信缓存" class="headerlink" title="禁止微信缓存"></a>禁止微信缓存</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-Control"</span> <span class="attr">content</span>=<span class="string">"no-cache, no-store, must-revalidate"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Expires"</span> <span class="attr">content</span>=<span class="string">"0"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="http://www.zhihu.com/question/25456655" target="_blank" rel="noopener">http://www.zhihu.com/question/25456655</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 微信开发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[xposed初探]]></title>
      <url>http://www.farwmarth.com/xposed%E5%88%9D%E6%8E%A2/</url>
      <content type="html"><![CDATA[<h2 id="xposed-概念"><a href="#xposed-概念" class="headerlink" title="xposed 概念"></a>xposed 概念</h2><p>用一句话概念其牛b之处就是:<code>可以hook到系统任意一个Java进程</code><br>官方wiki: <a href="https://github.com/rovo89/XposedBridge/wiki" target="_blank" rel="noopener">https://github.com/rovo89/XposedBridge/wiki</a></p>
<ul>
<li><a href="https://github.com/rovo89/XposedInstaller" target="_blank" rel="noopener">XposedInstaller</a>，Xposed安装器,管理,下载,禁用Xposed Module,需要root权限。</li>
<li><a href="https://github.com/rovo89/Xposed" target="_blank" rel="noopener">Xposed</a>，<code>zygote</code>的修改版.xposed实现的核心.这个zygote会替换系统原生的zygote。XposedInstaller会将它放到<code>/system/bin</code>目录下</li>
<li><a href="https://github.com/rovo89/XposedBridge" target="_blank" rel="noopener">XposedBridge</a>。java部分,编译出来是一个XposedBridge.jar包,写<code>hook</code>模块时使用.</li>
<li><a href="https://github.com/rovo89/XposedTools" target="_blank" rel="noopener">XposedTools</a>。帮助我们编译Xposed和XposedBridge。</li>
</ul>
<a id="more"></a>
<h2 id="xposed-原理"><a href="#xposed-原理" class="headerlink" title="xposed 原理"></a>xposed 原理</h2><h3 id="zygote-受精卵"><a href="#zygote-受精卵" class="headerlink" title="zygote (受精卵)"></a>zygote (受精卵)</h3><p><a href="http://blog.csdn.net/luoshengyang/article/details/6768304" target="_blank" rel="noopener">http://blog.csdn.net/luoshengyang/article/details/6768304</a><br><a href="http://www.cnblogs.com/innost/archive/2011/01/26/1945769.html" target="_blank" rel="noopener">http://www.cnblogs.com/innost/archive/2011/01/26/1945769.html</a><br>在Android系统中，所有的应用程序进程以及系统服务进程SystemServer都是由Zygote进程孕育（fork）出来的.<br>Android系统是基于Linux内核的，而在Linux系统中，所有的进程都是init进程的子孙进程，也就是说，所有的进程都是直接或者间接地由init进程fork出来的。Zygote进程也不例外，它是在系统启动的过程，由init进程创建的。在系统启动脚本system/core/rootdir/init.rc文件中.zygote进程要执行的程序是/system/bin/app_process</p>
<ol>
<li>系统启动时init进程会创建Zygote进程，Zygote进程负责后续Android应用程序框架层的其它进程的创建和启动工作。</li>
<li>Zygote进程会首先创建一个SystemServer进程，SystemServer进程负责启动系统的关键服务，如包管理服务PackageManagerService和应用程序组件管理服务ActivityManagerService。</li>
<li>当我们需要启动一个Android应用程序时，ActivityManagerService会通过Socket进程间通信机制，通知Zygote进程为这个应用程序创建一个新的进程</li>
</ol>
<h3 id="xposed-工作原理"><a href="#xposed-工作原理" class="headerlink" title="xposed 工作原理"></a>xposed 工作原理</h3><p>安装xposed框架时会把一个修改过的<code>zygote</code>版本安装到<code>system/bin</code> 中,当android系统启动时修改过的<code>zygote</code>在创建java虚拟机后,会调用<code>XposedBridgeApi.jar</code> 中的方法 来装载<code>Xposed module</code> .当执行一个android程序中的某一个方法 时,因为被xposed的<code>hookMethodNative</code>劫持,实际执行的是我们hook后的java代码.</p>
<h2 id="Xposed-module"><a href="#Xposed-module" class="headerlink" title="Xposed module"></a>Xposed module</h2><p>创建一个<code>Xposed module</code>和普通的anroid应用并没有什么 区别,不一样的是要在<code>AndroidManifest.xml</code> 加一些特殊的元数据<code>meta-data</code></p>
<h3 id="添加元数据"><a href="#添加元数据" class="headerlink" title="添加元数据"></a>添加元数据</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"> <span class="tag">&lt;<span class="name">manifest</span>  <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.far.xposedtest"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionCode</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">"1.0"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">"15"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"xposedmodule"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"xposeddescription"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"Easy example which makes the status bar clock red and adds a smiley"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"xposedminversion"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"30"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="实现模块接口"><a href="#实现模块接口" class="headerlink" title="实现模块接口"></a>实现模块接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> de.robv.android.xposed.mods.tutorial;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedBridge;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tutorial</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(<span class="keyword">final</span> LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        XposedBridge.log(<span class="string">"Loaded app: "</span> + lpparam.packageName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>log 定向到<code>/data/data/de.robv.android.xposed.installer/log/debug.log</code> .通过Xposed Installer可以读取 到查看程序log</p>
<h3 id="asserts中xposed-init-入口点声明"><a href="#asserts中xposed-init-入口点声明" class="headerlink" title="asserts中xposed_init 入口点声明"></a>asserts中xposed_init 入口点声明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">de.robv.android.xposed.mods.tutorial.Tutorial</span><br></pre></td></tr></table></figure>
<h3 id="hook-a-method"><a href="#hook-a-method" class="headerlink" title="hook a method"></a>hook a method</h3><p><code>findAndHookMethod</code> 用于hook方法 ,在方法执行前后替换成我们的代码,官方教程是更改状态栏系统时钟的文字和颜色显示.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> de.robv.android.xposed.mods.tutorial;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> de.robv.android.xposed.XposedHelpers.findAndHookMethod;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XC_MethodHook;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tutorial</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(<span class="keyword">final</span> LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//判断 是不是要修改的系统UI</span></span><br><span class="line">        <span class="keyword">if</span> (!lpparam.packageName.equals(<span class="string">"com.android.systemui"</span>))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//hook这个"updateClock" 方法,修改其文字和颜色</span></span><br><span class="line">        findAndHookMethod(<span class="string">"com.android.systemui.statusbar.policy.Clock"</span>, lpparam.classLoader, <span class="string">"updateClock"</span>, <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="comment">// this will be called before the clock was updated by the original method</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                    TextView tv = (TextView) param.thisObject;</span><br><span class="line">                    String text = tv.getText().toString();</span><br><span class="line">                    tv.setText(text + <span class="string">" :)"</span>);</span><br><span class="line">                    tv.setTextColor(Color.RED);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Xposed-手册"><a href="#Xposed-手册" class="headerlink" title="Xposed 手册"></a>Xposed 手册</h2><h3 id="XposedBridge类"><a href="#XposedBridge类" class="headerlink" title="XposedBridge类"></a>XposedBridge类</h3><h4 id="log"><a href="#log" class="headerlink" title="log"></a>log</h4><p><code>log</code>方法用来捕获异常和打印信息,输出到标准logcat和<code>/data/xposed/debug.log</code>文件</p>
<h4 id="hookAllMethods-hookAllConstructors"><a href="#hookAllMethods-hookAllConstructors" class="headerlink" title="hookAllMethods / hookAllConstructors"></a>hookAllMethods / hookAllConstructors</h4><p>hook一个类中指定名字所有的方法 或者是构造函数.要注意的是如果在一个方法调用前后去拿方法参数,可能在 一些ROM里这个方法已经被别的程序hook过了.</p>
<h3 id="XposedHelpers类"><a href="#XposedHelpers类" class="headerlink" title="XposedHelpers类"></a>XposedHelpers类</h3><p>在eclipse中设置 Window =&gt; Preferences =&gt; Java =&gt; Editor =&gt; Content Assist =&gt; Favorites =&gt; New Type,输入：de.robv.android.xposed.XposedHelpers.这样eclipse在你开始输入“get…”时会自动提示这个类中的方法。</p>
<h4 id="findMethod-findConstructor-findField"><a href="#findMethod-findConstructor-findField" class="headerlink" title="findMethod / findConstructor / findField"></a>findMethod / findConstructor / findField</h4><p>这几个方法用来查找指定参数,名称的函数,构造器,和字段,而非反射方式：你可以用调用<code>findMethodBestMatch(Class&lt;?&gt; clazz, String methodName, Object... args)</code>,用来匹配相近的方法.</p>
<h4 id="callMethod-callStaticMethod-newInstance"><a href="#callMethod-callStaticMethod-newInstance" class="headerlink" title="callMethod / callStaticMethod / newInstance"></a>callMethod / callStaticMethod / newInstance</h4><p>利用上文提到的findXXX方法，可以用callxxx直接调用,或者用newInstance来构造 一个类实例。参数可以自动 匹配类型。如果你想明确的指定参数的类型，可以创建一个<code>Class&lt;?&gt;</code>数组，然后把它传递给callXXX/newInstance.你也可以参数数组都为null值，但是参数个数要匹配.</p>
<h4 id="getXXXField-setXXXField-getStaticXXXField-setStaticXXXField"><a href="#getXXXField-setXXXField-getStaticXXXField-setStaticXXXField" class="headerlink" title="getXXXField / setXXXField / getStaticXXXField /setStaticXXXField"></a>getXXXField / setXXXField / getStaticXXXField /setStaticXXXField</h4><p>有对象引用时这几个方法都可以使用不用区分静态非静态,如果你想获得/设置一个静态字段，又没有对象的引用，你可以使用<code>getStaticXXX</code>和<code>setStaticXXX</code>方法。</p>
<h4 id="getAdditionalXXXField-setAdditionalXXXField"><a href="#getAdditionalXXXField-setAdditionalXXXField" class="headerlink" title="getAdditionalXXXField / setAdditionalXXXField"></a>getAdditionalXXXField / setAdditionalXXXField</h4><p>这些方法让你将任何值与一个对象的实例或是整个类（像是一个静态字段）联系起来。这些值依照关键字-值对的方式存储。所以每个对象可以存储多个值。关键字可以是任何字符串，包括对象实际拥有的字段的名称。请注意你不能通过调用<code>getAdditionalInstanceField</code>获取你之前用<code>setAdditionalStaticField</code>存储的值。取而代之的是应该使用<code>getAdditionalStaticField</code>。它有一个变量来接受对象并自动查询它的类。</p>
<h4 id="assetAsByteArray"><a href="#assetAsByteArray" class="headerlink" title="assetAsByteArray"></a>assetAsByteArray</h4><p>这个方法以byte数组的形式返回资源。如果你想加载你模块的资源，你可以使用以下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XposedTweakbox</span> <span class="keyword">implements</span> <span class="title">IXposedHookZygoteInit</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initZygote</span><span class="params">(StartupParam startupParam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">            Resources tweakboxRes = XModuleResources.createInstance(startupParam.modulePath, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">byte</span>[] crtPatch = assetAsByteArray(tweakboxRes, <span class="string">"crtfix_samsung_d506192d5049a4042fb84c0265edfe42.bsdiff"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="getMD5Sum"><a href="#getMD5Sum" class="headerlink" title="getMD5Sum"></a>getMD5Sum</h4><p>返回文件系统中一个文件的MD5值。需要读取权限</p>
<h4 id="getProcessPid"><a href="#getProcessPid" class="headerlink" title="getProcessPid"></a>getProcessPid</h4><p>按照进程的/proc/[pid]/cmdline的第一部分来寻找这个进程,并以字符串形式返回它的PID。</p>
<h3 id="IXposedHookZygoteInit接口"><a href="#IXposedHookZygoteInit接口" class="headerlink" title="IXposedHookZygoteInit接口"></a>IXposedHookZygoteInit接口</h3><p>要实现<code>public void initZygote(StartupParam startupParam)</code>方法,每次zygote启动时调用<code>StartupParam</code>存放类的路径</p>
<h3 id="IXposedHookLoadPackage接口"><a href="#IXposedHookLoadPackage接口" class="headerlink" title="IXposedHookLoadPackage接口"></a>IXposedHookLoadPackage接口</h3><p>主要hook操作,要实现<code>public abstract void handleLoadPackage(LoadPackageParam lpparam)</code>.每次调用app的包时触发</p>
<h2 id="IDE中使用Xposed-框架"><a href="#IDE中使用Xposed-框架" class="headerlink" title="IDE中使用Xposed  框架"></a>IDE中使用Xposed  框架</h2><p>所在的Xposed 模块都需要引用 Xposed 的jar,框架的公网发布地址是:<a href="https://bintray.com/rovo89/de.robv.android.xposed/api" target="_blank" rel="noopener">https://bintray.com/rovo89/de.robv.android.xposed/api</a></p>
<h3 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h3><p>在<code>app/build.gradle</code>配置如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    jcenter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    provided &apos;de.robv.android.xposed:api:82&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用<code>provided</code>而不用<code>compile</code>的原因是在Android 4.x上会出现问题,使用<code>provided</code>只是维持引用,真正的代码在xposed框架安装时提供.</p>
<h3 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h3><p>如果你使用的是eclipse时你可以从<a href="https://jcenter.bintray.com/de/robv/android/xposed/api/" target="_blank" rel="noopener">https://jcenter.bintray.com/de/robv/android/xposed/api/</a>下载jar.<br>我建议你放到<code>lib</code>目录下,手动添加到库路径,而不是放到<code>libs</code>目录中,因为<code>libs</code>目录中的类eclipse会自动编译API到apk中。</p>
<h3 id="API-版本"><a href="#API-版本" class="headerlink" title="API  版本"></a>API  版本</h3><p>一般情况 下api版本和xposed的版本是一样的, 也尽量保持向下兼容.<br>api 的文档地址:<a href="http://api.xposed.info/" target="_blank" rel="noopener">http://api.xposed.info/</a></p>
<h2 id="替换资源"><a href="#替换资源" class="headerlink" title="替换资源"></a>替换资源</h2><h3 id="简单资源替换"><a href="#简单资源替换" class="headerlink" title="简单资源替换"></a>简单资源替换</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initZygote</span><span class="params">(IXposedHookZygoteInit.StartupParam startupParam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    XResources.setSystemWideReplacement(<span class="string">"android"</span>, <span class="string">"bool"</span>, <span class="string">"config_unplugTurnsOnScreen"</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleInitPackageResources</span><span class="params">(InitPackageResourcesParam resparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    <span class="comment">// replacements only for SystemUI</span></span><br><span class="line">    <span class="keyword">if</span> (!resparam.packageName.equals(<span class="string">"com.android.systemui"</span>))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// different ways to specify the resources to be replaced</span></span><br><span class="line">    resparam.res.setReplacement(<span class="number">0x7f080083</span>, <span class="string">"YEAH!"</span>); <span class="comment">// WLAN toggle text. You should not do this because the id is not fixed. Only for framework resources, you could use android.R.string.something</span></span><br><span class="line">    resparam.res.setReplacement(<span class="string">"com.android.systemui:string/quickpanel_bluetooth_text"</span>, <span class="string">"WOO!"</span>);</span><br><span class="line">    resparam.res.setReplacement(<span class="string">"com.android.systemui"</span>, <span class="string">"string"</span>, <span class="string">"quickpanel_gps_text"</span>, <span class="string">"HOO!"</span>);</span><br><span class="line">    resparam.res.setReplacement(<span class="string">"com.android.systemui"</span>, <span class="string">"integer"</span>, <span class="string">"config_maxLevelOfSignalStrengthIndicator"</span>, <span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>简单的替换数据类型支持:  <code>Boolean, Color, Integer, int[], String and String[]</code></p>
<p>全局的资源替换在<code>initZygote</code>中调用<code>XResources.setSystemWideReplacement(...)</code>方法。对于特定app的资源,你需要根据包名判断之后在<code>hookInitPackageResources</code>中调用<code>res.setReplacement</code>。</p>
<p>替换<code>Drawable</code>也大同小异,便要注意的是可能一个<code>Drawable</code>实例被多个<code>ImageView</code>引用,所以要包装一个要替换的<code>Drawable</code><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resparam.res.setReplacement(<span class="string">"com.android.systemui"</span>, <span class="string">"drawable"</span>, <span class="string">"status_bar_background"</span>, <span class="keyword">new</span> XResources.DrawableLoader() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Drawable <span class="title">newDrawable</span><span class="params">(XResources res, <span class="keyword">int</span> id)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ColorDrawable(Color.WHITE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="复杂的资源替换"><a href="#复杂的资源替换" class="headerlink" title="复杂的资源替换"></a>复杂的资源替换</h3><p>像动画<code>Drawables</code>这种复杂的资源替换,必须引用到你模块中自带的资源.以替换电池图标为例,代码如下:<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> de.robv.android.xposed.mods.coloredcirclebattery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.res.XModuleResources;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookInitPackageResources;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookZygoteInit;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColoredCircleBattery</span> <span class="keyword">implements</span> <span class="title">IXposedHookZygoteInit</span>, <span class="title">IXposedHookInitPackageResources</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String MODULE_PATH = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initZygote</span><span class="params">(StartupParam startupParam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        MODULE_PATH = startupParam.modulePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleInitPackageResources</span><span class="params">(InitPackageResourcesParam resparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!resparam.packageName.equals(<span class="string">"com.android.systemui"</span>))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        XModuleResources modRes = XModuleResources.createInstance(MODULE_PATH, resparam.res);</span><br><span class="line">        resparam.res.setReplacement(<span class="string">"com.android.systemui"</span>, <span class="string">"drawable"</span>, <span class="string">"stat_sys_battery"</span>, modRes.fwd(R.drawable.battery_icon));</span><br><span class="line">        resparam.res.setReplacement(<span class="string">"com.android.systemui"</span>, <span class="string">"drawable"</span>, <span class="string">"stat_sys_battery_charge"</span>, modRes.fwd(R.drawable.battery_icon_charge));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最简单的做法就是把<code>battery_icon.png</code>,<code>battery_icon_charge.png</code>放到<code>res/drawables</code>目录下，当然你也可以用xml定义一个<code>animation-list</code>.<br>要做资源适配的话,你可以自己准备几套不同分辨率的资源放到res对应的目录里.</p>
<p>上面替换资源的做法对于常规的 app都是有效的.</p>
<h3 id="修改布局"><a href="#修改布局" class="headerlink" title="修改布局"></a>修改布局</h3><p>虽然上面的全局修改资源的方案是可行的,但是多个模块同时修改时还是有竞争问题，而且这样替换资源对于ROM的稳定性不太好.所以我推荐另外一种方案.就是在布局完成后去<code>hook</code><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleInitPackageResources</span><span class="params">(InitPackageResourcesParam resparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!resparam.packageName.equals(<span class="string">"com.android.systemui"</span>))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    resparam.res.hookLayout(<span class="string">"com.android.systemui"</span>, <span class="string">"layout"</span>, <span class="string">"status_bar"</span>, <span class="keyword">new</span> XC_LayoutInflated() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLayoutInflated</span><span class="params">(LayoutInflatedParam liparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">            TextView clock = (TextView) liparam.view.findViewById(</span><br><span class="line">                    liparam.res.getIdentifier(<span class="string">"clock"</span>, <span class="string">"id"</span>, <span class="string">"com.android.systemui"</span>));</span><br><span class="line">            clock.setTextColor(Color.RED);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>每当<code>status_bar</code>布局被填充后,会回调方法<code>handleLayoutInflated</code>,从回传的<code>LayoutInflatedParam</code>对象中你可以得到<code>View</code>对象,然后就可以对其进行修改了.</p>
<h2 id="奇淫技巧"><a href="#奇淫技巧" class="headerlink" title="奇淫技巧"></a>奇淫技巧</h2><h3 id="Xposed-接管系统所有广播包"><a href="#Xposed-接管系统所有广播包" class="headerlink" title="Xposed 接管系统所有广播包"></a>Xposed 接管系统所有广播包</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findAndHookMethod(<span class="string">"com.android.server.firewall.IntentFirewall"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"checkBroadcast"</span>,</span><br><span class="line">                Intent.class,   <span class="comment">// intent</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// callerUid</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// callerPid</span></span><br><span class="line">                String.class,   <span class="comment">// resolvedType</span></span><br><span class="line">                <span class="keyword">int</span>.class,  <span class="comment">// receivingUid</span></span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> callerUid = (<span class="keyword">int</span>) param.args[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">int</span> receivingUid = (<span class="keyword">int</span>) param.args[<span class="number">4</span>];</span><br><span class="line">                XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"broadcast from "</span> + callerUid + <span class="string">" to "</span> + receivingUid);</span><br><span class="line"></span><br><span class="line">                Intent intent = (Intent) param.args[<span class="number">0</span>];</span><br><span class="line">                String action = intent.getAction();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (action == <span class="keyword">null</span>)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (action.equals(<span class="string">"android.intent.action.SCREEN_OFF"</span>))</span><br><span class="line">                    XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"screen off"</span>);</span><br><span class="line">                <span class="keyword">if</span> (action.equals(<span class="string">"android.intent.action.SCREEN_ON"</span>))</span><br><span class="line">                    XposedBridge.log(<span class="string">"hook IntentFirewall.checkBroadcast : "</span> + <span class="string">"screen on"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="嵌套hook监控前台应用"><a href="#嵌套hook监控前台应用" class="headerlink" title="嵌套hook监控前台应用"></a>嵌套hook监控前台应用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findAndHookMethod(<span class="string">"com.android.server.net.NetworkPolicyManagerService"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"systemReady"</span>,</span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady"</span>);</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady : "</span> + param.thisObject.getClass());</span><br><span class="line"></span><br><span class="line">                Object mProcessObserverClass = XposedHelpers.getObjectField(param.thisObject, <span class="string">"mProcessObserver"</span>);</span><br><span class="line">                XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.systemReady : "</span> + mProcessObserverClass.getClass());</span><br><span class="line"></span><br><span class="line">                findAndHookMethod(mProcessObserverClass.getClass(),</span><br><span class="line">                        <span class="string">"onForegroundActivitiesChanged"</span>,</span><br><span class="line">                        <span class="keyword">int</span>.class,  <span class="comment">// pid</span></span><br><span class="line">                        <span class="keyword">int</span>.class,  <span class="comment">// uid</span></span><br><span class="line">                        <span class="keyword">boolean</span>.class, <span class="comment">// foregroundActivities</span></span><br><span class="line">                        <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> ((<span class="keyword">boolean</span>) param.args[<span class="number">2</span>])</span><br><span class="line">                            XposedBridge.log(<span class="string">"hook NetworkPolicyManagerService.onForegroundActivitiesChanged : foreground uid = "</span> + param.args[<span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="xposed进程读取文件"><a href="#xposed进程读取文件" class="headerlink" title="xposed进程读取文件"></a>xposed进程读取文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.idhyt.xposedExtend;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.SELinuxHelper;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.services.FileResult;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Created by idhyt on 2015/12/10.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This class is used to read file from data/data/xxx/files directory,</span></span><br><span class="line"><span class="comment"> * same as XSharedPreferences, read-only and without listeners support.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XFiles</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"XFiles"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> File mFile;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String mFilename;</span><br><span class="line">    <span class="keyword">private</span> ByteArrayOutputStream mFileOutputStream;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mLoaded = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mLastModified;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mFileSize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read settings from the specified file.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file The file to read.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        mFile = file;</span><br><span class="line">        mFilename = mFile.getAbsolutePath();</span><br><span class="line">        startLoadFromDisk();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> packageName The package name.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(String packageName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(packageName, packageName + <span class="string">"_files"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> packageName The package name.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName The file name with suffix (.txt, .json, etc..)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XFiles</span><span class="params">(String packageName, String fileName)</span> </span>&#123;</span><br><span class="line">        mFile = <span class="keyword">new</span> File(Environment.getDataDirectory(), <span class="string">"data/"</span> + packageName + <span class="string">"/files/"</span> + fileName);</span><br><span class="line">        mFilename = mFile.getAbsolutePath();</span><br><span class="line">        startLoadFromDisk();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Tries to make the files file world-readable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * This will only work if executed as root (e.g. &#123;<span class="doctag">@code</span> initZygote()&#125;) and only if SELinux is disabled.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; in case the file could be made world-readable.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">makeWorldReadable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!SELinuxHelper.getAppDataFileService().hasDirectFileAccess())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">// It doesn't make much sense to make the file readable if we wouldn't be able to access it anyway.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mFile.exists()) <span class="comment">// Just in case - the file should never be created if it doesn't exist.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mFile.setReadable(<span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the file that is backing these preferences.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The file might not be accessible directly.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">getFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startLoadFromDisk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            mLoaded = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="string">"XFiles-load"</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (XFiles.<span class="keyword">this</span>) &#123;</span><br><span class="line">                    loadFromDiskLocked();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(&#123; <span class="string">"rawtypes"</span>, <span class="string">"unchecked"</span> &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadFromDiskLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mLoaded) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        FileResult fileResult = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileResult = SELinuxHelper.getAppDataFileService().getFileInputStream(mFilename, mFileSize, mLastModified);</span><br><span class="line">            InputStream inputStream = fileResult.stream;</span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> length = inputStream.available();</span><br><span class="line">                <span class="keyword">byte</span> [] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> readLength;</span><br><span class="line">                <span class="keyword">while</span> ((readLength = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    byteArrayOutputStream.write(buffer, <span class="number">0</span>, readLength);</span><br><span class="line">                &#125;</span><br><span class="line">                fileOutputStream = byteArrayOutputStream;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException ignored) &#123;</span><br><span class="line">            <span class="comment">// SharedPreferencesImpl has a canRead() check, so it doesn't log anything in case the file doesn't exist</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">"getSharedPreferences"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileResult != <span class="keyword">null</span> &amp;&amp; fileResult.stream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fileResult.stream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RuntimeException rethrown) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> rethrown;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mLoaded = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (fileOutputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mFileOutputStream = fileOutputStream;</span><br><span class="line">            mLastModified = fileResult.mtime;</span><br><span class="line">            mFileSize = fileResult.size;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mFileOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        &#125;</span><br><span class="line">        notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reload the settings from file if they have changed.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; With enforcing SELinux, this call might be quite expensive.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if execute reload;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">reload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hasFileChanged()) &#123;</span><br><span class="line">            startLoadFromDisk();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check whether the file has changed since the last time it has been loaded.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; With enforcing SELinux, this call might be quite expensive.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">hasFileChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileResult result = SELinuxHelper.getAppDataFileService().statFile(mFilename);</span><br><span class="line">            <span class="keyword">return</span> mLastModified != result.mtime || mFileSize != result.size;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException ignored) &#123;</span><br><span class="line">            <span class="comment">// SharedPreferencesImpl doesn't log anything in case the file doesn't exist</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">"hasFileChanged"</span>, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">awaitLoadedLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!mLoaded) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException unused) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            awaitLoadedLocked();</span><br><span class="line">            <span class="keyword">return</span> mFileOutputStream.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getJsonFileContent</span><span class="params">()</span> <span class="keyword">throws</span> JSONException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JSONObject(getFileContent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>###判断xposed框架是否生效</p>
<ol>
<li>首先我们生成一个配置文件setting.xml</li>
<li><p>定义一个函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setXposedStatus</span><span class="params">(<span class="keyword">boolean</span> bStatus)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.getSharedPreferences(<span class="string">"setting"</span>, Context.MODE_WORLD_READABLE).edit().putBoolean(<span class="string">"xposed_enabled"</span>, bStatus).apply();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>应用每次启动时候调用函数setXposedStatus</p>
</li>
<li>在xposed中hook函数setXposedStatus调用前，并将参数改为true</li>
</ol>
<p>这样我们要想知道xposed框架是否生效可用，读取setting.xml中xposed_enabled字段值即可。</p>
<p><a href="http://www.infoq.com/cn/articles/android-in-depth-xposed" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/android-in-depth-xposed</a><br><a href="http://blog.idhyt.com/2015/11/28/android-injection-xposed-usage/" target="_blank" rel="noopener">http://blog.idhyt.com/2015/11/28/android-injection-xposed-usage/</a></p>
]]></content>
      
        
        <tags>
            
            <tag> xposed </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[reStructuredText简明语法]]></title>
      <url>http://www.farwmarth.com/reStructuredText%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h1><p>pandoc 转换rst 为markdown<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pandoc  rest.rst  -f rst -t markdown -s -o rest.md</span><br></pre></td></tr></table></figure></p>
<h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录 "></a>摘录 </h1><p><a href="https://github.com/xunxuny/zh-sphinx-doc/blob/master/rest.rst" target="_blank" rel="noopener">https://github.com/xunxuny/zh-sphinx-doc/blob/master/rest.rst</a></p>
<p>本章节介绍 reStructuredText (reST)<br>的概念和语法，为文档生成者提供足够的信息. reST<br>被认为是简单，实用的标记语言，因此学习它不会花太多时间.</p>
<a id="more"></a>
<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>段落 (ref &lt;paragraphs&gt;) 是reST 文件的基本模块.<br>段落是由空行分隔的一段文本. 和Python一样, 对齐也是reST的操作符,<br>因此同一段落的行都是左对齐的.</p>
<h1 id="内联标记"><a href="#内联标记" class="headerlink" title="内联标记"></a>内联标记</h1><p>标准的reST 内联标记相当简单:</p>
<ul>
<li>星号: <code>*text*</code> 是强调 (斜体),</li>
<li>双星号: <code>**text**</code> 重点强调 (加粗),</li>
<li>反引号: <code>text</code> 代码样式.</li>
</ul>
<p>星号及反引号在文本中容易与内联标记符号混淆，可使用反斜杠符号转义.</p>
<p>标记需注意的一些限制:</p>
<ul>
<li>不能相互嵌套,</li>
<li>内容前后不能由空白: 这样写<code>* text*</code> 是错误的,</li>
<li>如果内容需要特殊字符分隔. 使用反斜杠转义，如: <code>thisis\ *one*\ word</code>.</li>
</ul>
<p>这些限制在未来版本可能会被改善.</p>
<p>reST 也允许自定义 “文本解释角色”‘, 这意味着可以以特定的方式解释文本.<br>Sphinx以此方式提供语义标记及参考索引，操作符为 <code>:rolename:`content</code>.</p>
<p>标准reST 提供以下规则:</p>
<p>* :durole:emphasis` – 写成 <code>*emphasis*</code> * strong – 写成<br><code>**strong**</code> * literal – 写成 <code>literal</code> * subscript – 下标 *<br>superscript – 上标 * title-reference – 书、期刊等材料的标题</p>
<p>详情请查看 inline-markup .</p>
<h1 id="列表与引用"><a href="#列表与引用" class="headerlink" title="列表与引用"></a>列表与引用</h1><p>列表标记 (ref &lt;bullet-lists&gt;) 的使用最自然:<br>仅在段落的开头放置一个星号和一个缩进. 编号的列表也可以;也可以使用符号<br><code>#</code> 自动加序号:</p>
<pre><code>* 这是一个项目符号列表.
* 它有两项，
  第二项使用两行.

1. 这是个有序列表.
2. 也有两项.

#. 是个有序列表.
#. 也有两项.
</code></pre><p>列表可以嵌套，但是需跟父列表使用空行分隔 :</p>
<pre><code>* 这是
* 一个列表

  * 嵌套列表
  * 子项

* 父列表继续
</code></pre><p>定义列表 (ref &lt;definition-lists&gt;) :</p>
<pre><code>术语 (term 文本开头行)
   定义术语，必须缩进

   可以有多段组成

下一术语（term）
   描述.
</code></pre><p>一行仅能写一个术语.</p>
<p>引用段落 (ref &lt;block-quotes&gt;) 仅使用缩进（相对于周围段落）创建.</p>
<p>行模块 (ref &lt;line-blocks&gt;) 可以这样分隔 :</p>
<pre><code>| 这些行
| 在源文件里
| 被分隔的一模一样.
</code></pre><p>还有其他有用的模块:</p>
<ul>
<li>字段列表 (ref &lt;field-lists&gt;)</li>
<li>选项列表(ref &lt;option-lists&gt;)</li>
<li>字面引用模块 (ref &lt;quoted-literal-blocks&gt;)</li>
<li>文档测试模块 (ref &lt;doctest-blocks&gt;)</li>
</ul>
<h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><p>字面代码块 (ref &lt;literal-blocks&gt;) 在段落的后面使用标记 <code>::</code> 引出.<br>代码块必须缩进(同段落，需要与周围文本以空行分隔):</p>
<pre><code>这是一段正常文本. 下一段是代码文字::

   它不需要特别处理，仅是
   缩进就可以了.

   它可以有多行.

再是正常的文本段.
</code></pre><p>这个 <code>::</code> 标记很优雅:</p>
<ul>
<li>如果作为独立段落存在,则整段都不会出现在文档里.</li>
<li>如果前面有空白，则标记被移除.</li>
<li>如果前面是非空白，则标记被一个冒号取代.</li>
</ul>
<p>因此上面的例子第一段文字将变为”下一段是代码文字:”.</p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>支持两种表格. 一种是 <em>网格表格</em> (ref<br>&lt;grid-tables&gt;), 可以自定义表格的边框. 如下:</p>
<pre><code>+------------------------+------------+----------+----------+
| Header row, column 1   | Header 2   | Header 3 | Header 4 |
| (header rows optional) |            |          |          |
+========================+============+==========+==========+
| body row 1, column 1   | column 2   | column 3 | column 4 |
+------------------------+------------+----------+----------+
| body row 2             | ...        | ...      |          |
+------------------------+------------+----------+----------+
</code></pre><p><em>简单表格</em> (ref &lt;simple-tables&gt;) 书写简单, 但有一些限制:<br>需要有多行，且第一列元素不能分行显示，如下:</p>
<pre><code>=====  =====  =======
A      B      A and B
=====  =====  =======
False  False  False
True   False  False
False  True   False
True   True   True
=====  =====  =======
</code></pre><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="外部链接"><a href="#外部链接" class="headerlink" title="外部链接"></a>外部链接</h2><p>使用 <code>`链接文本 &lt;http://example.com/&gt;`_</code> 可以插入网页链接.<br>链接文本是网址，则不需要特别标记，分析器会自动发现文本里的链接或邮件地址.</p>
<p>可以把链接和标签分开 (ref<br>&lt;hyperlink-targets&gt;), 如下:</p>
<pre><code>段落里包含 `a link`_.

.. _a link: http://example.com/
</code></pre><h2 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h2><p>内部链接是Sphinx特定的reST角色, 查看章节 ref-role.</p>
<h1 id="章节"><a href="#章节" class="headerlink" title="章节"></a>章节</h1><p>章节的标题 (ref &lt;sections&gt;) 在双上划线符号之间（或为下划线）,<br>并且符号的长度不能小于文本的长度:</p>
<pre><code>=================
This is a heading
=================
</code></pre><p>通常没有专门的符号表示标题的等级，但是对于Python 文档，可以这样认为:</p>
<ul>
<li><code>#</code> 及上划线表示部分</li>
<li><code>*</code> 及上划线表示章节</li>
<li><code>=</code>, 小章节</li>
<li><code>-</code>, 子章节</li>
<li><code>^</code>, 子章节的子章节</li>
<li><code>&quot;</code>, 段落</li>
</ul>
<p>当然也可以标记（查看 reST 文档),<br>定义章节的层次，但是需要注意输出格式(HTML, LaTeX)所支持的层次深度 .</p>
<h1 id="显式标记"><a href="#显式标记" class="headerlink" title="显式标记"></a>显式标记</h1><p>显式标记”Explicit markup” (ref &lt;explicit-markup-blocks&gt;)<br>用在那些需做特殊处理的reST结构中, 如尾注，突出段落，评论，通用指令.</p>
<p>显式标记以 <code>..</code> 开始，后跟空白符，与下面段落的缩进一样.<br>(在显示标记与正常的段落间需有空行，这听起来有些复杂，但是写起来会非常直观.)</p>
<h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p>指令 (ref &lt;directives&gt;) 是显式标记最常用的模块. 也是reST<br>的扩展规则, 在 Sphinx 经常被用到.</p>
<p>文档工具支持以下指令:</p>
<ul>
<li>警告: attention, caution, danger, error, hint, important, note, tip,<br>warning 及通用标记 admonition. (大多数模式仅支持 “note” 及<br>“warning” )</li>
<li>图像:<ul>
<li>image (详情可看下面的 图像_ )</li>
<li>figure (有标题及可选说明的图像)</li>
</ul>
</li>
<li>额外的主体元素:<ul>
<li>contents &lt;table-of-contents&gt; (本地，仅是当前文件的内容表格)</li>
<li>container (自定义容器，用来生成HTML的 <code>&lt;div&gt;</code> )</li>
<li>rubric (和文档章节无关的标题)</li>
<li>topic, sidebar (高亮显示的主体元素)</li>
<li>parsed-literal (支持内联标记的斜体模块)</li>
<li>epigraph (可选属性行的摘要模块)</li>
<li>highlights, pull-quote (有自己的类属性的摘要模块)</li>
<li>compound ( 复合段落)</li>
</ul>
</li>
<li>专用表格:<ul>
<li>table (有标题的表格)</li>
<li>csv-table (CSV自动生成表格)</li>
<li>list-table (列表生成的表格)</li>
</ul>
</li>
<li>专用指令:<ul>
<li>raw (包含原始格式的标记)</li>
<li>include (包含reStructuredText标记的文件) –<br>在Sphinx中,如果包含绝对文件路径，指令会以源目录地址做为参照</li>
<li>class (将类属性指派给下一个元素) [^1]</li>
</ul>
</li>
<li>HTML 特性:<ul>
<li>meta (生成HTML <code>&lt;meta&gt;</code> 标签)</li>
<li>title (覆盖文档标题)</li>
</ul>
</li>
<li><p>影响标记:</p>
<ul>
<li>default-role (设置新的默认角色)</li>
<li>role (创建新的角色)</li>
</ul>
<p>如果仅有一个文件，最好使用 default_role.</p>
</li>
</ul>
<p>设置不使用指令 sectnum, header 及 footer.</p>
<p>Sphinx 新增指令可查阅 sphinxmarkup.</p>
<p>指令有名字，参数，选项及内容组成.<br>(记住这些，在下面一小节中自定义指令里会用到).来看一个例子:</p>
<pre><code>.. function:: foo(x)
              foo(y, z)
   :module: some.module.name

   返回用户输入的一行文本.
</code></pre><p><code>function</code> 是指令名字. 在第一行和第二行给出了两个参数, 及一个选项<br><code>module</code> (如你所见，选项在参数后给出，由冒号引出).<br>选项必须与指令有一样的缩进.</p>
<p>指令的内容在隔开一个空行后，与指令有一样缩进.</p>
<h1 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h1><p>reST 支持图像指令 (ref &lt;image&gt;), 如下:</p>
<pre><code>.. image:: gnu.png
   (选项)
</code></pre><p>这里给出的文件名( <code>gnu.png</code>)<br>必须是源文件的相对路径，如果是绝对路径则以源目录为根目录. 例如，在文件<br><code>sketch/spam.rst</code> 引用图像 <code>images/spam.png</code> ，则使用<br><code>..http://farwmarth.bestnewbee.com/images/spam.png</code> 或者 <code>http://farwmarth.bestnewbee.com/images/spam.png</code>.</p>
<p>Sphinx 会自动将图像文件拷贝到输出目录的子目录里，( 输出HTML时目录为<br><code>_static</code> )</p>
<p>图像的大小选项 (<code>width</code> 及 <code>height</code>) : 如果没有单位或单位为像素,<br>给定的尺寸信息仅在输出通道支持像素时才有用 ( 如输出LaTeX 没用).<br>其他单位在输出(如 <code>pt</code> )HTML、LaTeX 时被用到.</p>
<p>Sphinx 延伸了标准的文档化行为，只需在后面加星号:</p>
<pre><code>.. image:: gnu.*
</code></pre><p>上面这样写，Sphinx 会搜索所有名字匹配的图像，而不管图像类型.<br>每个生成器则会选择最合适的图像. 一般，在源文件目录里文件名 <code>gnu.*</code><br>会含有两个文件 gnu.pdf 和 gnu.png , LaTeX 生成器会选择前者，而HTML<br>生成器则匹配后者.</p>
<h1 id="尾注"><a href="#尾注" class="headerlink" title="尾注"></a>尾注</h1><p>尾注 (ref &lt;footnotes&gt;), 使用 <code>[#name]_</code> 标记尾注的位置,<br>尾注的内容则在文档底部红色标题”Footnotes”的后面 , 如下:</p>
<pre><code>Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_

.. rubric:: Footnotes

.. [#f1] 第一条尾注的文本.
.. [#f2] 第二条尾注的文本.
</code></pre><p>你也可以使用数字尾注 (<code>[1]_</code>) 或使用自动排序的(<code>[#]_</code>).</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>支持标准的reST 引用 (ref &lt;citations&gt;) , 且新增了”global”特性,<br>所有参考文献不受所在文件的限制. 如:</p>
<pre><code>Lorem ipsum [Ref]_ dolor sit amet.

.. [Ref] 参考文献, 书,URL 等.
</code></pre><p>引用的使用同尾注很相近，但是它们没有数字标签或以 <code>#</code> 开始.</p>
<h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><p>reST 支持替换 “substitutions” (ref &lt;substitution-definitions&gt;),<br>有一小段文本或标记被关联到 <code>|name|</code>.<br>定义与尾注一样需有明确的标记块，如下:</p>
<pre><code>.. |name| replace:: replacement *text*
</code></pre><p>或者:</p>
<pre><code>.. |caution| image:: warning.png
             :alt: Warning!
</code></pre><p>详情查看<br>reST reference for substitutions &lt;substitution-definitions&gt; .</p>
<p>如果想在所有文档中使用这些替换, 需把它们放在 rst_prolog<br>或一个单独文件里， 然后在使用它们的文档文件里包含这个文件，包含指令<br>:rstinclude .<br>(请给出包含文件的扩展名，已区别于其他的源文件，避免Sphinx将其作为独立的文档文件.)</p>
<p>Sphinx 定义了一些默认的替换, 请查看 default-substitutions.</p>
<h1 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h1><p>有明确标记块但又不是有效的结构标记的标记 (像上面的尾注）都被视为评论<br>(ref &lt;comments&gt;). 例如:</p>
<pre><code>.. 这是一个评论.
</code></pre><p>可以通过缩进产生多行评论:</p>
<pre><code>..
   这整个缩进块都是
   一个评论.

   仍是一个评论.
</code></pre><h1 id="源编码"><a href="#源编码" class="headerlink" title="源编码"></a>源编码</h1><p>在reST使用Unicode字符可以容易的包含特殊字符如破折号，版权标志. Sphinx<br>默认源文件使用UTF-8 编码; 你可以通过 source_encoding 的配置值改变编码.</p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>具体使用中可能会遇到一些问题:</p>
<ul>
<li><strong>内联标记的分离</strong><br>如上面所讲，内联标记需与周围的文本使用空格分隔, 内联标记内部则使用反斜线转义空格.<br>查看详情: <a href="http://docutils.sf.net/docs/ref/rst/restructuredtext.html#inline-markup" target="_blank" rel="noopener">the<br>reference</a> .</li>
<li><strong>内联标记不能嵌套</strong> 像这样写 <code>*see :func:`foo`*</code> 是不允许的.</li>
</ul>
<p><strong>Footnotes</strong></p>
<p>[^1]: 当默认主域里包含指令 :rstclass , 这个指令将被隐藏 因此, Sphinx使用<br>    :rstrst-class.</p>
]]></content>
      
        
        <tags>
            
            <tag> reStructuredText rst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[lua数据序列化的选择]]></title>
      <url>http://www.farwmarth.com/lua%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<p>在寻找lua的json库时并没有找到太如意的方案.都是年久失修的库.</p>
<ul>
<li>DKJSON 2.1 <a href="http://dkolf.de/src/dkjson-lua.fsl/home" target="_blank" rel="noopener">http://dkolf.de/src/dkjson-lua.fsl/home</a></li>
<li>Lua YAJL 2.0 <a href="https://github.com/brimworks/lua-yajl" target="_blank" rel="noopener">https://github.com/brimworks/lua-yajl</a></li>
<li>Lua CSJON 2.0.0 <a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" target="_blank" rel="noopener">http://www.kyne.com.au/~mark/software/lua-cjson.php</a></li>
</ul>
<p><a href="http://www.kyne.com.au/~mark/software/lua-json-performance.html" target="_blank" rel="noopener">http://www.kyne.com.au/~mark/software/lua-json-performance.html</a><br>最高选择了把cjson整合到项目 中</p>
<a id="more"></a>
<h2 id="cjson"><a href="#cjson" class="headerlink" title="cjson"></a>cjson</h2><p>支持UTF-8,支持Lua-5.1–Lua-5.3<br><a href="http://www.kyne.com.au/~mark/software/lua-cjson-manual.html" target="_blank" rel="noopener">http://www.kyne.com.au/~mark/software/lua-cjson-manual.html</a><br>lua5.3的支持可以下载云风的修改<br><a href="https://github.com/cloudwu/lua-cjson" target="_blank" rel="noopener">https://github.com/cloudwu/lua-cjson</a></p>
<h3 id="cjon-macosx的修改"><a href="#cjon-macosx的修改" class="headerlink" title="cjon macosx的修改"></a>cjon macosx的修改</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>修改!!!!!!!!!!!!</span><br><span class="line">LUA_VERSION =       5.3</span><br><span class="line">TARGET =            cjson.so</span><br><span class="line">PREFIX =            /usr/local</span><br><span class="line"><span class="meta">#</span>CFLAGS =            -g -Wall -pedantic -fno-inline</span><br><span class="line">CFLAGS =            -O3 -Wall -pedantic -DNDEBUG</span><br><span class="line">CJSON_CFLAGS =      -fpic</span><br><span class="line"><span class="meta">#</span>修改!!!!!!!!!!!!</span><br><span class="line">CJSON_LDFLAGS =     -bundle -undefined dynamic_lookup</span><br><span class="line">LUA_INCLUDE_DIR =   $(PREFIX)/include</span><br><span class="line">LUA_CMODULE_DIR =   $(PREFIX)/lib/lua/$(LUA_VERSION)</span><br><span class="line">LUA_MODULE_DIR =    $(PREFIX)/share/lua/$(LUA_VERSION)</span><br><span class="line">LUA_BIN_DIR =       $(PREFIX)/bin</span><br><span class="line">.....</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#### Number conversion configuration #####</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># Use Libc support for number conversion (default)</span><br><span class="line"><span class="meta">#</span> FPCONV_OBJS =       fpconv.o</span><br><span class="line"><span class="meta">#</span>修改!!!!!!!!!!!!</span><br><span class="line">FPCONV_OBJS =       g_fmt.o dtoa.o</span><br><span class="line">CJSON_CFLAGS +=     -DUSE_INTERNAL_FPCONV</span><br><span class="line">CJSON_CFLAGS +=     -DIEEE_BIG_ENDIAN</span><br><span class="line">CJSON_CFLAGS +=     -pthread -DMULTIPLE_THREADS</span><br></pre></td></tr></table></figure>
<h3 id="cjson-基本用例"><a href="#cjson-基本用例" class="headerlink" title="cjson 基本用例"></a>cjson 基本用例</h3><ul>
<li><strong>new</strong>  <code>local cjson2 = cjson.new()</code> 创建一个cjson模块的独立副本给cjson2,可以拥有各自不同的encoding buffer和默认配置</li>
<li><p><strong>decode</strong>    字符串转换成table</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> test_str = <span class="string">'[true, &#123;"foo":"bar"&#125;]'</span></span><br><span class="line"><span class="keyword">local</span> test= json.decode(test_str)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>encode</strong>   table转换成字符串</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> test = &#123;[<span class="number">1</span>]=<span class="number">1</span>,[<span class="number">3</span>]=<span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> test_str= json.encode(test)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>encode_sparse_array</strong>      允许稀疏数组</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">json.encode_sparse_array(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">local</span> test =&#123; [<span class="number">1000</span>] = <span class="string">"excessively sparse"</span> &#125;</span><br><span class="line"><span class="keyword">local</span> test_str= json.encode(test)</span><br><span class="line"><span class="built_in">print</span>(test_str)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>encode_max_depth</strong>    允许的最大深度</p>
</li>
<li><strong>encode_invalid_numbers</strong>    编码时是否允许非法数字 infinity,NaN等,有三个选项<code>true</code>: 允许非法数字  <code>false</code> :不允许非法数字 <code>nil</code>:将非法数字转换成nil值</li>
<li><strong> encode_keep_buffer</strong>  默认为true.true表示JSON encoding buffer会一直被重用，直到JSON模块被垃圾回收为止</li>
<li><strong>decode_invalid_numbers</strong> 解码是是否允许非法数字</li>
<li><strong>encode_number_precision</strong> precision为1至14，默认为14用来设置JSON中数字的精度（有效位数）</li>
<li><strong>decode_max_depth</strong> depth为正整数，默认为1000层.为了防止溢栈，我们可以限制迭代的层数，超过指定的层数，就会报错</li>
<li><strong>cjson.safe</strong>  在decode时不会立即报错,而是返回nil和一条错误信息</li>
</ul>
<h3 id="cjson遇到的问题"><a href="#cjson遇到的问题" class="headerlink" title="cjson遇到的问题"></a>cjson遇到的问题</h3><h4 id="稀疏数组的问题"><a href="#稀疏数组的问题" class="headerlink" title="稀疏数组的问题"></a>稀疏数组的问题</h4><p>当索引不连续时就会造成稀疏数组问题,有两种方案可以解决</p>
<ul>
<li>方案一:<br>encode_sparse_array(true),可以解决,但是设置这个选项后会发现转换的值中出现null.<br>比如lua中结构如下<code>local test ={[1]=1,[3]=3}</code>解析成json后就成了<code>[1,null,3]</code> ,在反序列化时得处理这个null值.<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> json = <span class="built_in">require</span> <span class="string">"cjson"</span></span><br><span class="line">json.encode_sparse_array(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">local</span> test = &#123;[<span class="number">1</span>]=<span class="number">1</span>,[<span class="number">3</span>]=<span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">local</span> test_str= json.encode(test)</span><br><span class="line"><span class="comment">-- local test_str= bson.encode(test)</span></span><br><span class="line"><span class="built_in">print</span>(test_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> te1= json.decode(test_str)</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(te1) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> v== json.null <span class="keyword">then</span></span><br><span class="line">        te1[k] = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(te1) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k,v)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>输出:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1,null,3]</span><br><span class="line">1   1</span><br><span class="line">3   3</span><br></pre></td></tr></table></figure></p>
<ul>
<li>方案二:<br>在json.encode()前先将稀疏数组的key转换成string,这样就不会出现这个问题了,但是同样的反序列化时要将这个string的key转换成number.<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--key tostring,解决稀疏数组问题</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tableutil.map_key_tostring</span><span class="params">(maps)</span></span></span><br><span class="line">    <span class="keyword">local</span> stable =&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>  k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(maps <span class="keyword">or</span> &#123;&#125;) <span class="keyword">do</span></span><br><span class="line">        k = <span class="built_in">tostring</span>(k) <span class="keyword">or</span> k</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">            stable[k] = tableutil.map_key_tostring(v)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            stable[k] = v</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stable</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tableutil.map_key_tonumber</span><span class="params">(maps)</span></span></span><br><span class="line">    <span class="keyword">local</span> stable = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>  k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(maps <span class="keyword">or</span> &#123;&#125;) <span class="keyword">do</span></span><br><span class="line">        k = <span class="built_in">tonumber</span>(k) <span class="keyword">or</span> k</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">            stable[k] = tableutil.map_key_tonumber(v)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            stable[k] = v</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> stable</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="skynet中使用sharedata后cjson无法序列化"><a href="#skynet中使用sharedata后cjson无法序列化" class="headerlink" title="skynet中使用sharedata后cjson无法序列化"></a>skynet中使用sharedata后cjson无法序列化</h4><p>sharedata 的数据cjosn在encode时抛出Cannot serialise userdata: type not supported<br>也是两种解决方案:</p>
<ul>
<li><p>方案一: 打个patch,正常的用json_safe序列化,出异常时先深拷贝</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> json = <span class="built_in">require</span> <span class="string">"cjson"</span></span><br><span class="line"><span class="keyword">local</span> json_safe = <span class="built_in">require</span> <span class="string">"cjson.safe"</span></span><br><span class="line"><span class="keyword">local</span> old_encode = json.encode</span><br><span class="line"><span class="keyword">local</span> tableutil = <span class="built_in">require</span> <span class="string">"public/util/tableutil"</span></span><br><span class="line"></span><br><span class="line">json.encode = <span class="function"><span class="keyword">function</span> <span class="params">( tab )</span></span></span><br><span class="line">    <span class="keyword">local</span> safe_resuslt = json_safe.encode(tab)</span><br><span class="line">    <span class="keyword">if</span>  safe_resuslt <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> safe_resuslt</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- print("-------json is null need json_patch----")</span></span><br><span class="line">    <span class="keyword">local</span> other_table = tableutil.deep_copy(tab)</span><br><span class="line">    <span class="keyword">return</span> old_encode(other_table)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>改写cjson,遍历 table 的时候支持 __pairs 方法</p>
</li>
</ul>
<h2 id="更好的选择bson"><a href="#更好的选择bson" class="headerlink" title="更好的选择bson"></a>更好的选择bson</h2><p><a href="http://bsonspec.org/" target="_blank" rel="noopener">http://bsonspec.org/</a><br>BSON是一种类json的一种二进制形式的存储格式，简称Binary JSON，它和JSON一样，支持内嵌的文档对象和数组对象，但是BSON有JSON没有的一些数据类型，如Date和BinData类型.目前主要用于MongoDB中<br>优点:</p>
<ul>
<li>更快的遍历速度 (它会将JSON的每一个元素的长度存在元素的头部，这样你只需要读取到元素长度就能直接seek到指定的点上进行读取了)</li>
<li>额外的数据类型(增加了“byte array”数据类型。这使得二进制的存储不再需要先base64转换后再存成JSON)</li>
</ul>
<p>缺点:</p>
<ul>
<li>更占内存空间</li>
</ul>
<p>对比了一下cjson和bson的encode,decode效率,bson比cjson快一倍左右.</p>
]]></content>
      
        
        <tags>
            
            <tag> json  lua </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[redis初探]]></title>
      <url>http://www.farwmarth.com/redis%E5%88%9D%E6%8E%A2/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装</span><br><span class="line">brew install redis-server</span><br><span class="line"><span class="meta">#</span>启动</span><br><span class="line">redis-server</span><br><span class="line"><span class="meta">#</span>附带config</span><br><span class="line">redis-server /path/to/redis.conf</span><br><span class="line"><span class="meta">#</span>检查版本</span><br><span class="line">redis-server --version</span><br><span class="line"><span class="meta">#</span>检查是否成功</span><br><span class="line">redis-cli</span><br><span class="line">ping PONG</span><br><span class="line"><span class="meta">#</span>关闭</span><br><span class="line">redis-cli shutdown</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">To have launchd start redis at login:</span><br><span class="line">  ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents</span><br><span class="line">Then to load redis now:</span><br><span class="line">  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist</span><br><span class="line">Or, if you don&apos;t want/need launchctl, you can just run:</span><br><span class="line">  redis-server /usr/local/etc/redis.conf</span><br></pre></td></tr></table></figure>
<p>ubuntu 默认位置:<br><code>/etc/redis/redis.conf</code></p>
<h2 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h2><p><a href="http://www.cnblogs.com/tmpt/p/redis_conf_detail_annotation.html" target="_blank" rel="noopener">http://www.cnblogs.com/tmpt/p/redis_conf_detail_annotation.html</a><br>基于这篇修改<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># redis version 3.0.7</span><br><span class="line"></span><br><span class="line"># 1k =&gt; 1000 bytes</span><br><span class="line"># 1kb =&gt; 1024 bytes</span><br><span class="line"># 1m =&gt; 1000000 bytes</span><br><span class="line"># 1mb =&gt; 1024*1024 bytes</span><br><span class="line"># 1g =&gt; 1000000000 bytes</span><br><span class="line"># 1gb =&gt; 1024*1024*1024 bytes</span><br><span class="line"></span><br><span class="line"># 只用最新的，所以可以放到最后。</span><br><span class="line"># include /path/to/local.conf</span><br><span class="line"># include /path/to/other.conf</span><br><span class="line"></span><br><span class="line">################################  通用 #####################################</span><br><span class="line"></span><br><span class="line"># 是否后台执行</span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"># 后台执行的pid文件</span><br><span class="line"># pidfile /var/run/redis.pid</span><br><span class="line"></span><br><span class="line"># 0的话，不接受TCP连接</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"># TCP listen() backlog. 虽然listen有两个参数int listen(int s, int backlog); 但是第二个参数会被/proc/sys/net/core/somaxconn覆盖。比如nginx设置的是511，但是也会被这个覆盖成默认的128,</span><br><span class="line"># 所以要/etc/sysctl.conf中添加net.core.somaxconn = 2048 然后 sysctl -p ，就是说，如果软件设置大于linux配置，就是linux配置，软件设置小于linux，就用软件的，就是用最小的那个。</span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># 绑定IP请求来源</span><br><span class="line"># bind 192.168.1.100 10.0.0.1</span><br><span class="line"></span><br><span class="line"># 在空闲多少秒后关闭链接（0是禁用此功能）</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># TCP keepalive</span><br><span class="line"># Linux内核里，下边的值以秒记，相当于tcp_keepalive_time，要用两倍的这个时间才能杀死（画外音，也就是probes*intvl=如下的值了，详见EverNote搜索“linux 在线服务器优化配置”）</span><br><span class="line"># 设成60比较好</span><br><span class="line">tcp-keepalive 0</span><br><span class="line"></span><br><span class="line"># 日志记录等级debug》verbose》notice（生产环境）》warning</span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"># 日志名。空字符串意味着输出到 标准输出。后台运行的redis标准输出是/dev/null。（画外音，所以要设置个文件名）</span><br><span class="line">logfile &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 是否把log记到系统日志里。标示是什么？</span><br><span class="line"># syslog-enabled no</span><br><span class="line"># syslog-ident redis</span><br><span class="line"></span><br><span class="line">#设置db的数量，默认db是0，你可以用SELECT &lt;dbid&gt; dbid在0到下边的值-1；</span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line">################################ 快照 ################################</span><br><span class="line"></span><br><span class="line"># 保存时间间隔，更新数量。如果1个key更新了，15min保存一次。10个key更新了，5分钟保存一次，10000个key更新了，每1分钟保存一次。主动调用SAVE()会阻塞所有客户端！一般是BGSAVE异步的。</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"># 如果最后一次的后台保存RDB snapshot出错，redis就会拒绝所有写请求。这样也相当于一个报警吧。等后台保存继续工作后，redis就允许写了。</span><br><span class="line"># 如果你自己配置好了redis的持久化进程的监控，你可以关闭下边：</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># 是否压缩dump后的   .rdb 数据库？默认压缩。会省硬盘，但耗CPU。</span><br><span class="line">rdbcompression no</span><br><span class="line"></span><br><span class="line"># 是否校验rdb快照？CRC64校验值会放在文件尾部。会导致10%性能下降。关闭后，校验值用0填充</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># DB名称</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"># 工作目录</span><br><span class="line"># DB会写入这个目录，以上边的名字。“仅追加文件”也会存在这个目录。注意：这里必须是目录名，不能是文件名！</span><br><span class="line">dir ./</span><br><span class="line"></span><br><span class="line">################################# 复制集 #################################</span><br><span class="line"></span><br><span class="line"># 主从复制。用slaveof去复制另一份redis。</span><br><span class="line"># 1）redis复制是异步的。但你可以让主redis拒绝写请求，当少于某个个数的从redis在线。</span><br><span class="line"># 2）如果复制进程暂停了一小会儿，slave可以进行重新进行部分同步，你可以设置一下复制backlog大小</span><br><span class="line"># 3）是自动的，无需干预。</span><br><span class="line"></span><br><span class="line"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line"></span><br><span class="line"># 如果主机需要鉴权，则需要配置密码</span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line"></span><br><span class="line"># 当slave和master断了，会有两种情况：</span><br><span class="line"># 1）默认：slave-serve-stale-data yes 这时，slave接受请求并返回老数据</span><br><span class="line"># 2）如果是no了，则对任何命令都返回SYNC with master in progress，INFO和SLAVEOF命令除外！</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># 2.6之后，redis默认slave都是read-only的，但是slave默认可以执行所有管理员命令。CONFIG,DEBUG等。你可以用rename-command去重命名危险的命令，隐藏他们。</span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"># 复制集同步策略：磁盘或者socket</span><br><span class="line"># 新slave连接或者老slave重新连接时候不能只接收不同，得做一个全同步。需要一个新的RDB文件dump出来，然后从master传到slave。可以有两种情况：</span><br><span class="line"># 1）基于硬盘（disk-backed）：master创建一个新进程dump RDB，完事儿之后由父进程（即主进程）增量传给slaves。</span><br><span class="line"># 2）基于socket（diskless）：master创建一个新进程直接dump RDB到slave的socket，不经过主进程，不经过硬盘。</span><br><span class="line"># 基于硬盘的话，RDB文件创建后，一旦创建完毕，可以同时服务更多的slave。基于socket的话， 新slave来了后，得排队（如果超出了repl-diskless-sync-delay还没来），完事儿一个再进行下一个。</span><br><span class="line"># 当用diskless的时候，master等待一个repl-diskless-sync-delay的秒数，如果没slave来的话，就直接传，后来的得排队等了。否则就可以一起传。</span><br><span class="line"># disk较慢，并且网络较快的时候，可以用diskless。（默认用disk-based）</span><br><span class="line">repl-diskless-sync no</span><br><span class="line"># 设置成0的话，传输开始ASAP</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"># Slave发送ping给master。默认10s</span><br><span class="line"># repl-ping-slave-period 10</span><br><span class="line"></span><br><span class="line"># 超时时间，包括从master看slave，从slave看master，要大于上边的repl-ping-slave-period</span><br><span class="line"># repl-timeout 60</span><br><span class="line"></span><br><span class="line"># SYNC完毕后，在slave的socket里关闭TCP_NODELAY。</span><br><span class="line"># 如果是yes,reids发送少量的TCP包给slave，但可能导致最高40ms的数据延迟。</span><br><span class="line"># 如果是no，那可能在复制的时候，会消耗 少量带宽。</span><br><span class="line"># 默认我们是为了低延迟优化而设置成no，如果主从之间有很多网络跳跃。那设置成yes吧。</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># 复制集后台backlog大小</span><br><span class="line"># 越大，slave可以丢失的时间就越长。</span><br><span class="line"># repl-backlog-size 1mb</span><br><span class="line"></span><br><span class="line"># 多久释放backlog，当确认master不再需要slave的时候，多久释放。0是永远不释放。</span><br><span class="line"># repl-backlog-ttl 3600</span><br><span class="line"></span><br><span class="line"># 当master不可用，Sentinel会根据slave的优先级选举一个master。最低的优先级的slave，当选master。而配置成0，永远不会被选举。（必须≥0）。默认是100</span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"># slave小于几个，网络lag大于几秒的时候，master停止接受write请求。默认对slave数目无限制，给0。网络延迟给10s</span><br><span class="line"># min-slaves-to-write 3</span><br><span class="line">min-slaves-max-lag 10</span><br><span class="line"></span><br><span class="line">################################## 安全 ###################################</span><br><span class="line"># 多数情况下无需密码鉴别slave。同时，由于redis处理速度太快，所以爆破速率可达150K/S。10万/S。所以如果你要设置密码，必须设置超强的密码。</span><br><span class="line"># requirepass foobared &lt;--这就是密码</span><br><span class="line"></span><br><span class="line"># 命令重命名</span><br><span class="line"># 在一个shared环境里，可以对危险的命令，比如CONFIG，进行重命名：也可以用空字符串，达到完全屏蔽此命令的目的。</span><br><span class="line"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span><br><span class="line"># rename-command CONFIG &quot;&quot;</span><br><span class="line"># 记录进AOF或者传给slave的重命名操作可能会引发问题哦~。</span><br><span class="line"></span><br><span class="line">################################### 限制 ####################################</span><br><span class="line"># 设置最大client连接数。默认(10000)一万个。如果redis没法控制最大文件数。则给到最低32.</span><br><span class="line"># maxclients 10000</span><br><span class="line"></span><br><span class="line"># 如果redis用内存超过了设置的限制，第一，开始用maxmemory-policy配置的策略往外删数据，如果配置成了noeviction。所有write都会拒绝，比如set，lpush等。所有读请求可以接受。</span><br><span class="line"># 主要用在把redis用在LRU缓存，或者用在一个内存吃紧又不能删除的策略上。</span><br><span class="line"># 如果你有slave，你应该把最大内存别设置的太大，留一些系统内存给slave output buffers（如果是noeviction策略，就无需这样设置了）</span><br><span class="line"># maxmemory &lt;bytes&gt;</span><br><span class="line"></span><br><span class="line"># 内存策略。</span><br><span class="line"># volatile-lru -&gt;用LRU删除设置了ttl的key</span><br><span class="line"># allkeys-lru -&gt;用LRU删除任何key</span><br><span class="line"># volatile-random -&gt;随机删除有ttl的key</span><br><span class="line"># allkeys-random -&gt;随机删除任何key</span><br><span class="line"># volatile-ttl -&gt;删除即将ttl到期的key</span><br><span class="line"># noeviction -&gt;不删，有write的时候报错。</span><br><span class="line"># 如下操作会返回错误</span><br><span class="line">#       set setnx setex append</span><br><span class="line">#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd</span><br><span class="line">#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby</span><br><span class="line">#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby</span><br><span class="line">#       getset mset msetnx exec sort</span><br><span class="line"># 默认是</span><br><span class="line"># maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"># LRU和最小TTL并不是最精确的，但是差不多了也。默认redis每次取3个key然后取最符合删除策略的删除。你可以配置这个数。越低，删除的东西就会越多。比如设置100个，就能删百分之一。</span><br><span class="line"># maxmemory-samples 3</span><br><span class="line"></span><br><span class="line">############################## AOF ###############################</span><br><span class="line"># 默认redis异步的dump数据到disk。但如果断电了，那么就会丢失一部分数据了（根据save的配置）。</span><br><span class="line"># AOF提供更好模式。比如用默认的AOF，redis只丢失最近一秒的数据（断电情况），或者最后一个write操作（redis自身错误，os正常）。每个write操作写一次AOF。</span><br><span class="line"># 当AOF文件太大了，redis会自动重写一个aof文件出来。</span><br><span class="line"># AOF和RDB持久化可以同时启用。redis会优先读AOF恢复数据。</span><br><span class="line"># Please check http://redis.io/topics/persistence for more information</span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># 默认文件名</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># fsync()三种：</span><br><span class="line"># no：让OS托管，这样更快。</span><br><span class="line"># always：每次write都刷到log，慢，最安全。</span><br><span class="line"># everysec：每秒一次flush。（默认）</span><br><span class="line"># http://antirez.com/post/redis-persistence-demystified.html</span><br><span class="line"># appendfsync always</span><br><span class="line">appendfsync everysec</span><br><span class="line"># appendfsync no</span><br><span class="line"></span><br><span class="line"># 当fsync为always或者everysec，当一个bgsave或者AOF rewrite线程正在耗费大量I/0，redis可能会在fsync上阻塞很久。发生之后就无法fix，即使是另一个线程跑fsync，也会阻塞我们同步的write方法。</span><br><span class="line"># 如下方法可以解决这个问题：当bgsave()或bgrewriteaof()在跑，主进程的fsync()就无法调用。也就是当子进程在save，那段时光相当于redis是appendaof no的。也就是有可能会丢失最多30s的log。</span><br><span class="line"># 所以如果你有lag问题，把下边改成yes，否则就用no。yes意思是暂停aof，拒绝主进程的这次fsync。no是redis是排队的，不会被prevent了，但主进程是阻塞的。</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"># 自动重写AOF</span><br><span class="line"># 当AOF文件大小到一定比例，就自动隐式调用BGREWRITEAOF</span><br><span class="line"># 过程：redis记住最后一次rewrite时aof文件大小（重启后没rewrite的话，就是启动时AOF文件的大小），如果现在AOF大小和上次的比例达到特定值就重写。也要指定最小AOF大小，防止到2倍：1M的时候也重写。</span><br><span class="line"># 把percentage改成0，就是禁用重写。</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># AOF文件可能在尾部是不完整的（上次system关闭有问题，尤其是mount ext4文件系统时没有加上data=ordered选项。只会发生在os死时，redis自己死不会不完整）。那redis重启时load进内存的时候就有问题了。</span><br><span class="line"># 发生的时候，可以选择redis启动报错，或者load尽量多正常的数据。</span><br><span class="line"># 如果aof-load-truncated是yes，会自动发布一个log给客户端然后load（默认）。如果是no，用户必须手动redis-check-aof修复AOF文件才可以。</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line">################################ REDIS 集群配置  ###############################</span><br><span class="line">#打开集群节点开关才能加入到集群中</span><br><span class="line"># cluster-enabled yes</span><br><span class="line"></span><br><span class="line">#每个集群节点都需要一个不同的节点文件名，由节点自动维护</span><br><span class="line"># cluster-config-file nodes-6379.conf</span><br><span class="line"></span><br><span class="line">#节点请求超时时间单位毫秒</span><br><span class="line"># cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#并没有实质的获取从机正确数据的做法，但有两种方法来提高这种准确性</span><br><span class="line">#</span><br><span class="line"># 1)如果有多个从机能够实行故障转移机制，他们会以与主机数据偏差最小的作为排名来交换数据</span><br><span class="line">#</span><br><span class="line"># 2) 每个从机都记录最后一次与主机连接的时间，如果最后的连接时间太旧了就不再进行故障转移。</span><br><span class="line">#第二点可以由用户来配置，从机最后和主机的交互时间不能大于下面的公式：</span><br><span class="line">#   (node-timeout * slave-validity-factor) + repl-ping-slave-period</span><br><span class="line">#</span><br><span class="line">#举例来说如果node-timeout设置为30s,slave-validity-factor为10,repl-ping-slave-period默认配置为10s,那么如果从机和主机最后连接时间超过310s就不会进行故障转移</span><br><span class="line">#</span><br><span class="line"># 一个过大的因子设置可能会导致将从机过旧的数据同步到集群中，而过小则会导致集群中这个从机被选择到的概率变小.</span><br><span class="line">#</span><br><span class="line"># 为了获得最高的可用性,可以把slave-validity-factor设置为0，这意味着这个从机节点不管和主机连接的时间，总是会进行故障转移。</span><br><span class="line">#</span><br><span class="line">#零值总能保证集群可以恢复数据运行.</span><br><span class="line">#</span><br><span class="line"># cluster-slave-validity-factor 10</span><br><span class="line"></span><br><span class="line"># 集群的从机可以迁移成独立的主机模式.但是这样以独立主机运行在遇到故障时无法进行故障转移。</span><br><span class="line">#</span><br><span class="line">#从节点迁移成独立主机必须满足的条件是，这前的集群主机的从机数量不少于配置值,这个配置值一般是1,如果想禁止迁移模式可以将值设置为0，0值只要在调试模式下是合理的。</span><br><span class="line">#</span><br><span class="line"># cluster-migration-barrier 1</span><br><span class="line"></span><br><span class="line">#当检测到没有可用的哈希槽结点宕机时,redis会集群停止所有的查询服务,但是有时候你想这个集群在其他部分节点宕掉时还可以接受查询服务,你可以设置值luster-require-full-coverage为no</span><br><span class="line"># cluster-require-full-coverage yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################################ LUA SCRIPTING  ###############################</span><br><span class="line"># 如果达到最大时间限制（毫秒），redis会记个log，然后返回error。</span><br><span class="line"># 当一个脚本超过了最大时限。只有SCRIPT KILL和SHUTDOWN NOSAVE可以用。第一个可以杀没有调write命令的东西。要是已经调用了write，只能用第二个命令杀。</span><br><span class="line"># 设置成0或者负值，时限就无限。</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line">################################## SLOW LOG ###################################</span><br><span class="line"># 线程阻塞不能服务其他请求的时间长度。两个参数：第一个是时长（以微秒为单位！，是毫秒的千分之一。）。第二个是log的size，超过了，就会删除之前的log。</span><br><span class="line"># 1000000是一秒。负值是所有请求都记log！下边是0.10S。100毫秒。</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># log长度的设置值是没限制。但是需要内存。</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line">################################ LATENCY MONITOR ##############################</span><br><span class="line"># 用LATENCY打印redis实例在跑命令时的耗时图表。</span><br><span class="line"># 只记录大于等于下边设置的值的操作。0的话，就是关闭监视。可以动态开启。直接运行CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line">############################# Event notification ##############################</span><br><span class="line"># 可以通知pub/sub客户端关于key空间的变化。http://redis.io/topics/notifications</span><br><span class="line"># 比如如果开着开关。一个client进行了DEL操作在“foo”key上在database0上。两个消息将会发布通过 pub/sub</span><br><span class="line"># PUBLISH __keyspace@0__:foo del</span><br><span class="line"># PUBLISH __keyevent@0__:del foo</span><br><span class="line"># 大部分人不需要这个功能，并且还需要一定开销，所以默认关闭。</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line">############################### ADVANCED CONFIG ###############################</span><br><span class="line"># hash结构存储，小数据量的用数组，大数据量用map（encoding保存结构信息）</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># list同上。</span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># Set在一种情况下会用特殊encoding：整个set是string组成，但是突然需要变成64位带符号整数且是10为根。。不懂。</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># zset同set</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog 不懂。大于16000完全不可接受！当CPU很顶得住的话，给10000可以。默认给3000.</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># Active rehashing 越多次的操作进入了正在进行rehash的table，越多的rehash步骤需要执行。如果redis是空闲的，那么rehash操作是永远没法停止的，越多的内存也被消耗了。</span><br><span class="line"># 默认就用yes就行 了如果你想释放内存ASAP。</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># client output buffer限制，可以用来强制关闭传输缓慢的客户端（比如redis pub的东西有比较慢的client无法及时sub）</span><br><span class="line"># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;</span><br><span class="line"># class可以为以下：</span><br><span class="line">#</span><br><span class="line"># normal -&gt; normal clients including MONITOR clients</span><br><span class="line"># slave  -&gt; slave clients</span><br><span class="line"># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern</span><br><span class="line"># 当hard限制到了会立即被关闭客户端。如果soft限制到了，会等soft秒。</span><br><span class="line"># 比如硬限制是32m，soft是16m，10secs。到32m就立即断，或者在16m以上停止了10secs。</span><br><span class="line"># 设置成0就是关闭。</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># redis内部调度（进行关闭timeout的客户端，删除过期key等等）频率，越大则调度频率越高。设置成100以上会对CPU造成大压力除非你对线上实时性要求很高。可以在1~500之间。</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># 当child进程在rewrite AOF文件，如果这个选项是yes，那么这个file每32MB会写fsync()。这个是保证增量写硬盘而防止写硬盘时I/O突增。</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure></p>
<h2 id="参考手册"><a href="#参考手册" class="headerlink" title="参考手册"></a>参考手册</h2><p><a href="http://redis.readthedocs.org/en/2.4/index.html" target="_blank" rel="noopener">http://redis.readthedocs.org/en/2.4/index.html</a><br><a href="http://redisdoc.com/" target="_blank" rel="noopener">http://redisdoc.com/</a></p>
<h3 id="key值"><a href="#key值" class="headerlink" title="key值"></a>key值</h3><p>key值用二进制是安全的,但是太长的key值太消耗内存，太短的key值不易阅读,”object-type:id:field”可以用这种形式来标识</p>
<ul>
<li>del <code>del mykey</code> 删除给定的一个或多个 key，不存在的 key 会被忽略，返回值：被删除 key 的数量</li>
<li>dump    <code>dump mykey</code>序列化给定 key，返回被序列化的值，使用 restore 命令可以将这个值反序列化为 redis 键</li>
<li>exists  <code>exists mykey</code>检查给定 key 是否存在,返回值1或者0</li>
<li><p>expire  <code>expire mykey  60</code>为给定key设置有效时间,单位秒</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; set key some-value</span><br><span class="line">OK</span><br><span class="line">&gt; expire key 5</span><br><span class="line">(integer) 1</span><br><span class="line">&gt; get key (immediately)</span><br><span class="line">&quot;some-value&quot;</span><br><span class="line">&gt; get key (after some time)</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure>
</li>
<li><p>expireat    <code>expire mykey  1355292000</code>  这个key将在2012.12.12过期.为给定key设置有效时间，接受时间戳timestamp</p>
</li>
<li>keys    <code>keys *</code>查找所有符合给定模式 pattern 的 key;keys * 匹配数据库中所有 key；keys h?llo 匹配 hello，hallo等。keys h[ae]llo匹配hello和hallo</li>
<li>migrate 将 key 原子性地从当前实例传送到目标实例的指定数据库上,一旦传送成功,  key 保证会出现在目标实例上,而当前实例上的 key 会被删除.执行的时候会阻塞进行迁移的两个实例.KEYS的速度非常快，但在一个大的数据库中使用它仍然可能造成性能问题，如果你需要从一个数据集中查找特定的key，你最好还是用集合(Set)</li>
<li>move  <code>move song 1</code># 将song移动到数据库1.  将当前数据库的 key 移动到给定的数据库 db当中.因为两个数据库有相同的key，MOVE失败</li>
<li><p>object  从内部察看给定 key 的 redis 对象<br>object命令有多个子命令：</p>
<ul>
<li>object refcount <key>返回给定key引用所储存的值的次数。此命令主要用于除错。</key></li>
<li>object encoding <key>返回给定key锁储存的值所使用的内部表示(representation)。</key></li>
<li>object idletime <key>返回给定key自储存以来的空转时间(idle， 没有被读取也没有被写入)，以秒为单位。<br>对象可以以多种方式编码：</key></li>
<li>字符串可以被编码为raw(一般字符串)或int(用字符串表示64位数字是为了节约空间)。</li>
<li>列表可以被编码为ziplist或linkedlist。ziplist是为节约大小较小的列表空间而作的特殊表示。</li>
<li>集合可以被编码为intset或者hashtable。intset是只储存数字的小集合的特殊表示。</li>
<li>哈希表可以编码为zipmap或者hashtable。zipmap是小哈希表的特殊表示。</li>
<li>有序集合可以被编码为ziplist或者skiplist格式。ziplist用于表示小的有序集合，而skiplist则用于表示任何大小的有序集合。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis&gt; set game &quot;cod&quot;  # 设置一个字符串</span><br><span class="line">ok</span><br><span class="line">redis&gt; object refcount game  # 只有一个引用</span><br><span class="line">(integer) 1</span><br><span class="line">redis&gt; object idletime game  # 等待一阵。。。然后查看空转时间</span><br><span class="line">(integer) 90</span><br><span class="line">redis&gt; get game  # 提取game， 让它处于活跃(active)状态</span><br><span class="line">&quot;cod&quot;</span><br><span class="line">redis&gt; object idletime game  # 不再处于空转</span><br><span class="line">(integer) 0</span><br><span class="line">redis&gt; object encoding game  # 字符串的编码方式</span><br><span class="line">&quot;raw&quot;</span><br><span class="line">redis&gt; set phone 15820123123  # 大的数字也被编码为字符串</span><br><span class="line">ok</span><br><span class="line">redis&gt; object encoding phone</span><br><span class="line">&quot;raw&quot;</span><br><span class="line">redis&gt; set age 20  # 短数字被编码为int</span><br><span class="line">ok</span><br><span class="line">redis&gt; object encoding age</span><br><span class="line">&quot;int&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>persist <code>persist mykey</code> 移除给定 key 的有效时间</p>
</li>
<li>pexpire  <code>pexpire mykey 1000</code>以毫秒为单位设置 key 的有效时间 (Available since 2.6.0)</li>
<li>pexpireat   <code>pexpireat mykey 1000</code>以毫秒为单位设置 key 的有效时间戳(timestamp)(Available since 2.6.0)</li>
<li>pttl  <code>pttl mykey</code>  以毫秒为单位返回key的剩余有效时间(Available since 2.6.0)</li>
<li>randomkey  <code>randomkey</code> 从当前数据库中随机返回(已使用的)一个key</li>
<li>rename <code>rename mykey mykey1</code> 将key改名</li>
<li>renamenx     <code>rename mykey newkey</code>当且仅当 newkey 不存在时,将 key 改名为 newkey</li>
<li>restore  <code>restore mykey</code>反序列化给定的序列化值，并将它和给定的 key 关联</li>
<li>scan    <code></code> 增量迭代 Available since 2.8.0()</li>
<li><strong>sort</strong>    <code>sor mylist</code>返回或保存给定列表、集合、有序集合 key 中经过排序的元素,默认会返回该列表值的递增(从小到大)排序结果</li>
<li>ttl <code>ttl mykey</code>以秒为单位，返回给定 key 的剩余有效时间</li>
<li>type    <code>type mykey</code> 返回 key 所储存的值的类型</li>
<li>wait    <code>wait mykey</code> 堵塞等待写操作传输到指定数量的从节点(Available since 3.0.0)</li>
</ul>
<h3 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h3><p>就是个字符串</p>
<ul>
<li><strong>append</strong>  <code>append mykey &#39;hello&#39;</code> 将值追加到指定key的值末尾，如果key不存在，则相当于增加操作。</li>
<li>bitcount     <code>bitcount mykey</code> 计算给定字符串中，被设置为 1 的Bit位的数量。redis的setbit修改的是bit位置,而bitcount检查的是byte位置，两者相差有8的倍数</li>
<li>bitop   对一个或多个保存二进制位的字符串 key 进行位元操作<ul>
<li>BITOP AND destkey srckey1 srckey2 srckey3 … srckeyN  <code>bittop and newkey key1 key2</code></li>
<li>BITOP OR destkey srckey1 srckey2 srckey3 … srckeyN <code>bittop or newkey key1 key2</code></li>
<li>BITOP XOR destkey srckey1 srckey2 srckey3 … srckeyN <code>bittop xor newkey key1 key2</code></li>
<li>BITOP NOT destkey srckey  <code>bittop not newkey key1</code></li>
</ul>
</li>
<li><strong>decr</strong>  <code>decr mykey</code>  将 key 中储存的数字值减一。Key不存在，则将值置0，key类型不正确返回一个错误。</li>
<li>decrby  <code>decrby key  2</code> 将key所储存的值减去指定数量,可以为负数</li>
<li><strong>get</strong> <code>get mykey</code>  返回key所关联的字符串值，如果Key储存的值不是字符串类型，返回一个错误。</li>
<li>getbit  <code>getbit mykey</code> 对key所储存的字符串值，获取指定偏移量上的位,</li>
<li><strong>getrange</strong>  <code>getrange mykey 0 -1</code>  返回key中字符串值的子字符串，字符串的截取范围由start和end两个偏移量决定</li>
<li>getset <code>getset mykey 2</code> 将给定key的值设为value,并返回key的旧值.非字符串报错.和decr配合使用,主要是返回旧值,如果键不存在,那么返回nil</li>
<li>incr   <code>incr mykey</code> 原子递增,可以把字符串值解释成一个数字递增，因为有原子性所有多个客户端操作不会出现竞争的问题</li>
<li>incrby   <code>incr mykey  2</code>将key所储存的值加上指定增量</li>
<li>incrbyfloat <code>incrbyfloat mykey  2.5</code>为key中所储存的值加上指定的浮点数增量</li>
<li><strong>mget</strong>    <code>mget a b c</code>返回所有(一个或多个)给定key的值</li>
<li><strong>mset</strong>    <code>mset a 1 b 2 c 3</code> 同时设置一个或多个key-value对</li>
<li>msetnx  同时设置一个或多个key-value对，若一个key已被占用，则全部的执行取消。</li>
<li>psetex  以毫秒为单位设置 key 的有效时间</li>
<li><strong>set</strong>  <code>set mykey hello</code>将字符串值value关联到key ,不能超过512MB</li>
<li>setbit  <code>setbit mykey 1 1</code> 两种状态0和1 ,每个字符有8bit对key所储存的字符串值，设置或清除指定偏移量上的位(bit)</li>
<li>setex    <code>setex cache_user_id 60(时间秒) 10086(值)</code> 将值value关联到 key,并设置超时时间 相当于<code>set key value ;expire key seconds</code>两条命令,但这个操作是原子性的</li>
<li>setnx   <code>setnx mykey 1</code>「SET if Not eXists」,当key未被使用时，设置为指定值,返回值1设置 了0 未设置<br><a href="http://huoding.com/2015/09/14/463" target="_blank" rel="noopener">http://huoding.com/2015/09/14/463</a></li>
<li>setrange   <code>setrange mykey  1 &quot;me&quot;</code> 用value参数覆写(overwrite)给定key所储存的字符串值，从偏移量 offset 开始</li>
<li>strlen   <code>strlen mykey</code>返回key所储存的字符串值的长度</li>
</ul>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>基于Linked Lists实现,头尾部添加新元素的速度快，而在索引访问数据方面牺牲了部分性能。</p>
<ul>
<li>blpop    <code>blpop mylist</code>它是 lpop 命令的阻塞版本，当给定列表内没有任何元素可供弹出的时候，连接将被 blpop 命令阻塞，直到等待超时或发现可弹出元素为止</li>
<li>brpop    <code>brpop mylist</code>与blpop同义，弹出位置不同</li>
<li>brpoplpush  <code>brpoplpush source destination</code> 当列表 source 为空时， brpoplpush 命令将阻塞连接，直到等待超时</li>
<li><strong>lindex</strong>   <code>lindex mylist 0</code>返回列表 key 中，下标为 index 的元素</li>
<li>linsert <code>linsert mylist  before 2 0</code> 将0插入到2之前, 将值 value 插入到列表 key 当中</li>
<li><strong>llen</strong>     <code>llen mylist</code>  返回列表 key 的长度</li>
<li>lpop    <code>lpop mylist</code>移除并返回列表 key 的头元素</li>
<li>lpush   <code>lpush mylist 1 2</code>将一个或多个值 value 插入到列表 key 的表头</li>
<li>lpushx  <code>lpushx mylist 1</code>将值 value 插入到列表 key 的表头，当且仅当 key 存在并且是一个列表</li>
<li><strong>lrange</strong>   <code>lrange mylist 0 -1</code>返回列表 key 中指定区间内的元素，区间以偏移量 start 和 stop 指定</li>
<li>lrem  <code>lrem mylist 2(count值) hello(value值)</code> 从头部查找移除两个hello, 根据参数 count 的值，移除列表中与参数 value 相等的元素<br>count 的值可以是以下几种：<ul>
<li>count &gt; 0 : 从表头开始向表尾搜索，移除与 value 相等的元素，数量为 count 。</li>
<li>count &lt; 0 : 从表尾开始向表头搜索，移除与 value 相等的元素，数量为 count 的绝对值。</li>
<li>count = 0 : 移除表中所有与 value 相等的值</li>
</ul>
</li>
<li><strong>lset</strong> <code>lset mylist 1(下标) 2(值)</code>  将列表 key 下标为 index 的元素的值设置为 value</li>
<li>ltrim   <code>ltrim mylist 0 2</code>对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除</li>
<li><strong>rpop</strong>    <code>rpop mylist</code>移除并返回列表 key 的尾元素</li>
<li>rpoplpush  <code>rpoplpush source destination</code> 命令 rpoplpush 在一个原子时间内，执行两个动作：1、将列表 source 中的最后一个元素(尾元素)弹出，并返回给客户端。2、将 source 弹出的元素插入到列表 destination ，作为 destination 列表的的头元素。</li>
<li><strong>rpush</strong>    <code>rpush mylist A B</code>将一个或多个值 value 插入到列表 key 的表尾</li>
<li>rpushx   <code>rpushx mylist 1</code>将值 value 插入到列表 key 的表尾，当且仅当 key 存在并且是一个列表</li>
</ul>
<h3 id="hashes"><a href="#hashes" class="headerlink" title="hashes"></a>hashes</h3><p>哈希表,表示对象</p>
<ul>
<li><strong>hdel</strong>    <code>hdel user username</code>删除哈希表 key 中的一个或多个指定域，不存在的域将被忽略。</li>
<li><strong>hexists</strong> <code>hexists user name</code>查看哈希表 key 中，给定域 field 是否存在</li>
<li><strong>hget</strong>   <code>hget user username</code> 返回哈希表 key 中给定域 field 的值</li>
<li><strong>hgetall </strong> <code>hgetall user</code>返回哈希表 key 中，所有的域和值</li>
<li>hincrby <code>hincrby user age 25</code>指定加10.为哈希表 key 中的域 field 的值加上指定增量</li>
<li>hincrbyfloat  <code>hincrbyfloat user age  1.5</code>  为哈希表 key 中的域 field 加上指定的浮点数增量</li>
<li><strong>hkeys</strong>   <code>hkeys user</code> 返回哈希表 key 中的所有域</li>
<li><strong>hlen</strong>    <code>hlen user</code> 返回哈希表 key 中域的数量</li>
<li><strong>hmget</strong>   <code>hmget user username birthyear no-such-field</code> 返回哈希表 key 中, 以数组方式返回</li>
<li><strong>hmset</strong>   <code>hmset user username antirez age 25</code>同时将多个 field-value (域-值)对设置到哈希表 key 中</li>
<li><strong>hset</strong>     <code>hmset user username antirez</code> 将哈希表 key 中的域 field 的值设为 value</li>
<li>hsetnx  <code>hsetnx user username me</code>当且仅当域 field 不存在时，将哈希表 key 中的域 field 的值设置为 value</li>
<li><strong>hvals</strong>   <code>hvals user username age</code>返回哈希表 key 中所有域的值</li>
<li>hscan   增量迭代</li>
</ul>
<h3 id="sets"><a href="#sets" class="headerlink" title="sets"></a>sets</h3><p>不重复的集合</p>
<ul>
<li><p><strong>sadd</strong>   <code>sadd myset 1 2</code> 将一个或多个 member 元素加入到集合 key 当中，已经存在于集合的 member 元素将被忽略</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sadd myset 1 2</span><br><span class="line">sadd myset1 1 2 3 4</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>scard</strong>   <code>scard myset</code>返回集合 key 的集合中元素的数量</p>
</li>
<li><p>sdiff   返回一个集合的全部成员，该集合是所有给定集合之间的差集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">127.0.0.1:6379&gt; smembers myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">4) &quot;4&quot;</span><br><span class="line">127.0.0.1:6379&gt; sdiff myset myset1</span><br><span class="line">(empty list or set)</span><br><span class="line">127.0.0.1:6379&gt; sdiff myset1 myset</span><br><span class="line">1) &quot;3&quot;</span><br><span class="line">2) &quot;4&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sdiffstore  <code>sdiffstore destination key [key ...]</code>这个命令的作用和 sdiff 类似，但它将结果保存到新集合，而不是简单地返回结果集</p>
</li>
<li><p>sinter <code>sinter myset myet1</code> 返回一个集合的全部成员，该集合是所有给定集合的交集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sinter myset myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sinterstore <code>sinterstore destination key [key ...]</code> 与sinter类似，不过可以指定保存到新集合</p>
</li>
<li><p>sismember  <code>sismember myset 1</code> 判断 member 元素是否集合 key 的成员</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sismember myset 1</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; sismember myset 3</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>smembers</strong> <code>smembers myset</code>    返回集合 key 中的所有成员</p>
</li>
<li><p>smove   <code>smove source destination member</code>将 member 元素从一个集合移动到另一个集合</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">127.0.0.1:6379&gt; smembers myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">4) &quot;4&quot;</span><br><span class="line">127.0.0.1:6379&gt; smove myset1 myset 3</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">127.0.0.1:6379&gt; smembers myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;4&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>spop   <code>spop myset</code> 移除并返回集合中的一个随机元素</p>
</li>
<li>srandmember <code>srandmember myset</code>仅仅返回随机元素，而不对集合进行任何改动，与spop的区别在于不移除</li>
<li>srem    <code>srem myset 1 2</code> 移除集合 key 中的一个或多个 member 元素，不存在的 member 元素会被忽略</li>
<li><p>sunion  <code>sunion myset myset1</code>返回一个集合的全部成员，该集合是所有给定集合的并集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) &quot;3&quot;</span><br><span class="line">127.0.0.1:6379&gt; smembers myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;4&quot;</span><br><span class="line">127.0.0.1:6379&gt; sunion myset myset1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">4) &quot;4&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sunionstore 与sunion类似，不过可以指定保存到新集合</p>
</li>
<li>sscan   增量迭代</li>
</ul>
<h3 id="sortedset-有序集合"><a href="#sortedset-有序集合" class="headerlink" title="sortedset (有序集合)"></a>sortedset (有序集合)</h3><ul>
<li>zadd   <code>zadd key score member [[score member] [score member] ...]</code> 将一个或多个 member 元素及其 score 值加入到有序集 key 当中</li>
<li>zcard   <code>zcard key</code> 返回有序集 key 的基数</li>
<li><p>zcount    <code>zcount key min max</code> 返回有序集 key 中,score 值在 min 和 max 之间(包括 score 值等于 min 或 max )的成员的数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd zset 1 me</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; zcount zset 0 1</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>zincrby <code>zincrby key increment member</code>为有序集 key 的成员 member 的 score 值加上指定增量</p>
</li>
<li>zrange <code>ZRANGE key start stop</code> 返回有序集 key 中，指定区间内的成员(小到大排列)</li>
<li><p>zrangebyscore <code>zrangebyscore key min max</code>  返回有序集 key 中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis&gt; zadd salary 2500 jack                        # 测试数据</span><br><span class="line">(integer) 0</span><br><span class="line">redis&gt; zadd salary 5000 tom</span><br><span class="line">(integer) 0</span><br><span class="line">redis&gt; zadd salary 12000 peter</span><br><span class="line">(integer) 0</span><br><span class="line"></span><br><span class="line">redis&gt; zrangebyscore salary -inf +inf               # 显示整个有序集</span><br><span class="line">1) &quot;jack&quot;</span><br><span class="line">2) &quot;tom&quot;</span><br><span class="line">3) &quot;peter&quot;</span><br><span class="line"></span><br><span class="line">redis&gt; zrangebyscore salary -inf +inf withscores    # 显示整个有序集及成员的 score 值</span><br><span class="line">1) &quot;jack&quot;</span><br><span class="line">2) &quot;2500&quot;</span><br><span class="line">3) &quot;tom&quot;</span><br><span class="line">4) &quot;5000&quot;</span><br><span class="line">5) &quot;peter&quot;</span><br><span class="line">6) &quot;12000&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>zrank <code>zrank key member</code>  返回有序集 key 中成员 member 的排名。其中有序集成员按 score 值递增(从小到大)顺序排列</p>
</li>
<li>zrem  <code>zrem key member [member ...]</code>  移除有序集 key 中的一个或多个成员，不存在的成员将被忽略</li>
<li><p>zremrangebyrank <code>zremrangebyrank key start stop</code>移除有序集 key 中，指定排名(rank)区间内的所有成员</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis&gt; zadd salary 2000 jack</span><br><span class="line">(integer) 1</span><br><span class="line">redis&gt; zadd salary 5000 tom</span><br><span class="line">(integer) 1</span><br><span class="line">redis&gt; zadd salary 3500 peter</span><br><span class="line">(integer) 1</span><br><span class="line"></span><br><span class="line">redis&gt; zremrangebyrank salary 0 1       # 移除排名 0 至 1 区间内的成员</span><br><span class="line">(integer) 2</span><br><span class="line"></span><br><span class="line">redis&gt; zrange salary 0 -1 withscores    # 有序集只剩下一个成员</span><br><span class="line">1) &quot;tom&quot;</span><br><span class="line">2) &quot;5000&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>zremrangebyscore    移除有序集 key 中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员</p>
</li>
<li>zrevrange   返回有序集 key 中，指定区间内的成员，成员位置按score大到小排列<br>zrevrangebyscore    返回有序集 key 中， score 值介于 max 和 min 之间(默认包括等于 max 或 min )的所有的成员。成员按 score 值递减(从大到小)+ 排列</li>
<li>zrevrank    返回有序集 key 中成员 member 的排名。其中有序集成员按 score 值递减(从大到小)排序</li>
<li>zscore  返回有序集 key 中，成员 member 的 score 值</li>
<li>zunionstore 计算给定的一个或多个有序集的并集，其中给定 key 的数量必须以 numkeys 参数指定，并将该并集(结果集)储存到新集合</li>
<li>zinterstore 计算给定的一个或多个有序集的交集，其中给定 key 的数量必须以 numkeys 参数指定，并将该交集(结果集)储存到新集合</li>
<li>zscan   增量迭代</li>
</ul>
<h3 id="pub-sub"><a href="#pub-sub" class="headerlink" title="pub/sub"></a>pub/sub</h3><ul>
<li>psubscribe  订阅一个或多个符合给定模式的频道</li>
<li>publish 将信息 message 发送到指定的频道</li>
<li>pubsub  pubsub 是一个查看订阅与发布系统状态的内省命令</li>
<li>punsubscribe    指示客户端退订所有给定模式</li>
<li>subscribe   订阅给定的一个或多个频道的信息</li>
<li>unsubscribe 指示客户端退订给定的频道</li>
</ul>
<h3 id="transaction"><a href="#transaction" class="headerlink" title="transaction"></a>transaction</h3><ul>
<li>discard 取消事务，放弃执行事务块内的所有命令</li>
<li>exec    执行所有事务块内的命令</li>
<li>multi   标记一个事务块的开始</li>
<li>unwatch 取消 watch 命令对所有 key 的监视</li>
<li>watch   监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断</li>
</ul>
<h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><p>命令  说明</p>
<ul>
<li>eval    通过内置的 lua 解释器，可以使用 eval 命令对 lua 脚本进行求值</li>
<li>evalsha 根据给定的 sha1 校验码，对缓存在服务器中的脚本进行求值</li>
<li>script exists   给定一个或多个脚本的 sha1 校验和，返回一个包含 0 和 1 的列表，表示校验和所指定的脚本是否已经被保存在缓存当中</li>
<li>script flush    清除所有 lua 脚本缓存<br>script kill 停止当前正在运行的 lua + 脚本，当且仅当这个脚本没有执行过任何写操作时，这个命令才生效。这个命令主要用于终止运行时间过长的脚本</li>
<li>script load 将脚本 script 添加到脚本缓存中，但并不立即执行这个脚本</li>
</ul>
<h3 id="connection"><a href="#connection" class="headerlink" title="connection"></a>connection</h3><ul>
<li>auth    通过设置配置文件中 requirepass 项的值，可以使用密码来保护 redis 服务器</li>
<li>echo    打印一个特定的信息 message ，测试时使用。</li>
<li>ping    使用客户端向 redis 服务器发送一个 ping ，如果服务器运作正常的话，会返回一个pong，通常用于测试与服务器的连接是否仍然生效，或者用于测量延迟值</li>
<li>quit    请求服务器关闭与当前客户端的连接</li>
<li>select  切换到指定的数据库，数据库索引号 index 用数字值指定，以 0 作为起始索引值</li>
</ul>
<h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><ul>
<li>bgrewriteaof    执行一个 aof文件 重写操作。重写会创建一个当前 aof 文件的体积优化版本。</li>
<li>bgsave  在后台异步(asynchronously)保存当前数据库的数据到磁盘</li>
<li>client getname  返回 client setname 命令为连接设置的名字</li>
<li>client kill 关闭地址为 ip:port 的客户端</li>
<li>client list 以人类可读的格式，返回所有连接到服务器的客户端信息和统计数据</li>
<li>client setname  为当前连接分配一个名字</li>
<li>config get  config get 命令用于取得运行中的 redis 服务器的配置参数</li>
<li>config resetstat    重置 info 命令中的某些统计数据</li>
<li>config rewrite  config rewrite 命令对启动 redis 服务器时所指定的 redis.conf 文件进行改写</li>
<li>config set  config set 命令可以动态地调整 redis 服务器的配置而无须重启</li>
<li>dbsize  返回当前数据库的 key 的数量</li>
<li>debug object    debug object 是一个调试命令，它不应被客户端所使用</li>
<li>debug segfault  执行一个不合法的内存访问从而让 redis 崩溃，仅在开发时用于 bug 模拟</li>
<li>flushall    清空整个 redis 服务器的数据(删除所有数据库的所有 key )</li>
<li>flushdb 清空当前数据库中的所有 key</li>
<li>info    返回关于 redis 服务器的各种信息和统计数值</li>
<li>lastsave    返回最近一次 redis 成功将数据保存到磁盘上的时间，以 unix 时间戳格式表示</li>
<li>monitor 实时打印出 redis 服务器接收到的命令，调试用</li>
<li>psync   用于复制功能的内部命令</li>
<li>save</li>
<li>save 命令执行一个同步保存操作，将当前 redis 实例的所有数据快照(snapshot)以 rdb 文件的形式保存到硬盘。<br>一般来说，在生产环境很少执行 save 操作，因为它会阻塞所有客户端，保存数据库的任务通常由 bgsave + 命令异步地执行。然而，如果负责保存数据的后台子进程不幸出现问题时， save 可以作为保存数据的最后手段来使用。</li>
<li>shutdown shutdown 命令执行以下操作： 停止所有客户端如果有至少一个保存点在等待，执行 save 命令 如果 aof 选项被打开，更新 aof 文件<br>.关闭 redis 服务器(server)</li>
<li>slaveof slaveof 命令用于在 redis 运行时动态地修改复制(replication)功能的行为</li>
<li>slowlog slow log 是 redis 用来记录查询执行时间的日志系统</li>
<li>sync    用于复制功能的内部命令</li>
<li>time    返回当前服务器时间</li>
</ul>
<p>三条通用规则</p>
<ul>
<li>当添加元素到一个不存在的复合数据类型如list时，会自动创建这个列表,如lpush元素到一个不存在的列表会自动创建列表</li>
<li>如果删除一个空列表，会自动释放这个key</li>
<li>读写一个空列表总会返回相同的结果,如llen得到空列表长度为0,del空列表返回也是0</li>
</ul>
<h2 id="高级属性"><a href="#高级属性" class="headerlink" title="高级属性"></a>高级属性</h2><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><h2 id="桌面管理器"><a href="#桌面管理器" class="headerlink" title="桌面管理器"></a>桌面管理器</h2><p><a href="http://docs.redisdesktop.com/en/latest/install/" target="_blank" rel="noopener">http://docs.redisdesktop.com/en/latest/install/</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 安装桌面管理项</span><br><span class="line">brew cask install rdm</span><br></pre></td></tr></table></figure></p>
<p><img src="http://farwmarth.bestnewbee.com/images/rdm.png" alt=" rdm"></p>
<p>##TODO<br><a href="http://fengwan.blog.51cto.com/508652/1746731" target="_blank" rel="noopener">http://fengwan.blog.51cto.com/508652/1746731</a><br><a href="http://blog.csdn.net/dc_726/article/details/48552531" target="_blank" rel="noopener">http://blog.csdn.net/dc_726/article/details/48552531</a><br><a href="http://my.oschina.net/davehe/blog/174662" target="_blank" rel="noopener">http://my.oschina.net/davehe/blog/174662</a></p>
]]></content>
      
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[服务器的一次调优]]></title>
      <url>http://www.farwmarth.com/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%B8%80%E6%AC%A1%E8%B0%83%E4%BC%98/</url>
      <content type="html"><![CDATA[<font color="red">update 2016-5-12 10:32  优化结构</font><br><font color="red">update 2016-5-5 16:30  skynet调试</font>

<h2 id="历史遗留问题"><a href="#历史遗留问题" class="headerlink" title="历史遗留问题"></a>历史遗留问题</h2><p>这一项目的开发又接近尾声了,功能开发完毕,接下来就是运营方面的接入工作,还有就是服务器性能性的调优了.<br>之前服务器一直存在两个比较严重的问题,一个是加载离线玩家.另外一个则是静态数据未共享,导致的服务器启动内存过高的问题.</p>
<a id="more"></a>
<p>开发过程中,因为功能性的开发,不得不去解决这个离线玩家的问题,像好友这样的功能,不可能说离线就不能加好友.<br>之前一直搁置的原因是一方面是系统成型,改造的成本太高，最重要的原因还是懒 .<br>其实改造起来方案还是比较简单的.因为采用单模块单库的设计,在离线数据的加载上也极为方便.<br>玩家数据在playercenter中的结构如下:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> cache_class = class()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cache_class:ctor</span><span class="params">()</span></span></span><br><span class="line">    self.is_online = <span class="literal">false</span>   <span class="comment">--是否是线</span></span><br><span class="line">    self.do_save_time = <span class="number">0</span> <span class="comment">--上一次存库时间</span></span><br><span class="line">    self.dirty_mark = &#123;&#125;  <span class="comment">--脏标cache</span></span><br><span class="line">    self.player = player_factory.player_class.new()<span class="comment">--放置角色基础数据</span></span><br><span class="line">    self.quest_list_obj = &#123;&#125; <span class="comment">-- 放置任务数据</span></span><br><span class="line">    self.friend = friend_factory.player_cls.new()<span class="comment">--好友数据</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>dirty_mark是用作数据库加载标记使用,如果单模块的库被加载,dirty_mark则设置为true,内存中数据则是最新的.如好友表信息存储在friend表中,<br>在好友模块中如果在线玩家要加载离线玩家为好友时,只要将离线玩家的friend数据load到内存中即可,这些可以节省内存消耗 .<br>is_online标志则是标记好友是否是正常登录,正常登录数据是完整的,各系统对其数据存取没有限制,如果is_online是false,虽说明其是离线加载数据,数据不完整,在进行业务逻辑时要区别对待.加载的离线数据设定是在内存中无修改则保持最大两小时,两小时过后,或者是玩家再次上线则会先保存离线数据,再切换到正常的登录加载完整数据过程.</p>
<p>静态数据的问题其实是skynet的服务设计造成的,每个服务都是一个独立的lua state. 开多个lua服务时每个服务都要加载相同的静态数据.前期数据表不大时这个问题突显不出现,运营开服的时候在单台物理机上测试开5个服过一会总有一个服会宕掉,花了一个中午没有找到具体原因,log里并没有出现报错信息.思考良久才考虑到之前出现启动内存过高的情况.一查内存占用果不其然,因为配置表在单个服务中展开将近 30M的内存.单个逻辑服启动占用内存将近800M.<br><img src="http://farwmarth.bestnewbee.com/images/server800m.png" alt=""><br>战斗场景因为有各种类型,比如pvp等总共开了8个场景服务用于分流.这部分内存占用就400多M<br><img src="http://farwmarth.bestnewbee.com/images/scene420m.png" alt=""></p>
<p>官方的解决方案:<br><a href="https://github.com/cloudwu/skynet/wiki/ShareData" target="_blank" rel="noopener">https://github.com/cloudwu/skynet/wiki/ShareData</a><br>这个残留问题一直没有解决是因为涉及的代码太多了,大概有100个文件左右,之前每张静态表都对应 了一个对应的excel,先把静态表结构化成后端要的结构,比如公式配置表结构化类如下:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> battle_formula_excel = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> formula_data = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line">    <span class="built_in">require</span> <span class="string">"config/data/TB_formula"</span> <span class="comment">-- 公式表</span></span><br><span class="line">    <span class="keyword">for</span> id, value <span class="keyword">in</span> <span class="built_in">pairs</span>(TB_formula) <span class="keyword">do</span></span><br><span class="line">        formula_data[id] = value.content</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- commonutil.print_table(formula_data)</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">init()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">battle_formula_excel.get_formula</span><span class="params">(id)</span></span></span><br><span class="line">    <span class="keyword">return</span> formula_data[id]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> battle_formula_excel</span><br></pre></td></tr></table></figure></p>
<p>然后battle_formula_excel这个lua文件会被各个服务引用,所以单独共享TB_formula这个静态配置表这种方案的代价实在太大,折中的办法就是将结构化后的数据如formula_data,share出来,battle_formula_excel中数据源用一个标志去从不同的地方获取,如果是数据中心服务则调用init方法来初始化这个结构化数据,如果非服务则在服务启动时将数据中心服务的数据注入进去.数据和接口分离开来<br>数据中心服务如下:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> sharedata = <span class="built_in">require</span> <span class="string">"sharedata"</span></span><br><span class="line"><span class="keyword">local</span> skynet = <span class="built_in">require</span> <span class="string">"skynet"</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">"skynet.manager"</span></span><br><span class="line"><span class="keyword">local</span> svrname, svrcount = ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> command = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">init_all_data</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- 静态数据配置统一操作入口</span></span><br><span class="line">    <span class="built_in">require</span> <span class="string">"config/data/TB_formula"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> all_excel =&#123;</span><br><span class="line">    &#123;<span class="string">"battle_formula_excel"</span>, <span class="string">"config/battle_formula_excel"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"mine_excel"</span>, <span class="string">"config/silvermine_excel"</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> all_excel_data = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _,config_obj <span class="keyword">in</span> <span class="built_in">ipairs</span>(all_excel) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> path_key = config_obj[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> <span class="built_in">path</span> =config_obj[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">local</span> excel_obj = <span class="built_in">require</span> (<span class="built_in">path</span>)</span><br><span class="line">        <span class="comment">-- print("--",path,excel_obj.init_excel_data)</span></span><br><span class="line">        <span class="keyword">if</span> excel_obj.init_excel_data <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> result = excel_obj.init_excel_data()</span><br><span class="line">            <span class="built_in">assert</span>(result ~=<span class="literal">nil</span>,<span class="string">"返回结构化数据为空"</span>..path_key )</span><br><span class="line">            all_excel_data[path_key] =result</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"没有init_excel_data方法的excel"</span>,path_key)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    sharedata.new(<span class="string">"all_excel_data"</span>,all_excel_data)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">skynet.init(<span class="function"><span class="keyword">function</span> <span class="params">(  )</span></span></span><br><span class="line">    <span class="comment">--数据中心服务标志</span></span><br><span class="line">    exceldatecenter = <span class="literal">true</span></span><br><span class="line">    init_all_data()</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">skynet.start(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- 接收逻辑调用协议</span></span><br><span class="line">    skynet.dispatch(<span class="string">"lua"</span>, receive_lua)</span><br><span class="line"><span class="keyword">end</span>)</span><br></pre></td></tr></table></figure></p>
<p>改造后的结构化excel如下:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> battle_formula_excel = &#123;&#125;</span><br><span class="line"><span class="comment">--是否数据中心</span></span><br><span class="line"><span class="keyword">local</span> formula_data = &#123;&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> exceldatecenter <span class="keyword">then</span></span><br><span class="line">    formula_data =all_excel_data.battle_formula_excel.formula_data</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">for</span> id, value <span class="keyword">in</span> <span class="built_in">pairs</span>(TB_formula) <span class="keyword">do</span></span><br><span class="line">        formula_data[id] = value.content</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------供数据中心调度的接口</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">battle_formula_excel.init_excel_data</span><span class="params">(  )</span></span></span><br><span class="line">    init()</span><br><span class="line">    <span class="keyword">return</span> &#123;formula_data = formula_data&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">battle_formula_excel.get_formula</span><span class="params">(id)</span></span></span><br><span class="line">    <span class="keyword">return</span> formula_data[id]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> battle_formula_excel</span><br></pre></td></tr></table></figure></p>
<p>非数据中心服务注入结构化数据:<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> sharedata = <span class="built_in">require</span> <span class="string">"sharedata"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> battle_formula_excel = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> command = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> svr_hash_id = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">local</span> svrname, svrcount = ...</span><br><span class="line"></span><br><span class="line">skynet.init(<span class="function"><span class="keyword">function</span> <span class="params">( )</span></span></span><br><span class="line">    <span class="comment">--数据模块</span></span><br><span class="line">    all_excel_data =sharedata.query(<span class="string">"all_excel_data"</span>)</span><br><span class="line">    <span class="comment">--battle_formula_excel</span></span><br><span class="line">    battle_formula_excel = <span class="built_in">require</span> <span class="string">"config/battle_formula_excel"</span></span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">skynet.start(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">    svrcount = <span class="built_in">tonumber</span>(svrcount)</span><br><span class="line">    skynet.dispatch(<span class="string">"lua"</span>, receive_lua)</span><br><span class="line"><span class="keyword">end</span>)</span><br></pre></td></tr></table></figure></p>
<p>改造之前怕做无用功测试了几种方案.先启一个exceldatacenter服务把所有静态数据全部require进去 .再启动一个test去加载共享数据.<br><img src="http://farwmarth.bestnewbee.com/images/require.png" alt=""><br>可以看到test服务内存不像之前一样重新加载静态数据了,为了保险起见,再开了9个test服务.<br><img src="http://farwmarth.bestnewbee.com/images/datacenter.png" alt=""><br>单服务没有附加静态数据内存都在几百k左右.然后就是开发漫长的苦力活了.<br>改造完毕,内存终于降下来了,启动内存为300M<br><img src="http://farwmarth.bestnewbee.com/images/20160328211905.png" alt=""><br><img src="http://farwmarth.bestnewbee.com/images/20160328212051.png" alt=""></p>
<h2 id="压测调优"><a href="#压测调优" class="headerlink" title="压测调优"></a>压测调优</h2><p>压测过程 中性能真是惨不忍睹,关键还是前期的为了急着完成功能,设计上也没有作过多的考虑,编码过程中也没有统一规范,review代码.<br>压化也是一个循序渐进的过程,出于时间排 期的考虑只能分步走.在短时间内解决压力瓶颈.<br>如果是消息过载可以统计消耗时间找出热点,内在泄露可以通过快照方式来定位未释放的内存.</p>
<p>开发机为ubuntu,在用机器人压测过程中有连接数的限制,需要更改连接数.</p>
<h3 id="ubuntu-too-many-open-files"><a href="#ubuntu-too-many-open-files" class="headerlink" title="ubuntu too many open files"></a>ubuntu too many open files</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 单个登录用最大文件数</span><br><span class="line">cat /proc/sys/fs/file-max</span><br><span class="line">输出最大连接数</span><br><span class="line">ulimit -Hn</span><br><span class="line">输出最大连接数</span><br><span class="line">ulimit -sn</span><br><span class="line">更改最大连接数</span><br><span class="line">sudo sh -c &quot;ulimit -n 102400 &amp;&amp; exec su $LOGNAME&quot;</span><br><span class="line">ulimit -n unlimited</span><br></pre></td></tr></table></figure>
<h3 id="skynet-调试台使用"><a href="#skynet-调试台使用" class="headerlink" title="skynet 调试台使用"></a>skynet 调试台使用</h3><p><a href="https://github.com/cloudwu/skynet/wiki/DebugConsole" target="_blank" rel="noopener">https://github.com/cloudwu/skynet/wiki/DebugConsole</a><br>常用的针对所有 lua 服务的指令有：</p>
<ul>
<li>clearcache  清除多个lua虚拟机共享的代码</li>
<li>cmem    显示c层hook的内存</li>
<li>debug   针对一个 lua 服务启动内置的单步调试器。<a href="http://blog.codingnow.com/2015/02/skynet_debugger.html" target="_blank" rel="noopener">http://blog.codingnow.com/2015/02/skynet_debugger.html</a></li>
<li>exit    让一个 lua 服务退出</li>
<li>gc   强制让所有 lua 服务都执行一次垃圾回收，并报告回收后的内存</li>
<li>help    显示帮助</li>
<li>info    让一个 lua 服务汇报自己的内部信息<br>获取服务内部数据 - info address<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> skynet = <span class="built_in">require</span> <span class="string">"skynet"</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">"skynet.manager"</span>    <span class="comment">-- import skynet.register</span></span><br><span class="line"><span class="keyword">local</span> db = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> command = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">command.GET</span><span class="params">(key)</span></span></span><br><span class="line">  <span class="keyword">return</span> db[key]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">command.SET</span><span class="params">(key, value)</span></span></span><br><span class="line">  <span class="keyword">local</span> last = db[key]</span><br><span class="line">  db[key] = value</span><br><span class="line">  <span class="keyword">return</span> last</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新增的代码 -- start</span></span><br><span class="line">skynet.info_func(<span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="keyword">return</span> <span class="string">"hello world!"</span> <span class="keyword">end</span>)</span><br><span class="line"><span class="comment">-- 新增的代码 -- end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">skynet.start(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">  skynet.dispatch(<span class="string">"lua"</span>, <span class="function"><span class="keyword">function</span><span class="params">(session, address, cmd, ...)</span></span></span><br><span class="line">    <span class="keyword">local</span> f = command[<span class="built_in">string</span>.<span class="built_in">upper</span>(cmd)]</span><br><span class="line">    <span class="keyword">if</span> f <span class="keyword">then</span></span><br><span class="line">      skynet.ret(skynet.pack(f(...)))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">error</span>(<span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">"Unknown command %s"</span>, <span class="built_in">tostring</span>(cmd)))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>)</span><br><span class="line">  skynet.register <span class="string">"SIMPLEDB"</span></span><br><span class="line"><span class="keyword">end</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span> telnet 127.0.0.1 9000</span><br><span class="line">Welcome to skynet console</span><br><span class="line">list</span><br><span class="line">:0000000d       snlua simpledb</span><br><span class="line">OK</span><br><span class="line">info :0000000d</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>
<ul>
<li>inject 将 script 名字对应的脚本插入到指定服务中运行（通常可用于热更新补丁[ inject address luascript.lua]</li>
<li>kill    强制中止一个 lua 服务</li>
<li>list    列出所有服务，以及启动服务的命令参数</li>
<li>log  带log启动一个lua服务</li>
<li>logoff   关闭日志记录一个服务所有的输入消息到文件。需要在 Config 里配置 logpath</li>
<li>logon   对一个服务打开日志</li>
<li>mem  让所有 lua 服务汇报自己占用的内存</li>
<li>service  列出所有的唯一 lua 服务</li>
<li>shrtbl  Show shared short string table info</li>
<li>signal  address sig 向服务发送一个信号，sig 默认为 0 。当一个服务陷入死循环时，默认信号会打断正在执行的 lua 字节码，并抛出 error 显示调用栈。这是针对 endless loop 的 log 的有效调试方法。注：这里的信号并非系统信号</li>
<li>snax    lanuch a new snax service</li>
<li>start   启动一个lua服务</li>
<li>stat    列出所有 lua 服务的消息队列长度，以及被挂起的请求数量</li>
<li>task    显示一个服务中所有被挂起的请求的调用栈。</li>
</ul>
<h3 id="数据库优化"><a href="#数据库优化" class="headerlink" title="数据库优化"></a>数据库优化</h3><ul>
<li>数据脏标<br>定时保存数据的弊端带来的工作就是,当数据变脏时要设置 数据为脏,会减少很多写库的io.</li>
<li>数据队列<br>脏标在一定程度上可以减少很多io,但是同时在线人数过多,操作频繁时数据的写io还是很多.所以存库一般放在独立的线程中.还有一个设想就是根据玩家的等级和vip和数据的保存次数确定权重,在服务器压力过大时先保存重要级的玩家数据.在空闲时段再去保存次要的玩家数据,这样就算异常情况数据丢失损失也不会太大.当然存库时单玩家的数据必须是完整的.</li>
<li>内存数据库<br>后期考虑把非线性增长的玩家数据用redis来替代,在监测mysql登录玩家上线时加载数据需要2s左右,如果换成redis应该会有很多改观.<br>,redis当缓存 定时线程写入mysql 直接存json .表结构不改直接存json.必须注意字节长度我们曾经有字节长度不足的问题</li>
</ul>
<h3 id="服务过载"><a href="#服务过载" class="headerlink" title="服务过载"></a>服务过载</h3><ul>
<li>避免单点服务<br>逻辑过多的单点服务往往会成为性能热点,导致消息过载,除了watchdog和一些交互不频繁的服务外可以服务多开让线程驱动.</li>
<li>skynet.mqlen()  当前服务的消息队列</li>
<li>skynet.task(ret) 当前服务挂起的待处理的call任务</li>
</ul>
<h3 id="内存泄露"><a href="#内存泄露" class="headerlink" title="内存泄露"></a>内存泄露</h3><ul>
<li>调试台<code>mem</code>查看lua服务占用</li>
<li>cmemory.lua 统计c内存占用 &lt;: <a href="https://github.com/cloudwu/skynet/wiki/MemoryHook&gt;" target="_blank" rel="noopener">https://github.com/cloudwu/skynet/wiki/MemoryHook&gt;</a></li>
<li>snapshot <a href="https://github.com/cloudwu/lua-snapshot" target="_blank" rel="noopener">https://github.com/cloudwu/lua-snapshot</a></li>
<li>从_G查找表<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> findedObjMap = <span class="literal">nil</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> _G.findObject<span class="params">(obj, findDest)</span></span></span><br><span class="line">    <span class="keyword">if</span> findDest == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> findedObjMap[findDest] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    findedObjMap[findDest] = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> destType = <span class="built_in">type</span>(findDest)</span><br><span class="line">    <span class="keyword">if</span> destType == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> findDest == <span class="built_in">_G</span>.CMemoryDebug <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> <span class="built_in">pairs</span>(findDest) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> key == obj <span class="keyword">or</span> value == obj <span class="keyword">then</span></span><br><span class="line">                _info(<span class="string">"Finded Object"</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> findObject(obj, key) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                _info(<span class="string">"table key"</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> findObject(obj, value) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                _info(<span class="string">"key:["</span>..<span class="built_in">tostring</span>(key)..<span class="string">"]"</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">elseif</span> destType == <span class="string">"function"</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> uvIndex = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> name, value = <span class="built_in">debug</span>.<span class="built_in">getupvalue</span>(findDest, uvIndex)</span><br><span class="line">            <span class="keyword">if</span> name == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> findObject(obj, value) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                _info(<span class="string">"upvalue name:["</span>..<span class="built_in">tostring</span>(name)..<span class="string">"]"</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            uvIndex = uvIndex + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> _G.findObjectInGlobal<span class="params">(obj)</span></span></span><br><span class="line">    findedObjMap = &#123;&#125;</span><br><span class="line">    <span class="built_in">setmetatable</span>(findedObjMap, &#123;<span class="built_in">__mode</span> = <span class="string">"k"</span>&#125;)</span><br><span class="line">    <span class="built_in">_G</span>.findObject(obj, <span class="built_in">_G</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="减少登录流量"><a href="#减少登录流量" class="headerlink" title="减少登录流量"></a>减少登录流量</h3><ul>
<li>合并协议<br>像红点提示这种可能分部在各系统中发送,这些协议号重复但功能代码分步在各个系统中的协议可以在模块中预留接口来获取提示结果再打包发送.</li>
<li>减少登录时的推送数据<br>登录时可只推送玩家的基础角色信息,和一些必要的提示数据,其他数据可以选择延迟初始化的方式,在玩家打开客户端界面再请求数据.</li>
<li>数据分页<br>这是web中最常见的方式,数据量过大时,分成多页,好友,排行榜这种数据量大的请求可以使用分页来做优化</li>
</ul>
<h3 id="设计问题"><a href="#设计问题" class="headerlink" title="设计问题"></a>设计问题</h3><h4 id="原有核心服务结构"><a href="#原有核心服务结构" class="headerlink" title="原有核心服务结构"></a>原有核心服务结构</h4><ul>
<li>watchdog  :维护全护玩家的登录登出</li>
<li>role  :创建角色</li>
<li>auth  :第三方sdk验证</li>
<li>agent  : 玩家服务,中转数据</li>
<li>playercenter  :   玩家数据中心</li>
<li>scene  :   场景服务(城镇场景根据人流分服,单人副本,其他特殊战斗场景)</li>
</ul>
<p>watchdog(单个) —-&gt;role(多个)    : 创建角色<br>watchdog(单个) —-&gt;auth(多个)    : 账号验证,创建账号<br>watchdog (单个)—&gt; agent(对应玩家数量) ——&gt;playercenter(多个)  : 验证成功后,创建agent线程,个人数据加载到 playercenter中.<br>watchdog (单个)—&gt; agent(对应玩家数量) ——&gt;scene(多个)  :  登录加载数据后客户端可进入对应的场景服务.</p>
<h4 id="优化登录登出过程"><a href="#优化登录登出过程" class="headerlink" title="优化登录登出过程"></a>优化登录登出过程</h4><p>之前的设计因为在服务器做流失统计,把登录过程细化成一个很长的过程.这就导致各服务间的交互过于频繁.</p>
<p>client连接socket,发送auth数据—-&gt;[watchdog]请求auth—-&gt;[auth]连接python服务与sdk第三方校验token——&gt;[watchdog]返回auth结果—-&gt;client登录—-&gt;[watchdog]检查排队重复登录—–&gt;client获取角色列表—–&gt;[watchdog]请求role得到角色列表—&gt;[role]获取角色列表—-&gt;client如果角色个数不为0请求进入游戏—–&gt;[watchdog]创建[agent]—-&gt;[agent]实始化成功返回[watchdog]—-&gt;[watchdog]通知[agent]加载数据—&gt;[agent]通知[playercenter]加载数据—-&gt;成功后推送数据让客户端进入[scene]</p>
<p>开启[auth]服务的初衷是要异步与后台的python服务交互,其实auth完全没必要通过游戏服务器中转,优化后的过程如下:client通过sdk登录得到token等信息——-&gt;连接python服务校验生成加密串—-&gt;client连接gameserver发送python的加密串—–&gt;gameserver验证串与时间有效性—-&gt;走之前的登录过程,优化后的[auth]服务可以合并到[role]中,优化后[watchdog] 与[role],[agent]只要交互一次就可以完全登录操作.</p>
<h4 id="优化log-道具流水-货币流水"><a href="#优化log-道具流水-货币流水" class="headerlink" title="优化log,道具流水,货币流水"></a>优化log,道具流水,货币流水</h4><p>道具和流水消息过多,导致log服务在一直写库,消息过载.</p>
<ul>
<li>减少日志生成条数</li>
<li>打包多条日志,在10条日志数据时候再调度log服务</li>
<li>优化插入速度:事务,索引,批量插入(1000条插入一次),合并insert语句(多条日志一条insert)</li>
</ul>
<h4 id="优化退出处理"><a href="#优化退出处理" class="headerlink" title="优化退出处理"></a>优化退出处理</h4><p>退出数据不立即落地,保存一段时间.</p>
<h4 id="日志大小处理"><a href="#日志大小处理" class="headerlink" title="日志大小处理"></a>日志大小处理</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logrotate  copytruncate</span><br></pre></td></tr></table></figure>
<p>参考链接:</p>
<ul>
<li><a href="http://blog.codingnow.com/2015/01/skynet_netpack.html" target="_blank" rel="noopener">http://blog.codingnow.com/2015/01/skynet_netpack.html</a></li>
<li><a href="http://blog.codingnow.com/2013/06/skynet_watchdog.html" target="_blank" rel="noopener">http://blog.codingnow.com/2013/06/skynet_watchdog.html</a></li>
<li><a href="http://blog.codingnow.com/2013/12/skynet_agent_pool.html" target="_blank" rel="noopener">http://blog.codingnow.com/2013/12/skynet_agent_pool.html</a></li>
<li><a href="http://blog.codingnow.com/2014/10/skynet_overload.html" target="_blank" rel="noopener">http://blog.codingnow.com/2014/10/skynet_overload.html</a></li>
<li><a href="http://blog.codingnow.com/2012/09/the_design_of_skynet.html" target="_blank" rel="noopener">http://blog.codingnow.com/2012/09/the_design_of_skynet.html</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> server </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle 打包]]></title>
      <url>http://www.farwmarth.com/gradle/</url>
      <content type="html"><![CDATA[<h2 id="什么是Gradle？"><a href="#什么是Gradle？" class="headerlink" title="什么是Gradle？"></a>什么是Gradle？</h2><p>Gradle是一种依赖管理工具，基于Groovy语言，面向Java应用为主，它抛弃了基于XML的各种繁琐配置，取而代之的是一种基于Groovy的内部领域特定（DSL）语言</p>
<h2 id="安装Gradle"><a href="#安装Gradle" class="headerlink" title="安装Gradle"></a>安装Gradle</h2><p>Android Studio 默认下载目录,如果下载太慢可以手动从官网下载放到对应目录</p>
<ul>
<li><strong>Mac</strong>: /Users/&lt;用户名&gt;/.gradle/wrapper/dists** 目录</li>
<li><strong>Win</strong>: C:\Documents and Settings&lt;用户名&gt;.gradle\wrapper\dists 目录</li>
</ul>
<a id="more"></a>
<h2 id="项目相关文件"><a href="#项目相关文件" class="headerlink" title="项目相关文件"></a>项目相关文件</h2><p>gradle配置文件有模块和工程配置,大概结构如下:<br><img src="http://farwmarth.bestnewbee.com/images/gradle_project.png" alt="gradle_project.png"></p>
<p>local.properties : sdk目录<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sdk.dir=E\:\\tools\\adt-bundle-windows-x86-20140702\\adt-bundle-windows-x86-20140702\\sdk</span><br></pre></td></tr></table></figure></p>
<p>gradle.properties : 变量<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemProp.http.proxyHost=127.0.0.1</span><br><span class="line">systemProp.http.proxyPort=16823</span><br><span class="line">systemProp.https.proxyHost=127.0.0.1</span><br><span class="line">systemProp.https.proxyPort=16823</span><br></pre></td></tr></table></figure></p>
<p>settings.gradle<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--包含要编译的module</span><br><span class="line">include &apos;:libs:StickyHeadersRecyclerView&apos;, &apos;:&apos;</span><br><span class="line">include &apos;:&apos;</span><br></pre></td></tr></table></figure></p>
<p>build.gradle <a href="http://developer.android.com/intl/zh-cn/tools/building/configuring-gradle.html" target="_blank" rel="noopener">http://developer.android.com/intl/zh-cn/tools/building/configuring-gradle.html</a><br><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加插件:声明为android程序</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//脚本本身依赖的库和配置</span></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="comment">//代码库</span></span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:1.5.0'</span> <span class="comment">//依赖gradle版本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//所有工程统一配置</span></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123; url <span class="string">"https://jitpack.io"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">    jcenter()</span><br><span class="line">    maven &#123; url <span class="string">"https://jitpack.io"</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//android部分配置</span></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="comment">//编译sdk版本</span></span><br><span class="line">    compileSdkVersion <span class="number">23</span></span><br><span class="line">    <span class="comment">//打包工具版本</span></span><br><span class="line">    buildToolsVersion <span class="string">'23.0.2'</span></span><br><span class="line">   <span class="comment">//打包选项</span></span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        <span class="comment">//排除</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'proguard-project.txt'</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'project.properties'</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//默认配置</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="comment">//包名</span></span><br><span class="line">        applicationId <span class="string">"com.amaze.filemanager"</span></span><br><span class="line">        <span class="comment">//最低支持sdk版本</span></span><br><span class="line">        minSdkVersion <span class="number">14</span></span><br><span class="line">        <span class="comment">//目标sdk版本</span></span><br><span class="line">        targetSdkVersion <span class="number">23</span></span><br><span class="line">       <span class="comment">//版本号</span></span><br><span class="line">        versionCode <span class="number">36</span></span><br><span class="line">        <span class="comment">//版本字符串</span></span><br><span class="line">        versionName <span class="string">"3.0.2 "</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//签名配置</span></span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release&#123;</span><br><span class="line">                storeFile <span class="keyword">file</span>(×.keystore)</span><br><span class="line">                storePassword ×××</span><br><span class="line">                keyAlias ××××</span><br><span class="line">                keyPassword ×××</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//编译类型</span></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        <span class="comment">//正式版</span></span><br><span class="line">        release &#123;</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">             --是否混淆</span><br><span class="line">             minifyEnabled <span class="keyword">true</span></span><br><span class="line">             --proguard文件</span><br><span class="line">             proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Java 的版本配置</span></span><br><span class="line">    compileOptions &#123;</span><br><span class="line">            <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">            <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//lint检查</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//源目录设置</span></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            assets.srcDirs = [<span class="string">'assets'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Move the tests to tests/java, tests/res, etc...</span></span><br><span class="line">        instrumentTest.setRoot(<span class="string">'tests'</span>)</span><br><span class="line">        debug.setRoot(<span class="string">'build-types/debug'</span>)</span><br><span class="line">        release.setRoot(<span class="string">'build-types/release'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不同版本打包</span></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        fdroid &#123;</span><br><span class="line">            buildConfigField <span class="string">"boolean"</span>, <span class="string">"IS_VERSION_FDROID"</span>, <span class="string">"true"</span></span><br><span class="line">             packageName=<span class="string">'com.example.application1'</span></span><br><span class="line">             manifest.srcFile <span class="string">'exampleapk/AndroidManifest1.xml'</span></span><br><span class="line">        &#125;</span><br><span class="line">        play &#123;</span><br><span class="line">            buildConfigField <span class="string">"boolean"</span>, <span class="string">"IS_VERSION_FDROID"</span>, <span class="string">"false"</span></span><br><span class="line">            signingConfig signingConfigs.config</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//包依赖</span></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">     <span class="comment">//依赖其他工程</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">":lib"</span>)</span><br><span class="line">    <span class="comment">// 远程包</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:19.0.1'</span></span><br><span class="line">    <span class="comment">//本地jar包</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> Properties props = <span class="keyword">new</span> Properties()</span><br><span class="line"><span class="keyword">def</span> propFile = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">'signing.properties'</span>)</span><br><span class="line"><span class="keyword">if</span> (propFile.canRead()) &#123;</span><br><span class="line">            props.load(<span class="keyword">new</span> FileInputStream(propFile))</span><br><span class="line">            <span class="keyword">if</span> (props != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">                    props.containsKey(<span class="string">'STORE_FILE'</span>) &amp;&amp;</span><br><span class="line">                    props.containsKey(<span class="string">'STORE_PASSWORD'</span>) &amp;&amp;</span><br><span class="line">                    props.containsKey(<span class="string">'KEY_ALIAS'</span>) &amp;&amp;</span><br><span class="line">                    props.containsKey(<span class="string">'KEY_PASSWORD'</span>)) &#123;</span><br><span class="line">                    android.signingConfigs.release.storeFile = <span class="keyword">file</span>(props[<span class="string">'STORE_FILE'</span>])</span><br><span class="line">                    android.signingConfigs.release.storePassword = props[<span class="string">'STORE_PASSWORD'</span>]</span><br><span class="line">                    android.signingConfigs.release.keyAlias = props[<span class="string">'KEY_ALIAS'</span>]</span><br><span class="line">                    android.signingConfigs.release.keyPassword = props[<span class="string">'KEY_PASSWORD'</span>]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">println</span> <span class="string">'signing.properties found but some entries are missing'</span></span><br><span class="line">                    android.buildTypes.release.signingConfig = <span class="keyword">null</span></span><br><span class="line">            &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">println</span> <span class="string">'signing.properties not found'</span></span><br><span class="line">        android.buildTypes.release.signingConfig = <span class="keyword">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><h3 id="国内仓库"><a href="#国内仓库" class="headerlink" title="国内仓库"></a>国内仓库</h3><p>修改项目根目录下的build.gradle，将jcenter()或者mavenCentral()替换掉即可：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven&#123; url &apos;http://maven.oschina.net/content/groups/public/&apos;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>全局配置:USER_HOME/.gradle/init.gradle<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        def REPOSITORY_URL = &apos;http://maven.oschina.net/content/groups/public&apos;</span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            if(repo instanceof MavenArtifactRepository)&#123;</span><br><span class="line">                def url = repo.url.toString()</span><br><span class="line">                if (url.startsWith(&apos;https://repo1.maven.org/maven2&apos;) || url.startsWith(&apos;https://jcenter.bintray.com/&apos;)) &#123;</span><br><span class="line">                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot;</span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url REPOSITORY_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql 备忘录]]></title>
      <url>http://www.farwmarth.com/mysql%E5%A4%87%E5%BF%98/</url>
      <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul>
<li>安装 mysql<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>server</span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line"><span class="meta">#</span>server dev</span><br><span class="line">sudo apt-get install libmysqld-dev</span><br><span class="line"><span class="meta">#</span>client</span><br><span class="line">sudo apt-get install mysql-client</span><br><span class="line"><span class="meta">#</span>client dev</span><br><span class="line">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>删除mysql:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get autoremove --purge mysql-server-5.0</span><br><span class="line">sudo apt-get remove mysql-server</span><br><span class="line">sudo apt-get autoremove mysql-server</span><br><span class="line">sudo apt-get remove mysql-common (非常重要)</span><br><span class="line">dpkg -l |grep ^rc|awk '&#123;print $2&#125;' |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure>
</li>
<li><p>检测是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启关闭:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service mysqld start</span><br><span class="line">sudo /etc/init.d/mysql start</span><br><span class="line">sudo start mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>加到开机列表:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chkconfig -add mysqld</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建root管理员：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root password 12345678</span><br></pre></td></tr></table></figure>
</li>
<li><p>忘记密码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service mysqld stop</span><br><span class="line">mysqld_safe --user=root --skip-grant-tables</span><br><span class="line">mysql -u root</span><br><span class="line">use mysql</span><br><span class="line">update user set password=password("new_pass") where user="root";</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
</li>
<li><p>为root添加远程连接的能力：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO root@"%" IDENTIFIED BY "root";</span><br><span class="line">use mysql;</span><br><span class="line">update user set Password = password('12345678') where User='root';</span><br><span class="line"><span class="meta">#</span>mysql5.7</span><br><span class="line"><span class="meta">#</span>update user set authentication_string = password('12345678') where User='root';</span><br><span class="line">flush privileges;</span><br><span class="line">select host,user,password from user;</span><br><span class="line"><span class="meta">#</span>select host,user,authentication_string from user;</span><br><span class="line">修改 Mysql 配置文件 sudo vi /etc/mysql/my.cnf</span><br><span class="line">注释#bind-address = 127.0.0.1</span><br><span class="line">重启sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>
</li>
<li><p>mysql pid 找不到</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /var/run</span><br><span class="line">ls -l mysqld*</span><br><span class="line"><span class="meta">#</span>ls: mysqld*: No such file or directory</span><br><span class="line"><span class="meta">#</span>创建该目录，并将其权限赋给mysql用户</span><br><span class="line">mkdir mysqld</span><br><span class="line">chown -R mysql:mysql /var/run/mysqld</span><br></pre></td></tr></table></figure>
</li>
<li><p>mysql重置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/var/lib/mysql  --pid-file=/var/run/mysqld/mysqld.pid --tmpdir=/tmp</span><br></pre></td></tr></table></figure>
</li>
<li><p>字符集utf-8:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8 #增加这一行，指定字符集</span><br><span class="line">port            = 3306</span><br><span class="line">socket          = /var/run/mysqld/mysqld.sock</span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8#增加这一行，指定字符集</span><br><span class="line">user            = mysql</span><br><span class="line">pid-file        = /var/run/mysqld/mysqld.pid</span><br><span class="line"> show variables like '%char%' ;#更改前存在的用户字符集不会改变，以后新建的用户字符集都变成了UTF-8</span><br><span class="line">重启服务，字符集就成了UTF-8</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">port    = 3306</span><br><span class="line">socket  = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta">#</span># 基本配置</span><br><span class="line">user    = mysql</span><br><span class="line">port    = 3306</span><br><span class="line">socket  = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">character-set-server = utf8</span><br><span class="line">replicate-ignore-db = mysql</span><br><span class="line">replicate-ignore-db = test</span><br><span class="line">replicate-ignore-db = information_schema</span><br><span class="line"></span><br><span class="line">basedir = /data/mysql</span><br><span class="line">datadir = /data/mysql/data</span><br><span class="line">pid-file = /data/mysql/mysql.pid</span><br><span class="line">log-error = /data/mysql/mysql.error.log</span><br><span class="line"><span class="meta">#</span>log = /data/mysql/mysql.exec.log</span><br><span class="line"></span><br><span class="line">back_log = 600</span><br><span class="line"><span class="meta">#</span>最大连接数</span><br><span class="line">max_connections = 8000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 10240</span><br><span class="line">table_open_cache = 2048</span><br><span class="line"></span><br><span class="line">external-locking = FALSE</span><br><span class="line">max_allowed_packet = 32M</span><br><span class="line">sort_buffer_size = 16M</span><br><span class="line">join_buffer_size = 16M</span><br><span class="line">thread_cache_size = 300</span><br><span class="line"><span class="meta">#</span>thread_concurrency = 24</span><br><span class="line">query_cache_size = 512M</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line">query_cache_min_res_unit = 2k</span><br><span class="line">default-storage-engine = MyISAM</span><br><span class="line">thread_stack = 192K</span><br><span class="line"><span class="meta">#</span>transaction_isolation = READ-COMMITTED</span><br><span class="line">tmp_table_size = 512M</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line">interactive_timeout = 86400</span><br><span class="line">wait_timeout = 86400</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 慢查询(5.5与5.6之间有差异)</span><br><span class="line"><span class="meta">#</span>5.5版本</span><br><span class="line"><span class="meta">#</span>long_query_time = 10</span><br><span class="line"><span class="meta">#</span>log-slow-queries = /data/mysql/slow.query.log</span><br><span class="line"><span class="meta">#</span>5.6版本</span><br><span class="line">long_query_time = 10</span><br><span class="line">slow_query_log = 1</span><br><span class="line">log_queries_not_using_indexes = 1</span><br><span class="line">slow_query_log_file = /data/mysql/slow.query.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 二进制日志</span><br><span class="line">binlog_format = MIXED</span><br><span class="line">expire_logs_days = 4</span><br><span class="line">max_binlog_size = 1G</span><br><span class="line">binlog_cache_size = 4M</span><br><span class="line">max_binlog_cache_size = 10G</span><br><span class="line">log-bin = /data/mysql/binlog/binlog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 主从同步</span><br><span class="line">server-id = 1</span><br><span class="line"><span class="meta">#</span>master-host     =   192.168.1.2</span><br><span class="line"><span class="meta">#</span>master-user     =   username</span><br><span class="line"><span class="meta">#</span>master-password =   password</span><br><span class="line"><span class="meta">#</span>master-port     =  3306</span><br><span class="line"><span class="meta">#</span>master-connect-retry = 10</span><br><span class="line"><span class="meta">#</span>slave-skip-errors = 1032,1062,126,1114,1146,1048,1396</span><br><span class="line"></span><br><span class="line">relay-log-index = /data/mysql/relaylog/relaylog</span><br><span class="line">relay-log-info-file = /data/mysql/relaylog/relaylog</span><br><span class="line">relay-log = /data/mysql/relaylog/relaylog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># MYISAM相关选项</span><br><span class="line">key_buffer_size = 256M</span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 64M</span><br><span class="line">max_heap_table_size = 246M</span><br><span class="line">bulk_insert_buffer_size = 64M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line">myisam-recover-options</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># INNODB相关选项</span><br><span class="line"><span class="meta">#</span>innodb_additional_mem_pool_size = 16M #(5.6中不再推荐使用)</span><br><span class="line">innodb_buffer_pool_size = 512M</span><br><span class="line">innodb_data_file_path = ibdata1:256M:autoextend</span><br><span class="line">innodb_file_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 8</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_log_file_size = 128M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line">innodb_file_format = Barracuda</span><br><span class="line">innodb_strict_mode = 1</span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 32M</span><br></pre></td></tr></table></figure>
<h3 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h3><ul>
<li>#Mysql 查询所有表的行数和大小<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SELECT TABLE_NAME,TABLE_ROWS,DATA_LENGTH/1024/1024 "DATA_LENGTH",CREATE_TIME,TABLE_COLLATION FROM</span><br><span class="line"> INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'hj_game_stat_lyx_s' ORDER BY TABLE_ROWS DESC</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="mysql-has-gone-away"><a href="#mysql-has-gone-away" class="headerlink" title="mysql has gone away"></a>mysql has gone away</h3><ul>
<li><p>先查看日志是否有错误,是否mysql是否宕掉了<br>/data/mysql/mysql.error.log</p>
</li>
<li><p><strong>show status;</strong> 或者  <strong>show status  like ‘%uptime’;</strong>,看mysql运行时长</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>Variable_name</th>
<th style="text-align:center">Value</th>
<th style="text-align:center">Desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>Aborted_clients</td>
<td style="text-align:center">575</td>
<td style="text-align:center">由于客户端没有正确关闭连接导致客户端终止而中断的连接数</td>
</tr>
<tr>
<td>Aborted_connects</td>
<td style="text-align:center">12</td>
<td style="text-align:center">试图连接到MySQL服务器而失败的连接数</td>
</tr>
<tr>
<td>Threads_cached</td>
<td style="text-align:center">45</td>
<td style="text-align:center">线程缓存内的线程的数量</td>
</tr>
<tr>
<td>Threads_connected</td>
<td style="text-align:center">6</td>
<td style="text-align:center">当前打开的连接的数量</td>
</tr>
<tr>
<td>Threads_created</td>
<td style="text-align:center">51</td>
<td style="text-align:center">创建用来处理连接的线程数,如果Threads_created较大,你可能要增加thread_cache_size值。缓存访问率的计算方法Threads_created/Connections</td>
</tr>
<tr>
<td>Threads_running</td>
<td style="text-align:center">2</td>
<td style="text-align:center">激活的（非睡眠状态）线程数</td>
</tr>
<tr>
<td>Uptime</td>
<td style="text-align:center">1155442</td>
<td style="text-align:center">服务器已经运行的时间（以秒为单位）</td>
</tr>
<tr>
<td>Uptime_since_flush_status</td>
<td style="text-align:center">1155442</td>
<td style="text-align:center">最近一次使用FLUSH STATUS 的时间(以秒为单位)</td>
</tr>
</tbody>
</table>
<ul>
<li>show global variables like ‘%timeout’;  查看设置 的超时时间<br>| Variable_name               | Value    | Desc |<br>| —     |:———–:|:———–:|<br>| connect_timeout             | 10       |<br>| delayed_insert_timeout      | 300      |<br>| innodb_flush_log_at_timeout | 1        |<br>| innodb_lock_wait_timeout    | 7200     |<br>| innodb_rollback_on_timeout  | OFF      |<br>| interactive_timeout         | 3600     | 服务器关闭交互式连接前等待活动的秒数。交互式客户端定义为在mysql_real_connect()中使用CLIENT_INTERACTIVE选项的客户端|<br>| lock_wait_timeout           | 31536000 |<br>| net_read_timeout            | 30       |<br>| net_write_timeout           | 60       |<br>| rpl_stop_slave_timeout      | 31536000 |<br>| slave_net_timeout           | 3600     |<br>| wait_timeout                | 3600     | 服务器关闭非交互连接之前等待活动的秒数|</li>
</ul>
<p>如果是wait_timeout时间过短,可以设置时间<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set global wait_timeout=28800;</span><br><span class="line">set global interactive_timeout=28800;</span><br></pre></td></tr></table></figure></p>
<p>程序方面可以在出现这个问题后作一样重连数据库再执行sql.</p>
<ul>
<li>查看连接数,状态 SHOW PROCESSLIST;</li>
<li>SHOW GLOBAL STATUS LIKE ‘aborted_connects’;</li>
<li>SHOW GLOBAL VARIABLES LIKE ‘max_connections’;</li>
<li>SHOW GLOBAL STATUS LIKE ‘max_used_connections’;</li>
<li>show table status  ;  显示table状态</li>
</ul>
<h3 id="MySQL无法重启问题解决"><a href="#MySQL无法重启问题解决" class="headerlink" title="MySQL无法重启问题解决"></a>MySQL无法重启问题解决</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Warning: World-writable config file ‘/etc/my.cnf’ is ignored</span><br><span class="line">ls -l /etc/my.cnf</span><br><span class="line">chmod 644 /etc/my.cnf</span><br></pre></td></tr></table></figure>
<h3 id="Warning-Changing-a-readonly-file"><a href="#Warning-Changing-a-readonly-file" class="headerlink" title="Warning: Changing a readonly file"></a>Warning: Changing a readonly file</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/exports</span><br></pre></td></tr></table></figure>
<h3 id="查看mysql-端口tcp数据"><a href="#查看mysql-端口tcp数据" class="headerlink" title="查看mysql 端口tcp数据"></a>查看mysql 端口tcp数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tcpdump -s 1500 -w tcp.out port 3306</span><br><span class="line">tailf tcp.out|grep strings</span><br></pre></td></tr></table></figure>
<h3 id="设置sql模式"><a href="#设置sql模式" class="headerlink" title="设置sql模式"></a>设置sql模式</h3><p><code>SET GLOBAL sql_mode=&#39;&#39;</code></p>
<h2 id="mysql-config-not-found"><a href="#mysql-config-not-found" class="headerlink" title="mysql_config not found"></a>mysql_config not found</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/local/mysql/bin/mysql_config /usr/local/bin/mysql_config</span><br></pre></td></tr></table></figure>
<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqldump -hhostname -uusername -ppassword –databases databasename1 databasename2 databasename3 &gt; multibackupfile.sql</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[倒戈又如何]]></title>
      <url>http://www.farwmarth.com/%E5%80%92%E6%88%88%E5%8F%88%E5%A6%82%E4%BD%95/</url>
      <content type="html"><![CDATA[<h2 id="倒戈"><a href="#倒戈" class="headerlink" title="倒戈"></a>倒戈</h2><p>七月底的时候，开发了一年的游戏最终还是倒戈了,技术团队以整队收编的方式到了现在这家公司.<br>掰着脚趾头数一数,失败的项目快凑成一打了.<br>反观这几年这些项目.只能说成功的游戏都是一个模样,赚得盆满钵满.失败的原因却各不相同.<br><a id="more"></a></p>
<h3 id="初期团队组建时核心人员不齐"><a href="#初期团队组建时核心人员不齐" class="headerlink" title="初期团队组建时核心人员不齐"></a>初期团队组建时核心人员不齐</h3><p>在做第二款格斗游戏的时候就处于这种状态,刚从上一款格斗游戏的阴影里走出来,服务端全体离职,没有主策划和主美.当时立项的时候其实已经有统一的意见,先确定好主策和主美这两个职位,结果一拖再拖,抱着边开发边招人的心态.我也被赶鸭子上架地开始了游戏服务器开发.<br>直接把其他工作室的前后端移植过来.基础系统完备.整体思路就是改造游戏,揉合自己的风格.初期开发并未觉得有何不妥,开发中期核心人员不齐问题逐渐凸显.游戏做成一个没有层次的杂交体.<br>无主策,之前任职的几个经验不足的核心策划显然无法胜利这个工作,只能掌握好片面的计划,全然没有高屋建瓴的气势.<br>无主美,美术的工作也是疏于管理,然后把UI,动作外包.外包必然增加了沟通的成本,品控和时间周期也无法把控.最终的结果可想而知,游戏做出来,草草上线,运营了大概一个多月就见光死.品质上不去,渠道不肯导量,公司的核心关注点必然不在我们身上.</p>
<h3 id="管理层决策性错误"><a href="#管理层决策性错误" class="headerlink" title="管理层决策性错误"></a>管理层决策性错误</h3><p>公司高层决策其实对于下层来说是件很无奈的事情.刚入行游戏业被分到的一个儿童游戏工作室,游戏运营了几个月,终于处于出支平衡的状态.还没有站稳脚根. 项目负责人就贸然地独立成子公司.<br>之前工作室的模式其实是这样的:项目负责人有一个demo或者是有一个很不错的idea,然后通过熟人联络到大boss,然后大boss以投资的形式来负担这个idea的运营成本,项目负责人各种招兵买马,研发,上线,这个开发成本的账目 就记录在整个工作室上,游戏上线赢利然后来偿还这个成本,除此之外还要和老总分成.单方面猜测是因为管理者觉得游戏稍有起色想谋取更大的私利.<br>运营阶段刚开始是在4399平台,刚独立就开始扩张,准备新渠道接入,还筹备繁体版本,人手不变的情况下只能压缩每周活动,之前是每周都会添加新玩法和新宠物,正是这些更新点能够吸引住儿童玩家.每周玩法减少之后玩家势必也热情褪去.多渠道发行之后,因为处于敌对状态,分量单渠道的玩家峰值下来,而新上的平台付费率又低,导致了先有点起色的游戏又处于摇摇欲坠的状况.<br>最后的结果是又被总公司给收编回去,游戏被4399收购.<br>如果先稳住阵脚也许现在又是另一番结果.当然这可能只是事后诸葛亮的说辞而已.</p>
<h3 id="与市场脱节-错过最佳上线时期"><a href="#与市场脱节-错过最佳上线时期" class="headerlink" title="与市场脱节,错过最佳上线时期"></a>与市场脱节,错过最佳上线时期</h3><p>当初立项开始第一款格斗类型游戏时,市面上出现同类型比较火热的只有&lt;&lt;时空猎人&gt;&gt;.按预期开发如果正常上线的话,市场份额还是比较大的.然而因为处在页游选手游的过渡阶段,技术选型错误导致开发半年的游戏推翻重新开发,还有各种不可抗拒因素.上线时格斗市场已然是一片红海。&lt;&lt;格斗江湖&gt;&gt;，&lt;&lt;影之刃&gt;&gt;等等格斗游戏如雨后春笋一般冒了出来。</p>
<h3 id="游戏侧重点失误"><a href="#游戏侧重点失误" class="headerlink" title="游戏侧重点失误"></a>游戏侧重点失误</h3><p>这可能是这几年做游戏以来所有项目的通病了。立项初期策划秉行的是:迅速做大而全的项目.等系统完备之后再来精雕细琢.这样的做法是时间成本太高了。忙活大半年虽然囫囵吞枣地把各个系统基础功能完成了。可想而知在细节和交互感上得不到一个很好的成果。然后匆忙地给渠道评级或者放在市场上用户反馈的结果是.游戏过于粗糙,画面不细腻,没有吸引点.<br>运营提出一个解决方案,如果是从立项开始的话研发关注点应该如下：</p>
<ul>
<li><strong>demo版本</strong>:核心战斗部分,迅速完成一个相当于美术的素描版本。</li>
<li><strong>前十分钟内容</strong>:先关注前十分钟,从loading界面到登录，创建角色，选择角色，新手引导，主场景，关卡界面，最通用的UI界面，第一场战斗的进化版本。着重在前十分钟来打动玩家。不管从美术风格也好，还是让程序用代码实现更加平滑的交互也好，先打磨前期内容。</li>
<li><strong>后期版本</strong>:先把前期精雕后的版本做评级或者放市场上看反馈信息.后期再把系统链接起来,做长期培养。</li>
</ul>
<h3 id="团队契合度-参与度不够"><a href="#团队契合度-参与度不够" class="headerlink" title="团队契合度,参与度不够"></a>团队契合度,参与度不够</h3><p>回顾几年的游戏开发过程,最有参与感和成长性的还是刚工作的时候的儿童游戏项目里。虽然也有不少诟病的地方，但那种融洽度应该是经历中最好的。不论是程序，策划，还是美术都处在一种积极沟通的状态。起码每个部门里大多数都能叫出名字.不像现在策划和程序的交集止于工作，一起项目聚餐都有一种各玩手机掩饰尴尬的感觉。<br>如果说只是氛围问题的话还不是太严重,毕竟:work is work.<br>在儿童游戏项目里,因为每周都有更新新的玩法和活动.会加入各种小游戏。这种开发有点像短期的单机游戏一样。一个大型游戏里入驻很多轻型的益智游戏。编码开发起来也比较感兴趣。每周更新阶段大家都会参与进来竞赛。就会营造一种这个功能不是一坨没人玩的shit的感觉.<br>后面自己开发的游中戏除了格斗的核心战斗之外,其他系统再无兴趣。模式千篇一律.再也没有那种加入到玩家阵营里的欲望.</p>
<h2 id="转变"><a href="#转变" class="headerlink" title="转变"></a>转变</h2><p>市场变化,技术更新,其实职能一直在转换, 从页游到手游,从儿童游戏到棋牌,格斗,再到回合制.只是这一路的转变比我预想的要漫长好多,而且始终没有逃离技术这个圈子.人总有一种幻觉,如果再努力点,当是另一番模样.<br>刚开始进入游戏行业时想着:我要抱个大腿,构造一个如何牛b的框架.随着业务和市场的变化,这种片面的想法消逝殆尽.语言和框架归根结底只是一种实现.问题的解决方案才是我们最终想要的.</p>
<blockquote>
<p>Have I got a long way to run? Yeah, I run .</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=17073458&auto=1&height=66"></iframe>]]></content>
      
        
        <tags>
            
            <tag> startup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一个游戏的生长过程]]></title>
      <url>http://www.farwmarth.com/%E4%B8%80%E4%B8%AA%E6%B8%B8%E6%88%8F%E7%9A%84%E7%94%9F%E9%95%BF%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>每次都是挖了一个巨大无比的坑,填了好久都填不完.</p>
</blockquote>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li><strong>IP</strong> : (Intellectual Property),知识产权,在游戏圈可以理解为拥有知识产权的一方,授权游戏开发商使用其主题素材</li>
<li><strong>SP</strong> : (Service Provider)渠道商:相当于电影院(电影院线),电影院是直接面向观众的,各电影院线上映电影给观众看,渠道商则是上架游戏应用给用户下载玩.</li>
<li><strong>CP</strong> : (Content Provider)游戏开发商: 相当于电影制片方,聘请导演、演员、剧组人员进行电影的拍摄和制作,同理,游戏开发商聘请策划,程序,美术,开发团队进行游戏的开发和制作.开发商的核心竞争力,就是产品本身,产品做的越牛逼,开发商就越牛逼.</li>
<li><strong>游戏运营商(发行商)</strong> : 相当于电影发行公司,进行电影的发行、销售、经营、推广,其实这个跟牌照也有关,因为在我朝面向群众的文化制品是管制品,不是什么阿猫阿狗拍个电影都能进电影院给观众传递不正确价值观的,于是就有牌照(电影发行经营许可证),制片方制作的电影必须通过有牌照的电影发行公司发行.同理在端游上也有牌照(文网文),端游审查、备案都需要通过拥有牌照的游戏发行商,而手游相对而言没有端游审查严格,手游发行商更多的作用是做市场营销、上线运营、渠道对接的工作,这些职能不是所有游戏开发商或开发团队都具备的.运营(发行)商的核心竞争力,是钱,是推广实力以及渠道关系.榜上有名的那些游戏,除了腾讯系以外.</li>
<li><strong>渠道</strong> : 是直接面对用户的,用户可从渠道下载游戏玩.渠道的核心竞争力(仅针对手游)是用户数量和质量</li>
<li><strong>代理商</strong> : 发行商的一种,属于分包发行商,从总包手中取得某个地区的发行权,并在该区域内制定销售策略并组织销售.</li>
</ul>
<a id="more"></a>
<h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><ul>
<li><strong>代理</strong> : 类似委托,将手游产品交给某个公司去负责,包括推广、运营等,cp只剩负责产品的更新、修改等,收入两者分成.</li>
<li><strong>发行</strong> : 手游发行负责产品的推广,与各渠道联系</li>
<li><strong>运营</strong> : 负责产品的拉新增、提升留存、促进活跃,网游是这样,单机的运营就是负责产品的对接了</li>
<li><strong>联运</strong> : 区别其他合作方式的地方,联运需要cp接入对方的计费方式,cp的联运可以多个合作方</li>
<li><strong>首发</strong> : 产品在某个平台第一次上线,首发可分为单平台首发(单个平台最早首发)和联合首发(多个平台共同首发)</li>
<li><strong>独代</strong> : 产品只交给某个公司负责,cp不能再找其他限定区域内的其他合作方,独代区域一般分为国内和国外,也可以具体细分</li>
</ul>
<h2 id="游戏分类"><a href="#游戏分类" class="headerlink" title="游戏分类"></a>游戏分类</h2><ul>
<li>RPG:Role Playing Game角色扮演游戏,注重剧情</li>
<li>ARPG:Action RPG 动作角色扮演游戏,加入了操作感的剧情游戏(格斗+剧情)(地下城与勇士)</li>
<li>SLG:Simulation Game模拟/战略游戏(魔法门之英雄无敌)</li>
<li>MMORPG:(Massive Muti-Player Online RPG 大型多人在线角色扮演游戏,人多强调社交)(魔兽争霸)</li>
<li>MOBA:(Multiplayer Online Battle Arena Games多人联机在线竞技游戏)(dota2,英雄联盟)</li>
<li>FPS:(First Person Shooting第一人称射击游戏)(反恐精英)</li>
<li><p>FTG:(Fighting Game格斗游戏)(拳皇)</p>
</li>
<li><p>AVG:Adventure Game冒险游戏</p>
</li>
<li>RAC:Racing 赛车游戏</li>
<li>SPG:Sports Game 体育类游戏</li>
<li>RTS:Real Time Strategy即时战略游戏</li>
<li>STG:Shooting Game射击游戏</li>
<li>MUG:Music Game 音乐游戏</li>
<li>PUZ:Puzzle 益智游戏</li>
<li>TAB:Table 桌面类游戏</li>
<li>ETC:ETC 其它类游戏</li>
</ul>
<ul>
<li>OPG:Office Perfect Game办公室经典游戏</li>
</ul>
<h2 id="游戏公司的构成"><a href="#游戏公司的构成" class="headerlink" title="游戏公司的构成"></a>游戏公司的构成</h2><p><img src="http://farwmarth.bestnewbee.com/images/game_org.png" alt="游戏公司结构"><br>游戏公司的构成除了常规的行政,财务这些部分之外,有其特定的构成.<br>从大的角度来划分的话就是运营团队和研发团队,研发团队负责产出游戏,而运营团队负责营销和推广.<br>研发团队从大体来分可以分为为三种角色:程序,美术和策划.各职位职责就不再累赘了.运营团队则分为商务和运营,商务主外.与渠道,媒介,广告平台打交道.运营负责游戏的数据的分析,分析市场情况将信息反馈给开发团队进行游戏的改进和后续的开发.<br>上面这个组织结构根据公司的规模与职能会有一些细微的调整.比如大的游戏公司一般有多款不同类型游戏,所有每个工作室都有自己的研发团队(包括美术,技能,策划).如果工作室的游戏足够成功,就会成立自己的运营团队.规模太太时甚至会独立成子公司.这些都是动态调整的.而公司的公共部门也可能出现公共的研发部来研发基础框架为各工作室服务,比如:渠道对接平台,运营数据分析平台等等.也有大公司是直接三位一体,研发,运营,渠道.比如腾讯.<br>对于一些小公司来讲,这样的组织结构是一个沉重的负荷.所以会出现职能重叠的现象,比如运营也要负责商务的对外的事务.研发团队中职位也不会细化.<br>还有一种模式就是公司只负责整个游戏运行的某一部分.这样也就衍生了职能更明确的公司,比如只有研发团队的公司和只管运营代理的发行公司.</p>
<h2 id="游戏产出阶段"><a href="#游戏产出阶段" class="headerlink" title="游戏产出阶段"></a>游戏产出阶段</h2><h3 id="成立研发团队"><a href="#成立研发团队" class="headerlink" title="成立研发团队"></a>成立研发团队</h3><blockquote>
<p>团队成立方式最常见的是招聘的方式,一个公司想拓展游戏业务,拿了一笔钱,招兵买马,拉了一帮人开始做研发.<br>另外一种方式则是:一帮游戏公司里混迹很久的老员工,因为对现有公司 的不满或者是想出来自己单干,几个意见相投的核心人员一拍即合,拉拢一支基础队伍开始拉投资.我们现在的团队就是基于这种模式.</p>
</blockquote>
<h4 id="团队核心的组建"><a href="#团队核心的组建" class="headerlink" title="团队核心的组建"></a>团队核心的组建</h4><p>前期筹划主要是团队核心的组建:<code>项目经理</code>,<code>主策划</code>,<code>主程(客户端,服务端)</code>,<code>主美</code>,这些任职的人应当在行业里有多年经验,有过大型项目上线经验的人员,主策划由为重要,因为主策是主导整个项目玩法和走向的最主要的是达成目标达成一致,主策根据自己的团队特长和市场情况初步决定做哪一类型的游戏.<br>我们的程序团队是整个从前公司剥离出来的,程序核心经历了从页游 到手游的几个项目的转变,工作模式也比较熟悉.而美术则是之前项目里比较看好的美术,策划团队也是之前项目中的附带关系认识的.老胡之前是负责我们程序这一块的工作,也是这次团队的组建的牵头人,组建前期主要是:约谈主美,主策.商议项目类型.确定人数配置.然后和投资人谈筹码和条件.从技术到负责人的转变.个中滋味估计也只有自己亲身体会的人才懂.</p>
<h4 id="拉投资"><a href="#拉投资" class="headerlink" title="拉投资"></a>拉投资</h4><p>拉投资其实就是一个双方评估的过程.投资方评估开发团队的技术实力和项目前景,发团队则评估投资方的财力,发展状态.<br>如果是团队之前制作有相当成功的产品,拉投资应该是相当容易毕竟成绩摆在那里,或者已经有demo版本,投资团队也能做一个初步的评估.如果这部分先天优势就只能通过圈内的人脉介绍了.<br>投资这额的话.视项目大小而定,一般多人网络游戏投资500万左右,前期人员配置在十来人左右的团队每月花销在20万左右.开发周期大概5个月.后期再建立运营团队,测试导量,广告推广需要砸钱.<br>谈妥投资之后,老胡回来跟我们谈了谈投资公司的情况,规模大小,发展状态,资金状态.然后就是大家最关心的工资福利待遇.虽然说谈钱伤感情.但是工作这么多年已不再是单纯的能用空头支票来驾驭的小毛孩了,毛爷爷才是硬道理.<br><img src="http://farwmarth.bestnewbee.com/images/rmb100.jpg" alt="100"></p>
<h4 id="立项"><a href="#立项" class="headerlink" title="立项"></a>立项</h4><ul>
<li><strong>项目类型</strong><br>立项方案一般是投资方或者是主策划有意向.RPG,横版格斗,卡牌,COC策略,休闲,塔防,教育类等等.如果有些前瞻性的项目更好了,游戏从平台变化来看是这些一个过程:端游到页游再到手游,从视觉变化来看就是:2d到3d再到现在国内刚兴起的VR了.</li>
<li><strong>定位</strong><br>主要是消费人群的年龄段和市场定位,儿童市场偏向教育,生命周期比较长,游戏中可以设立一个知识线为主导,像儿童读物一样渐近型,再加入科普知识,益智小游戏,后期可以推出线下产品,独立电影,吉祥物,公仔,文具,教育app.成立文化公司,做成教育产品线.成人市场的话情况比较复杂,很难用一句话来概括市场上哪一类型的游戏会火,一般做法是刷新玩法,揉合多  种游戏的元素,优化视觉和流畅度,打击感.<br>而市场定位则是针对不同文化,不同族群的审美.现在的游戏公司普通是主攻国内市场,但也有专门主攻海外市场的,像东南亚印度,越南这些国家.</li>
<li><strong>人员配置</strong><br>初创的话,策划3人左右,客户端3人,服务器2人,美术3人.测试团队,出demo版本之后就要开始扩招人员来丰富游戏系统了.运营和数据统计后台的人员可以在功能版本完整的时候再招.</li>
</ul>
<h3 id="产品开发"><a href="#产品开发" class="headerlink" title="产品开发"></a>产品开发</h3><h4 id="排定日程计划"><a href="#排定日程计划" class="headerlink" title="排定日程计划"></a>排定日程计划</h4><p>立项后就是召集人员开会拟定日程计划.<br><strong>缓冲阶段</strong> : 这一部分时间是产品开发前各个职位的基础准备工作,程序的技术选型,基础框架搭建,美术的风格确定.策划确定基础玩法.这个时间一般是一周左右,程序所耗费的时间在这一阶段是比较长的,直接用前面的项目框架积累的话时间周期会缩短很多.如果从零开始的话要关注的点比较多了:语言选择,框架选择,服务器客户端通信.基础工具模块.等等。缓冲阶段其实也是比较重要的环.之前项目开发半年遭遇技术选型错误,项目推翻重来,最后让技术重新学习再把游戏重构一遍这种情况.对士气来说是一个很大的打击.<br><strong>demo版本</strong>: 一般是游戏中的最核心的玩法.比如战斗中的布阵,战斗动作,攻击回合这一整个流程.demo版本研发团队各职位的侧重点不同.美术在这个阶段并产生是相当比较少的.一个角色,一套动作,然后就是最基础的一个战斗UI. 程序负责demo的编码实现,如果美术产出比较缓慢,客户端那就得从其他游戏中抠出一部分资源来做替代.而策划这时候则是做前置的工作,系统文档撰写,美术的角色,动作文档编写等等.如多少主角,多少场景,多少NPC等等统计.<br>demo版本也是视游戏玩法复杂度和要求的完成度而言的.像我们这种回合加卡牌类型的游戏.简单的demo版本花三周多左右.<br><strong>其他日程计划</strong>:一般是预估月版本计划,开发计划还有一种制定方案是跟开发的系统挂钩.比如一个大型系统pvp,公会完成后会发布一个内部展示的安装包.之后的运营计划视开发计划的完成度来制定.</p>
<h4 id="项目迭代"><a href="#项目迭代" class="headerlink" title="项目迭代"></a>项目迭代</h4><p>技术比较成熟有积累的话,基础结构不需要有大的变化.技术前后端的框架选型,底层通信都可以重用,各端的核心负责分配人员工作,策划进行功能检收.demo版出来之后,可以加快迭代,版本一般以周为周期.,或者可以打大系统功能版本.而评估的工作量则要以天或者精确到半天为单位.开发过程中要实时关注市场变化,策划可以吸收一些新颖的玩法到开发计划中来.<br>策划的工作要一直先于其它几个部门,写全规则文档.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/game_check.png" alt="game_check"></p>
<h4 id="渠道SDK接入"><a href="#渠道SDK接入" class="headerlink" title="渠道SDK接入"></a>渠道SDK接入</h4><ul>
<li>商务确认</li>
<li>技术排期</li>
<li>服务器搭建(服务器参数配置,服务器后台搭建)</li>
<li>运营跟进(建群加双方负责人,渠道号配置,分区KEY配置,后台配置（帐号密码权限,渠道对应服务器选择)</li>
<li>技术接入(客户端,服务器)</li>
<li>测试(测试环境测试结果,正式环境测试结果)</li>
<li>送审(打包负责人,发包负责人)</li>
<li>正式上线，接入完毕(运营跟进后续问题)</li>
</ul>
<h2 id="运营阶段"><a href="#运营阶段" class="headerlink" title="运营阶段"></a>运营阶段</h2><h3 id="测试的过程"><a href="#测试的过程" class="headerlink" title="测试的过程"></a>测试的过程</h3><blockquote>
<p>测试过程是: 封测–&gt;内测–&gt;公测</p>
</blockquote>
<ul>
<li><strong>封测</strong> : 封闭测试.游戏的核心内容已经实现(战斗引擎、基础模块等),  <strong>这个阶段主要是进行技术测试,压力测试</strong>.初期游戏制作方只会在游戏团队内部测试,也会邀请游戏媒体和极少量游戏玩家.但随着游戏运营的发展,制作方也会邀请目标用户参与测试(带有培养核心用户的目的),封测也有一测,二测……甚至N测.技术问题越多,测试论数就越多.但“事不过三”是古训,三轮封测还不够的话,这团队只怕要被砍了.封测的规模应根据测试方向进行调整.服务器开放数量: 1-2组为最佳.激活码发放数量由需测试的最高同时在线人数确定</li>
<li><strong>内测</strong> : 除封测用户外,会有更多的人参与进来,<strong>主要对游戏内容的测试(数值设计、系统架构、玩法设计)</strong>,当然技术测试也是兼顾的.测试服务器承载,稳定性.游戏运营模式,前期的市场推广这个阶段通常需要激活码。也会分删档内测和不删档内测(这俩好理解)</li>
<li><strong>公测</strong> : 相对来说,这个时候游戏的技术稳定性和内容丰富性都是很完善的.<strong>这个阶段,数值设计.系统架构基本是没法大改了,但会根据玩家的反馈做一些完善和调整</strong>。同时根据玩家的建议和反馈,进行后续版本内容的制订。</li>
</ul>
<h3 id="商务-Business-Development"><a href="#商务-Business-Development" class="headerlink" title="商务((Business Development))"></a>商务((Business Development))</h3><p>主要就是维护和cp 平台 媒体 渠道等负责人的关系.主要工作内容:签订合同,搞定资源,达成合作协议,开拓合作伙伴（包括和cp ,sp 媒体,渠道),通俗讲就是代表游戏厂商去去和渠道要资源,制定并推进手机游戏产品推广和广告投放策略.<br><strong>渠道接入导量</strong>:上线前要接入大量的SDK,要给技术预留一定的时间.渠道的谈洽是投资方商务合作拉拢的资源.都是处于大公司垄断状态.<br>商务这一块接触的比较少,具体的细节工作不知道是怎么执行的.知乎上有一个诙谐的比喻:商务说白了就是去拉客,在cp面前呈跪舔姿态让自己的游戏多导点量.</p>
<h3 id="运营-Game-Operation"><a href="#运营-Game-Operation" class="headerlink" title="运营(Game Operation)"></a>运营(Game Operation)</h3><p>运营工作主要为辅助和策略研究,收集玩家反馈,和策划设定一些游戏活动<br><strong>测试过程中</strong><br>产品的辅助工作与各种资源的规划.内测方案和计划的制定.<br>产品测试版本的用户反馈与调查.<br>早期的市场预热宣传.<br>内测用户的组织和核心用户资源培养.<br>内测辅助资源的配合(网站,客服,运维…).<br><strong>正式上线</strong><br>运营是开发方与渠道方的沟通桥梁.负责出包,上架.为渠道方提供运营资料,比如游戏介绍,玩法介绍,宣传图.</p>
<p>项目研发期商务和运营没啥事情,我们的运营女汉子还是比较热心的,每天玩一大把游戏,然后把一些出众点和新奇的互动手段给反馈给策划这边.一旦到测试或者是上线阶段运营女汉子就像炸开了锅一样.催程序接SDK,出包,催美术出宣传图.和cp建立对接讨论组,然后还要录制战斗宣传视频.还要催催网站部做一个微信的html5宣传页面.地位感觉比商务还有low.妹子估计只想大喊一声:各处都是大爷啊.</p>
<h4 id="风险预估表"><a href="#风险预估表" class="headerlink" title="风险预估表"></a>风险预估表</h4><ul>
<li>服务器单服承载,极限峰值(PCU):15000,平均在线人数(ACU):1000人</li>
<li>服务器备用数量,准备时间,服务器达到负荷的80%且持续增长时开备用服务器</li>
<li>备用服务器功能活动的一致性</li>
<li>游戏包兼容机型</li>
<li>礼包使用是否全服</li>
<li>游戏bug收集</li>
<li>应急预警方案,补偿方案</li>
<li>游戏FAQ玩家问题引导</li>
<li>紧急联系人</li>
</ul>
<h3 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h3><p>运维主要工作服务器环境构建(购买云服务器,配置游戏服务器所需运行环境),游戏开关服,游戏日常更新脚本携写</p>
<h4 id="开服流程"><a href="#开服流程" class="headerlink" title="开服流程"></a>开服流程</h4><p><strong>开服前一周</strong></p>
<ul>
<li>双方（渠道方、我方）协商确定开服（开服时间，新服名称），提出【开服申请】</li>
<li>是否确定开服时间，及新服名称</li>
<li>是否向运维技术人员申请【部署服务器】</li>
<li>是否与联运商（或我方商务）确认【广告投放排期】，积极有效沟通</li>
<li>是否收到运维服务器配置信息,并成功开服配置信息【部署到后台】</li>
<li>是否进行同步表-同步索引操作，并告知运维</li>
</ul>
<p><strong>开服前3天</strong></p>
<ul>
<li>是否生成礼品卡等，并发送给渠道合作方（自由渠道部署到领取页面)</li>
<li>是否公布开服时间点</li>
<li>是否积极有效沟通【开服活动方案】，并经过可行性分析与上级（数值策划）最后确认</li>
<li>开服并限制IP访问，是否通知测试人员或渠道方进行【新服测试】（活动及公告、滚动公告、充值等）</li>
<li>游戏活动文案涉及的【参数】等是否成功部署到后台</li>
</ul>
<p><strong>开服前一天</strong></p>
<ul>
<li>是否通知客服知悉新服事宜，并把活动文档交付</li>
<li>是否检查后台其他设置（正确关联分区，GM工具）</li>
</ul>
<p><strong>开服当天</strong></p>
<ul>
<li>是否在开服当天通知运维人员清档，解除IP限制开服</li>
<li>是否准时开服</li>
<li>是否检查服务器状态</li>
</ul>
<p><strong>开服后</strong></p>
<ul>
<li>开服后1-7天是否跟踪分析数据（导入量，充值，在线，登录活跃用户等）</li>
<li>是否询问客服及渠道关于玩家的反馈</li>
<li>是否感谢技术及各方人员的支持</li>
</ul>
<h2 id="附属行业"><a href="#附属行业" class="headerlink" title="附属行业"></a>附属行业</h2><ul>
<li>美术,音效外包</li>
<li>平台渠道广告</li>
<li>外挂及辅助工具公司</li>
<li>道具交易平台</li>
<li>游戏资讯,攻略平台</li>
</ul>
<p><strong>参考</strong>:</p>
<ul>
<li>商务,运营,市场的职责: <a href="https://www.zhihu.com/question/24693164" target="_blank" rel="noopener">https://www.zhihu.com/question/24693164</a></li>
<li>运营: <a href="https://www.zhihu.com/question/22155136" target="_blank" rel="noopener">https://www.zhihu.com/question/22155136</a></li>
<li>测试: <a href="https://www.zhihu.com/question/21498425" target="_blank" rel="noopener">https://www.zhihu.com/question/21498425</a></li>
<li>投资与创业: <a href="https://www.zhihu.com/question/37256626" target="_blank" rel="noopener">https://www.zhihu.com/question/37256626</a></li>
<li>游戏公司工作是怎样一种体验: <a href="https://www.zhihu.com/question/35887157" target="_blank" rel="noopener">https://www.zhihu.com/question/35887157</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[kids]]></title>
      <url>http://www.farwmarth.com/kids/</url>
      <content type="html"><![CDATA[<p>一直以来对于小孩子处于一种敬而远之的状态。即使自己也是从熊孩子进化过来。今天就来说说各种小孩子的故事吧。</p>
<h2 id="我的熊孩子时代"><a href="#我的熊孩子时代" class="headerlink" title="我的熊孩子时代"></a>我的熊孩子时代</h2><p>掏鸟蛋,捕鱼,偷板栗,瓜果,这些应该是农村里我们那个时候经常干的事情了,特别是偷别人家瓜果的时候,那种兴奋和紧张感现在想起来还觉得可笑。<br>怎么说偷这个东西呢，从行为上来讲肯定是不对的,但是作为一个孩子,如果自家又没有这个东西,难免会极度地艳羡.<br>印象比较深的是有一年夏天，和邻居的小伙伴去偷别人家的西瓜。<br>放学路过的时候已经踩过点,谁家的瓜地里瓜特别多,个头特大。夏天正午的时候太阳酷热无比，大人们一般在睡午觉，我和小伙伴两个人蹑手蹑脚地走在小山窝的水稻田小路上，走几步四周张望，生怕有个大人突然出现把我们逮个正着。确认视野内没有人之后我们开始行动了，我负责放哨，邻居比我年纪稍长的小伙伴负责摘瓜，偷瓜的过程没有多少考究，他花了两三秒钏选好了一个合适的瓜，考虑到瓜太大太显眼，而且又不好搬运，就挑了一个篮球大小的。摘好递给了我，看着手中的瓜心里正扑通扑通直跳，刚松一口气正准备提着战果离开的离开的时候，发现山窝里有一个人影拿着锄头出现了。我和小伙伴对看了一眼，慌忙地把瓜往水渠里一扔，卯足了劲撒腿就跑，回头看了一眼。只见那个人影也开始加速，骂骂咧咧的声音随即而来，我们被吓坏了，这如果被逮到了送家长晚上又没有好果子吃了，紧迫之下我们俩开始往山上跑，因为穿着短衣短裤跑的速度又快，松枝和杂草很快在脚上画上红色的印子。可是我们顾不了那么多，沿着山脉一直跑，根本不敢停下来。跑累之后，终于没有听见骂声了。坐在山顶上歇息，回想着刚才的事情还是心有悸然。我想，那次应该是长这么大以来跑得最快的一次了。</p>
<a id="more"></a>
<h2 id="现在的熊孩子"><a href="#现在的熊孩子" class="headerlink" title="现在的熊孩子"></a>现在的熊孩子</h2><p>万幸的是我接触的熊孩子不是太多。<br>我堂叔的小儿子应该是一个了，从小就是被宠着的那种，有两个姐姐，又加上农村还是有些重男轻女的观念。基本上是有什么事情都会依着他，像小皇帝一样伺候。犯了啥错也不会去罚他，自然是皮得不行，为所欲为，在房间里无端地放鞭炮，在家里资源独占。这些小事情都不说了，有一次我妹怀孕了几个月，坐在院子里乘凉，他突然跑过来把我妹的椅子给抽掉了，我妹一屁股就蹋在了地上。这可把我妈给吓坏了。幸好最后没出啥事，他奶奶也就是口头说了他几句。这可能就是教育不当吧。10来岁了，虽然说小孩子不懂事，但这种孕妇不能大动作动的基本常识还是理应懂的。还好现在长大了，也没那么皮了。<br>还有一个熊孩子就是城市里的，最近才接触到的，读五六年级的样子，张口就是网络上成人词语。在城市里接触的信息和媒介更多，这也是信息发达的两面性吧，接收的信息迅速，不管是好的还是坏的。和我们那个时代对比，乐趣完全不同。</p>
<h2 id="萌娃"><a href="#萌娃" class="headerlink" title="萌娃"></a>萌娃</h2><p>回女朋友过年的时候，她哥的两个小孩子给了我不一样的感受。<br>做长途汽车的时候小孩不用买票也不好占位置，我和小锅每人抱了一个小女孩子，小欣欣四岁左右，说话的时候老是说一句，然后停顿一下，若有所思的样子，然后又奶声奶气地地说着听不太懂的话。<br>欣欣和佳佳一路上都很活跃，数数，从一百数到一，互背诗词，然后又是猜谜语，小小孩童争着抢答急于表现的样子甚是可爱。话说累了又开始吃东西,吃薯片,辣条。过了一小时,终于是折腾累了欣欣就趴着我身上睡着了。想着她之前背了一篇短课文:“生活是什么，太阳说，是前进，是热爱”。其实她还不太明白这些刚学的词语是什么意思。<br>回到家后，欣欣一直嚷着要跟我们睡，刚开始很纳闷，一到床上她就开始问:叔叔，我可以玩你那个画画的手机吗？把我给逗乐了。这是她画的画,天赋异禀.<br><img src="http://farwmarth.bestnewbee.com/images/painter.jpg" alt="painter"><br>假期快结束的时候，我们对她说：叔叔要走了，她开始不舍，孩子特别容易产生的那种依赖感。然后她诺诺地问:要不你们多呆几天，再陪我玩玩嘛。下次吧,下次叔叔再陪你玩。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[仓促的战斗模型设计]]></title>
      <url>http://www.farwmarth.com/%E4%BB%93%E4%BF%83%E7%9A%84%E6%88%98%E6%96%97%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>新游戏开发又接近收尾的工作,记录一下这几个月开发的一些想法.<br>服务器设计延续了上一个游戏的基础结构.<br>由于前期demo版本开发周期很短,两周时间要一个战斗版本,所以还是遗留了一些如搅屎棍般的缺陷在里面.<br><img src="http://farwmarth.bestnewbee.com/images/herosserver.png" alt=" heros服务器设计考量"><br>上图就是基于初期战斗的设计思路.<br>基本思路即了解概念,梳理需求中的疑惑,再来进行代码重构和设计<br><a id="more"></a></p>
<ul>
<li>概念<br>概念是指游戏中策划的一些定义,我把它分为两部分,<strong>单位</strong> 和 <strong>战斗规则</strong><br><strong>单位</strong>有英雄,兵种(兵种属性),技能,buff等.<br><strong>战斗规则</strong>概念繁多,有站位,战斗过程,伤害结算,buff结算,被动结算,技能释放等等.</li>
<li>疑惑<br>疑惑主要是来解答一些需求文档不确定或者产生歧义的地方.也是和策划沟通的记录<br><img src="http://farwmarth.bestnewbee.com/images/20160129102138.png" alt=" 疑惑已解答"></li>
<li>设计考量<br>因为服务器结构之前是服务于格斗游戏,现在转换成回合制游戏,除了一些基础模块外,大部分与游戏特性绑定的模块都得剥离掉. 可通用模块有 <strong>聊天</strong>,<strong>log</strong>,<strong>账号验证</strong>,<strong>活动主框架</strong>,<strong>公会主框架</strong>,<strong>数据传输</strong>模块和一些工具类.<br>在此基础上 <strong>数据配置表</strong>和 <strong>数据库表</strong>需要重新设计,旧功能模块剥离,还有一部分要考虑的是之前的设计问题,比如 <strong>静态数据共享</strong>,<strong>混服</strong>等.</li>
</ul>
<p>编码过程中,我发现耗费时间最多的环节并不是编写新的战斗过程,而是改造原有代码.<br>战斗的实现在理清战斗流程和概念之后思路也清晰了.然而在改造原有代码的时候感觉是举步维艰.<br>原有模块如下:<br><img src="http://farwmarth.bestnewbee.com/images/20160129103551.png" alt=" 原有模块"><br>事后想想其实在这过程犯了很多错误.归结一下</p>
<ul>
<li>过度设计<br>在实现战斗的时候总是考虑到以后要怎么扩展,比如可能组队战斗啊,还有就是太兼顾细节,如果一段代码用了两次就总想把他封装成起来.其实考虑这些也是无可厚非的事情,但是扩展,细节 与时间成本本来就是对立的,把握度上可以弹性一些,如果时间条件允许可以去精雕细琢.还有就是,一些需求是可以规避掉的,如果你考虑的扩展在短时间内不会提出来大可不必发花费时间在这上面</li>
<li>快速减法<br>改造原有代是个费时费脑的活动.要先理清原有代码的逻辑,然后再思考重构的方案.把旧代码再剥离掉.刚开始我的思路是把没用的模块全部剔除掉,改了两天发现系统过于庞大,各模块之间耦合度相当高.于是转换了一下思路.突出最主要模块来改造,因为是快速出战斗版本,所以就把场景模块和登录验证的这两部分保留,把其他模块的接口一律屏蔽掉.然后花着重去重构场景代码部分.果然验证了:Done is better than perfect</li>
</ul>
<h2 id="设计结构"><a href="#设计结构" class="headerlink" title="设计结构"></a>设计结构</h2><p>结构设计并没有采用常见的多进程分隔数据服,登录服,游戏服这种结构<br><img src="http://farwmarth.bestnewbee.com/images/20160129143221.png" alt="常见结构"><br>基于skynet的单进程多线程,独立 <strong>lua state</strong>为服务的模式,把登录,数据中心做成单独的 <strong>service</strong>,大概结构如下.<br><img src="http://farwmarth.bestnewbee.com/images/20160129143643.mky.png" alt="service"><br>其他模块没啥好说的,说下战斗部分.<br><img src="http://farwmarth.bestnewbee.com/images/20160129172912.png" alt=" 站位"><br>初期战斗模式比较简单,每方6个站位,速度最快的怪物先出手,所有人出手一次则是一回合,一回合后一方单位死亡后则到一个新的波次,所有波次完成即战斗结束,进行结算.<br><img src="http://farwmarth.bestnewbee.com/images/battle.png" alt=" 战斗"></p>
<p>玩家统帅和副本怪物分成两个表,应策划要求,副本怪物可直接配置战斗属性值,而玩家统帅则通过阶位和强化度来提升战斗中的属性.<br>技能同组合效果组成,组合效果包含:buff,伤害,加减血,属性值变化,一个技能可以分成多段,例如先附加提升攻击的buff,再进行伤害段计算,再把攻击buff移除.技能和buff和攻击效果通过 <strong>TB_find_target_选择目标配置表</strong>规则来设定,计算的伤害或者属性由 <strong>TB_formula_公式配置表</strong>进行配置.</p>
<h2 id="关键性实现"><a href="#关键性实现" class="headerlink" title="关键性实现"></a>关键性实现</h2><h4 id="公式配置实现"><a href="#公式配置实现" class="headerlink" title="公式配置实现"></a>公式配置实现</h4><p>应策划要求,伤害结算,buff效果结算都要通过当前攻击者,被攻击者的状态来计算,所以把公式放在配置表 <strong>TB_formula_公式配置表</strong>中配置.策划需要的运算规则比较简单,条件选择,一些简单的数学库就能满足要求.<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">(factor *(owner.physicalAttack * <span class="number">0.75</span>&gt;= target.physicalAbsorb <span class="keyword">and</span> owner.physicalAttack-target.physicalAbsorb <span class="keyword">or</span>  <span class="number">0.25</span> *owner.physicalAttack ) * fightRate.r_kill * owner.cur_sodier_count * (<span class="number">1</span> + owner.physicalRaiseHurt)  * (<span class="number">1</span> - target.physicalReduceHurt)  *fightRate.luckRate   + attachDamage )/<span class="number">10</span></span><br></pre></td></tr></table></figure></p>
<p>服务器环境基于lua5.3,5.3的实现如下:<br>主要是用 <strong>load</strong>加载字符串解析成代码, <strong>_ENV</strong>构造一个封闭的环境，<strong>load</strong> 和javascript中 <strong>eval</strong>类似<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- @Author: wujiyu</span></span><br><span class="line"><span class="comment">-- @Date:   2015-11-26 14:14:18</span></span><br><span class="line"><span class="comment">-- @Last Modified by:   wujiyu</span></span><br><span class="line"><span class="comment">-- @Last Modified time: 2015-12-11 19:53:20</span></span><br><span class="line"><span class="comment">-- 表复制</span></span><br><span class="line"><span class="keyword">local</span> tableutil = <span class="built_in">require</span> <span class="string">"public/util/tableutil"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> _e = &#123;&#125;</span><br><span class="line">_e.<span class="built_in">print</span>=<span class="built_in">print</span></span><br><span class="line">_e.<span class="built_in">pairs</span>=<span class="built_in">pairs</span></span><br><span class="line">_e.<span class="built_in">ipairs</span>=<span class="built_in">ipairs</span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(<span class="built_in">math</span>) <span class="keyword">do</span></span><br><span class="line">    _e[k] = v</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> _formula_maps = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> formulautil = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formulautil.formula</span><span class="params">( ctx,params )</span></span></span><br><span class="line">    <span class="keyword">local</span> _data =tableutil.clone(_e)</span><br><span class="line">    <span class="keyword">local</span> f = _formula_maps[ctx]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">then</span></span><br><span class="line">        f = <span class="built_in">assert</span>(<span class="built_in">load</span>(<span class="string">"local _ENV=...; return "</span>..ctx))</span><br><span class="line">        _formula_maps[ctx]=f</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    tableutil.fill_data(_data,params)</span><br><span class="line">    <span class="comment">-- print("!!!!!!公式参数",ctx)</span></span><br><span class="line">    <span class="comment">-- tableutil.print_table(params)</span></span><br><span class="line">    <span class="keyword">return</span> f(_data)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- local result = formulautil.formula("owner.hp&gt;owner.mp and max(5, floor(owner.hp * 2)) or owner.mp", &#123;owner=&#123;hp=10,mp=30&#125;&#125;)</span></span><br><span class="line"><span class="comment">-- print(result)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> formulautil</span><br></pre></td></tr></table></figure></p>
<p>后来改成手动战斗后,整个战斗过程移植到了客户端,而客户端的lua版本为5.1.稍微改动了一下,用 <strong>loadstring</strong>替换 <strong>load</strong>,<strong>setfenv</strong>替换 <strong>_ENV</strong>.<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- @Author: wujiyu</span></span><br><span class="line"><span class="comment">-- @Date:   2015-11-26 14:14:18</span></span><br><span class="line"><span class="comment">-- @Last Modified by:   wujiyu</span></span><br><span class="line"><span class="comment">-- @Last Modified time: 2015-12-11 19:53:20</span></span><br><span class="line"><span class="comment">-- 表复制</span></span><br><span class="line"><span class="keyword">local</span> tableutil = <span class="built_in">require</span> <span class="string">"tableutil"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> _e = &#123;&#125;</span><br><span class="line">_e.<span class="built_in">print</span>=<span class="built_in">print</span></span><br><span class="line">_e.<span class="built_in">pairs</span>=<span class="built_in">pairs</span></span><br><span class="line">_e.<span class="built_in">ipairs</span>=<span class="built_in">ipairs</span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(<span class="built_in">math</span>) <span class="keyword">do</span></span><br><span class="line">    _e[k] = v</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> _formula_maps = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> formulautil = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formulautil.formula</span><span class="params">( ctx,params )</span></span></span><br><span class="line">    <span class="keyword">local</span> _data =tableutil.clone(_e)</span><br><span class="line">    <span class="keyword">local</span> f = _formula_maps[ctx]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">then</span></span><br><span class="line">        f = <span class="built_in">assert</span>(loadstring(<span class="string">" return "</span>..ctx))</span><br><span class="line">        _formula_maps[ctx]=f</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    tableutil.fill_data(_data,params)</span><br><span class="line">    <span class="built_in">setfenv</span>(f,_data)</span><br><span class="line">    <span class="comment">-- print("!!!!!!公式参数",ctx)</span></span><br><span class="line">    <span class="comment">-- tableutil.print_table(params)</span></span><br><span class="line">    <span class="keyword">return</span> f(_data)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> result = formulautil.formula(<span class="string">"owner.hp&gt;owner.mp and max(5, floor(owner.hp * 2)) or owner.mp"</span>, &#123;owner=&#123;hp=<span class="number">10</span>,mp=<span class="number">30</span>&#125;&#125;)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> formulautil</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[谁点谁怀孕之代码解析]]></title>
      <url>http://www.farwmarth.com/%E8%B0%81%E7%82%B9%E8%B0%81%E6%80%80%E5%AD%95%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>最近又发现有新的崩溃代码了,打开页面,内存就会被榨干.回想之前也有过特殊字符使iphone白屏的情况.收集一下玩玩.</p>
<h2 id="iPhone调到1970年变砖"><a href="#iPhone调到1970年变砖" class="headerlink" title="iPhone调到1970年变砖"></a>iPhone调到1970年变砖</h2><h4 id="触发bug条件与表现"><a href="#触发bug条件与表现" class="headerlink" title="触发bug条件与表现"></a>触发bug条件与表现</h4><p>满足以下条件，『时间回归』bug被触发：</p>
<ul>
<li>系统版本：iOS 8.0 ~ iOS 9.3 beta 3</li>
<li>硬件设备：搭载64位处理器的设备（即处理器为A7~A9X的设备）</li>
<li>进入『设置』-『通用』-『时间与日期』，关闭『自动设置』，并将时间修改为1970年1月1日，分秒任意.</li>
<li>修改时间后，需要重启设备。</li>
</ul>
<a id="more"></a>
<h4 id="Bug触发表现：iOS设备启动时，卡在苹果Logo，无法继续启动。"><a href="#Bug触发表现：iOS设备启动时，卡在苹果Logo，无法继续启动。" class="headerlink" title="Bug触发表现：iOS设备启动时，卡在苹果Logo，无法继续启动。"></a>Bug触发表现：iOS设备启动时，卡在苹果Logo，无法继续启动。</h4><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>针对所有64位处理器的iOS设备<br>拆机并拆出电池，放置10分钟后重新安装。<br>电量充足的情况下，等待数小时，当Unix时间戳的数值大于等于0，系统时间生效，可正常开机。</p>
<p><a href="http://www.cnbeta.com/articles/474579.htm" target="_blank" rel="noopener">http://www.cnbeta.com/articles/474579.htm</a></p>
<h2 id="history-pushstate"><a href="#history-pushstate" class="headerlink" title="history.pushstate()"></a>history.pushstate()</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> total = <span class="string">""</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span></span><br><span class="line"><span class="undefined">        total = total + i.toString();</span></span><br><span class="line"><span class="undefined">        history.pushState(0, 0, total);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>history.pushstate()是HTML5引入的API，pushState将指定的URL添加到浏览器历史里,存储当前历史记录点。 当 i&lt;100000 的时候会循环的将 total记录到浏览器历史里,测试地址<a href="http://www.0xroot.cn/demo.html" target="_blank" rel="noopener">http://www.0xroot.cn/demo.html</a></p>
<h2 id="android-qq"><a href="#android-qq" class="headerlink" title="android qq"></a>android qq</h2><p>发表说说<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;uin:54432,nick崩死你空间,who:1&#125;</span><br><span class="line">其中“54432”可以随便改，“崩死你”内容也可随便改</span><br></pre></td></tr></table></figure></p>
<h2 id="iphone-字符"><a href="#iphone-字符" class="headerlink" title="iphone 字符"></a>iphone 字符</h2><ul>
<li>字符包含英文、阿拉伯文和中文 <a href="https://www.zhihu.com/question/21568134" target="_blank" rel="noopener">https://www.zhihu.com/question/21568134</a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Power</span><br><span class="line">　　لُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ 冗</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>控件显示bug,在 iOS 6 或者OS X 10.8中 WebCore,CoreText的显示多种语言时崩溃</p>
<h2 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h2><p>如果你使用Chrome 45或更老的版本，可以试试在地址栏输入以下字符<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://a/%%30%30</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 教你瞎折腾 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[恶补键盘知识]]></title>
      <url>http://www.farwmarth.com/%E6%81%B6%E8%A1%A5%E9%94%AE%E7%9B%98%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="http://www.pcpop.com/doc/0/836/836084_all.shtml" target="_blank" rel="noopener">http://www.pcpop.com/doc/0/836/836084_all.shtml</a></li>
</ul>
<h2 id="键盘类型"><a href="#键盘类型" class="headerlink" title="键盘类型"></a>键盘类型</h2><h3 id="薄膜"><a href="#薄膜" class="headerlink" title="薄膜"></a>薄膜</h3><h3 id="机械"><a href="#机械" class="headerlink" title="机械"></a>机械</h3><ul>
<li>红轴<br><img src="http://ww4.sinaimg.cn/large/4b5a1116gw1exo6kg6fl4j20dw05j3yv.jpg" alt="红轴"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">红轴，它的力度比较轻，与黑轴塑料部分相同，直上直下爽快自然，入门者可能会觉得它比较滑。</span><br><span class="line">这是一种备受争议的轴，由于力度太轻，导致个别用户手搭载键盘上误触，而且它的造价是所有轴里最高的。</span><br><span class="line">因此很多人认为他是失败品，在国外的销量并不理想。</span><br><span class="line">但是国内不少玩家给予好评，如果搭配得当使用者可感受到丝绸般顺滑，无论是游戏还是打字亦或其它应用都可以，只是价格略高</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>茶轴<br><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exo6l0t8exj20dw05j74m.jpg" alt="茶轴"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">最全面的茶轴。</span><br><span class="line">有段落感却不像青轴那样张扬，手指的感觉非常舒适，力度适中适合多种环境，最看好的进阶轴，无论是游戏还是大字都不错。</span><br><span class="line">不过不是所有人都喜欢这种钝色式的多段感，购买前最好体验一下。</span><br></pre></td></tr></table></figure>
</li>
<li><p>青轴<br><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exoxnyk9v1j20dw05jwex.jpg" alt="青轴"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　 青轴是一款最风骚的轴，声音清楚酷似拨片开关，只有当声音响起的时候按键才被触发，</span><br><span class="line">因此打字的时候噼里啪啦，无论是指尖还是心理上都得到了极大满足，特别适合文字工作者。</span><br><span class="line">但是不可否认的噪音太大，很多环境不合适，比如安静的办公室，容易影响他人。</span><br></pre></td></tr></table></figure>
</li>
<li><p>黑轴<br><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exo6j9l7suj20dw05jaah.jpg" alt="黑轴"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">黑轴是这四种主流轴里最大力的，被成为最原始最纯粹的机械轴，广泛适用于各种人群，</span><br><span class="line">由于它有着超短触发距离与最长使用寿命，因此被游戏玩家推崇。</span><br><span class="line">当你在激烈的游戏环境下，手指按下键盘即可快速反映，先于敌人一步作出反映在游戏玩家看来至关重要，哪怕只是零点几秒。</span><br><span class="line">当然打字和日常应用也不错。</span><br><span class="line">不过刚刚入门的朋友可能会觉得力度太大，手指肌肉紧绷，一旦你适应了黑轴，那么其它任何轴都不会再有困难，入门首选</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exo6c20scnj20dw04z0tj.jpg" alt="我的头像"><br><img src="http://ww4.sinaimg.cn/large/4b5a1116gw1exo6opk3sqj20dw099my5.jpg" alt="我的头像"><br><img src="http://ww3.sinaimg.cn/large/4b5a1116gw1exo6x3q44wj20go084401.jpg" alt="我的头像"><br><img src="http://ww4.sinaimg.cn/large/4b5a1116gw1exo6xucnp1j20go0c2aci.jpg" alt="我的头像"></p>
<h3 id="静电容"><a href="#静电容" class="headerlink" title="静电容"></a>静电容</h3><h2 id="键位"><a href="#键位" class="headerlink" title="键位"></a>键位</h2><h3 id="标准键位"><a href="#标准键位" class="headerlink" title="标准键位"></a>标准键位</h3><p><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exo70lfopij20go05p3zo.jpg" alt="我的头像"></p>
<h3 id="87键位"><a href="#87键位" class="headerlink" title="87键位"></a>87键位</h3><p>少了小键盘而已<br><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exo7141j2mj20go0c8q3p.jpg" alt="我的头像"></p>
<h2 id="厂商"><a href="#厂商" class="headerlink" title="厂商"></a>厂商</h2><ul>
<li>cherry</li>
<li>flico</li>
<li>hhkb</li>
<li>realforce</li>
</ul>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 键盘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的mac配置]]></title>
      <url>http://www.farwmarth.com/%E6%88%91%E7%9A%84mac%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="mysql记录"><a href="#mysql记录" class="headerlink" title="mysql记录"></a>mysql记录</h2><h3 id="brew-安装mysql"><a href="#brew-安装mysql" class="headerlink" title="brew 安装mysql"></a>brew 安装mysql</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install mysql</span><br><span class="line">初始化mysql</span><br><span class="line">sudo mysql_install_db  --verbose --user=`whoami`  --basedir=&quot;\$(brew --prefix mysql)&quot;  --datadir=/usr/local/var/mysql --tmpdir=/tmp --explicit_defaults_for_timestamp</span><br><span class="line">或者</span><br><span class="line">mysql_install_db --basedir=/usr/local/Cellar/mysql/5.6.10</span><br><span class="line">开启mysql</span><br><span class="line">mysql.server start</span><br><span class="line">mysql.server stop</span><br><span class="line">初始化超级管理员</span><br><span class="line">mysqladmin -u root password</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="绿色版安装启动"><a href="#绿色版安装启动" class="headerlink" title="绿色版安装启动"></a>绿色版安装启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>http://www.widlabs.com/article/mac-os-x-install-mysql-with-tar-gz</span><br><span class="line">cd /usr/local/mysql</span><br><span class="line"><span class="meta">#</span> 启动</span><br><span class="line">sudo support-files/mysql.server start</span><br><span class="line"><span class="meta">#</span> 重启</span><br><span class="line">sudo support-files/mysql.server restart</span><br><span class="line"><span class="meta">#</span> 停止</span><br><span class="line">sudo support-files/mysql.server stop</span><br><span class="line"><span class="meta">#</span> 检查 MySQL 运行状态</span><br><span class="line">sudo support-files/mysql.server status</span><br></pre></td></tr></table></figure>
<h3 id="MYSQL缺少libmysqlclient文件"><a href="#MYSQL缺少libmysqlclient文件" class="headerlink" title="MYSQL缺少libmysqlclient文件"></a>MYSQL缺少libmysqlclient文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">MYSQL缺少libmysqlclient文件</span><br><span class="line">ln -s /usr/lib/mysql/libmysqlclient.18.dylib /usr/lib64/mysql/libmysqlclient.18.dylib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ln -s /usr/local/Cellar/mysql56/5.6.32/lib/libmysqlclient.18.dylib /usr/local/lib/libmysqlclient.18.dylib</span><br><span class="line">ln -s /usr/local/Cellar/mysql/5.7.16/lib/libmysqlclient.20.dylib /usr/local/lib/libmysqlclient.18.dylib</span><br><span class="line"><span class="meta">#</span>http://www.jianshu.com/p/e196d25a8e31</span><br></pre></td></tr></table></figure>
<h3 id="setting"><a href="#setting" class="headerlink" title="setting"></a>setting</h3><ul>
<li>轻击替代点击</li>
</ul>
<h3 id="inconsolata"><a href="#inconsolata" class="headerlink" title="inconsolata"></a>inconsolata</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew tap caskroom/fonts                  # you only have to do this once!</span><br><span class="line">brew cask install font-inconsolata</span><br></pre></td></tr></table></figure>
<h3 id="mac-m2cryto"><a href="#mac-m2cryto" class="headerlink" title="mac m2cryto"></a>mac m2cryto</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install swig</span><br><span class="line">xcode-select --install</span><br><span class="line"><span class="meta">#</span>然而里面还是没有 openssl</span><br><span class="line"><span class="meta">#</span>然后另外安装openssl 的时候会发现并没有把头文件ln到 /usr/include 里面，无卵用，/usr/include 还是一个不可更改的系统目录</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>但是我们留意到安装​M2Crypto的时候报错的地方是提示 swig 语句有问题，于是可以修改swig 的寻址路径，如下，妥了：</span><br><span class="line">brew install openssl</span><br><span class="line">sudo env LDFLAGS="-L$(brew --prefix openssl)/lib" \</span><br><span class="line">CFLAGS="-I$(brew --prefix openssl)/include" \</span><br><span class="line">SWIG_FEATURES="-cpperraswarn -includeall -I$(brew --prefix openssl)/include" \</span><br><span class="line">export EXTRA_CFLAGS=-I/usr/local/opt/openssl/include &amp;&amp; export EXTRA_CXXFLAGS=-I/usr/local/opt/openssl/include &amp; export EXTRA_LDFLAGS=-L/usr/local/opt/openssl/lib</span><br><span class="line">pip install m2crypto</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>http://stackoverflow.com/questions/33005354/trouble-installing-m2crypto-with-pip-on-el-capitan</span><br></pre></td></tr></table></figure>
<h3 id="iterms2-终端"><a href="#iterms2-终端" class="headerlink" title="iterms2 终端"></a>iterms2 <code>终端</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">How To Enable Shell Integration</span><br><span class="line">curl -L https://iterm2.com/misc/install_shell_integration.sh | bash</span><br><span class="line">https://www.iterm2.com/documentation-shell-integration.html</span><br></pre></td></tr></table></figure>
<h3 id="zsh-终端"><a href="#zsh-终端" class="headerlink" title="zsh  终端"></a>zsh  <code>终端</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview</span><br></pre></td></tr></table></figure>
<p>zsh配置<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>git alias</span><br><span class="line">alias gp="git pull origin master"</span><br><span class="line">alias gs="git status"</span><br><span class="line">alias gd="git diff"</span><br><span class="line">alias gc="git checkout"</span><br><span class="line">alias ga="git add"</span><br><span class="line">alias gm="git commit -m"</span><br></pre></td></tr></table></figure></p>
<h3 id="pyenv-python版本管理"><a href="#pyenv-python版本管理" class="headerlink" title="pyenv python版本管理"></a>pyenv <code>python版本管理</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pyenv命令:</span><br><span class="line">   commands    列出所有pyenv命令</span><br><span class="line">   local       设置或者显示local的python版本</span><br><span class="line">   global      设置或者显示global的python版本</span><br><span class="line">   shell       设置或者显示shell的python版本</span><br><span class="line">   install     安装一个python版本</span><br><span class="line">   uninstall   卸载一个python版本</span><br><span class="line">   rehash      Rehash pyenv shims (run this after installing executables)</span><br><span class="line">   version     显示当前版本</span><br><span class="line">   versions    显示所有python版本</span><br><span class="line">   which       显示可执行python的路径</span><br><span class="line">   whence      显示带执行路径的所有版本</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#######安装其他版本的python</span><br><span class="line"><span class="meta">#</span>依赖</span><br><span class="line">sudo brew install homebrew/dupes/zlib</span><br><span class="line">bash brew install readline; brew link readline;</span><br><span class="line"><span class="meta">#</span>安装</span><br><span class="line">CFLAGS='-g -O2'</span><br><span class="line">CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"</span><br><span class="line">CFLAGS="-I$(brew --prefix openssl)/include" \</span><br><span class="line">LDFLAGS="-L$(brew --prefix openssl)/lib" \</span><br><span class="line">pyenv install 2.7.5</span><br><span class="line"><span class="meta">#</span>环境变量</span><br><span class="line">export PYENV_ROOT="$HOME/.pyenv"</span><br><span class="line">export PATH=$&#123;PATH&#125;:$PYENV_ROOT/bin:$PATH</span><br><span class="line">eval "$(pyenv init -)"</span><br><span class="line"><span class="meta">#</span>移除版本</span><br><span class="line">rm -rf .pyenv/versions/2.7.5</span><br></pre></td></tr></table></figure>
<h3 id="virtualenvwrapper"><a href="#virtualenvwrapper" class="headerlink" title="virtualenvwrapper"></a>virtualenvwrapper</h3><h3 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h3><h3 id="jenv-java版本管理"><a href="#jenv-java版本管理" class="headerlink" title="jenv  java版本管理"></a>jenv  <code>java版本管理</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jenv一些命令:</span><br><span class="line">   commands    列出所有命令</span><br><span class="line">   local       设置或者显示local的java版本</span><br><span class="line">   global      设置或者显示global的java版本</span><br><span class="line">   shell       设置或者显示shell的java版本</span><br><span class="line">   rehash      Rehash jenv shims (run this after installing executables)</span><br><span class="line">   version     显示当前版本</span><br><span class="line">   versions    显示所有版本</span><br><span class="line">   which       显示当前带执行目录</span><br><span class="line">   whence      显示所有带执行目录的java</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#安装jenv</span><br><span class="line">brew install jenv</span><br><span class="line">echo 'export PATH="\$HOME/.jenv/bin:$PATH"' &gt;&gt; ~/.bash_profile</span><br><span class="line">echo 'eval "$(jenv init -)"' &gt;&gt; ~/.bash_profile</span><br><span class="line">或者是.zshrc</span><br><span class="line"><span class="meta">$</span> exec $SHELL -l</span><br></pre></td></tr></table></figure>
<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install nginx</span><br><span class="line"><span class="meta">#</span>Docroot : /usr/local/var/www</span><br><span class="line"><span class="meta">#</span>conf :/usr/local/etc/nginx/nginx.conf to 8080 so that</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>To have launchd start nginx at login:</span><br><span class="line">ln -sfv /usr/local/opt/nginx/*.plist ~/Library/LaunchAgents</span><br><span class="line"><span class="meta">#</span>Then to load nginx now:</span><br><span class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ln -sfv /usr/local/opt/nginx/*.plist ~/Library/LaunchAgents</span><br><span class="line">/Users/weiz/Library/LaunchAgents/homebrew.mxcl.nginx.plist -&gt; /usr/local/opt/nginx/homebrew.mxcl.nginx.plist</span><br><span class="line">sudo chown root:wheel /usr/local/Cellar/nginx/1.4.4/bin/nginx</span><br><span class="line">sudo chmod u+s /usr/local/Cellar/nginx/1.4.4/bin/nginx</span><br><span class="line">vim /usr/local/etc/nginx/nginx.conf</span><br><span class="line">sudo nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>html改权限</span><br><span class="line">sudo chmod 755 -R /Users/vont/www/public_html</span><br></pre></td></tr></table></figure>
<h3 id="lanchRocket-brew服务管理"><a href="#lanchRocket-brew服务管理" class="headerlink" title="lanchRocket brew服务管理`"></a>lanchRocket brew服务管理`</h3><h3 id="aria2-下载管理"><a href="#aria2-下载管理" class="headerlink" title="aria2 下载管理"></a>aria2 <code>下载管理</code></h3><p>打开<code>webui-arai2</code>界面管理<code>aria2</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/bashs</span><br><span class="line">touch /Users/far/Downloads/session.txt &amp;&amp; aria2c --enable-rpc --rpc-listen-all --save-session=/Users/far/Downloads/session.txt --input-file=/Users/far/Downloads/session.txt -x16 -s16 -k1M --dir=/Users/far/Downloads&amp;</span><br><span class="line"></span><br><span class="line">open -a &quot;Google Chrome&quot; /Users/far/Develop/git/webui-aria2/index.html</span><br></pre></td></tr></table></figure></p>
<h3 id="wget-下载"><a href="#wget-下载" class="headerlink" title="wget 下载"></a>wget <code>下载</code></h3><h3 id="boot2docker-docker"><a href="#boot2docker-docker" class="headerlink" title="boot2docker docker"></a>boot2docker <code>docker</code></h3><h3 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">检查是否安装成功</span><br><span class="line">catalina -h</span><br><span class="line">启动</span><br><span class="line">catalina run</span><br><span class="line">根目录(CATALINA_HOME)</span><br><span class="line">/usr/local/Cellar/tomcat/7.0.33/libexec/webapps/ROOT/</span><br></pre></td></tr></table></figure>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul>
<li><p>清除appstore缓存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -r /private/var/folders/*/*/*/com.apple.appstore</span><br></pre></td></tr></table></figure>
</li>
<li><p>finder底部的可编辑白边<br><code>这个是输入法引起的按esc键可消除</code></p>
</li>
<li><p>隐藏文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>显示Mac隐藏文件</span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool true</span><br><span class="line"><span class="meta">#</span>隐藏</span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool false</span><br></pre></td></tr></table></figure>
</li>
<li><p>如何删除iOS模拟器上的应用程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ios模拟器--还原内容和设置</span><br></pre></td></tr></table></figure>
</li>
<li><p>键盘修饰键</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">系统偏好设置--键盘--修饰键---更改commond和control键的位置</span><br></pre></td></tr></table></figure>
</li>
<li><p>乱码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iconv -f GB2312 -t UTF-8 文件名&gt; 新文件名</span><br></pre></td></tr></table></figure>
</li>
<li><p>mac 删除svn</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -type d -name &quot;.svn&quot;|xargs rm -rf</span><br></pre></td></tr></table></figure>
</li>
<li><p>dock上添加空白</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.dock persistent-apps -array-add &apos;&#123;&quot;tile-type&quot;=&quot;spacer-tile&quot;;&#125;&apos;;killall Dock --左</span><br><span class="line">defaults write com.apple.dock persistent-others -array-add &apos;&#123;tile-data=&#123;&#125;; tile-type=&quot;spacer-tile&quot;;&#125;&apos; ;killall Dock --右</span><br></pre></td></tr></table></figure>
</li>
<li><p>mac Sierra 允许“任何来源” 的应用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><ul>
<li><p>sdk图形界面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令行进入tools目录如**/Users/far/Develop/devtools/adt-bundle-mac-x86_64-20140702/sdk/tools**</span><br><span class="line">然后输入 ./android sdk 请出SDK Manager的图形界面</span><br></pre></td></tr></table></figure>
</li>
<li><p>eclipse android content loader 0%  解决方案:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">删除.metadata/.plugins/org.eclipse.e4.workbeach 内容</span><br></pre></td></tr></table></figure>
</li>
<li><p>eclipse中设置默认签名key方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Eclipse: Window-&gt;Preferences-&gt;Android-&gt;Build-&gt;Custom debug keystore</span><br><span class="line">C:\Users\&lt;用户名&gt;\.android\debug.keystore</span><br><span class="line">这个key的密码是：android</span><br><span class="line">我们可以输入如下命令来查看其详细信息：</span><br><span class="line">keytool -list -keystore debug.keystore</span><br><span class="line">输入密码：android</span><br></pre></td></tr></table></figure>
</li>
<li><p>connection to adb is down, and a severe error has occured. You must restart adb and Eclipse</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在命令行下运行 adb start-server</span><br><span class="line">* daemon not running. starting it now *</span><br><span class="line">ADB server didn&apos;t ACK</span><br><span class="line">* failed to start daemon *</span><br><span class="line">已经确认adb.exe的路径没有问题，重启了几次模拟器和eclipse还是不行，上网查了下资料~</span><br><span class="line">解决办法：</span><br><span class="line">(1)查看任务管理器，关闭所有adb.exe</span><br><span class="line">(2)重启eclipse即可</span><br><span class="line">(3)豌豆荚 ，wandoujia.exe 腾讯手机管家，也有同样的问题。它会产生个tadb.exe; 杀掉即可  金山助手 sjk_demon</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Alfred"><a href="#Alfred" class="headerlink" title="Alfred"></a>Alfred</h2><blockquote>
<p>工作流，快捷启动<br>workflow目录:<code>~/Library/Application Support/Alfred 2/Alfred.alfredpreferences/Workflows/</code></p>
</blockquote>
<h3 id="Alfred-3-支持-iterm3"><a href="#Alfred-3-支持-iterm3" class="headerlink" title="Alfred 3 支持 iterm3"></a>Alfred 3 支持 iterm3</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">on alfred_script(q)</span><br><span class="line">    tell application "iTerm"</span><br><span class="line">    activate</span><br><span class="line">    set the clipboard to q</span><br><span class="line">    delay 0.5</span><br><span class="line">    tell application "System Events" to tell (name of application processes whose frontmost is true) to keystroke "v" using command down</span><br><span class="line">    tell application "System Events" to tell (name of application processes whose frontmost is true) to keystroke return</span><br><span class="line">end tell</span><br><span class="line">end alfred_script</span><br></pre></td></tr></table></figure>
<h2 id="mac-上使用f1-f2按键"><a href="#mac-上使用f1-f2按键" class="headerlink" title="mac 上使用f1 f2按键"></a>mac 上使用<code>f1 f2</code>按键</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fn+f1</span><br></pre></td></tr></table></figure>
<h2 id="iterms的ssh保持session"><a href="#iterms的ssh保持session" class="headerlink" title="iterms的ssh保持session"></a>iterms的ssh保持session</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">profiles -&gt; sessions -&gt; When idel, send ASCII code</span><br></pre></td></tr></table></figure>
<p><a href="http://simplyy.space/article/56c2d71f6ba384e02299f9b9" target="_blank" rel="noopener">http://simplyy.space/article/56c2d71f6ba384e02299f9b9</a><br><a href="http://www.dreamxu.com/mac-terminal/" target="_blank" rel="noopener">http://www.dreamxu.com/mac-terminal/</a></p>
]]></content>
      
        <categories>
            
            <category> mac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[markdown简明语法]]></title>
      <url>http://www.farwmarth.com/markdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="简明语法"><a href="#简明语法" class="headerlink" title="简明语法"></a>简明语法</h2><h3 id="基本符号"><a href="#基本符号" class="headerlink" title="基本符号"></a>基本符号</h3><ul>
<li><code>*,-,+</code> 3个符号效果都一样，这3个符号被称为 Markdown符号</li>
<li>空白行表示另起一个段落</li>
<li>`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</li>
</ul>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><ul>
<li>标题 <code>##</code>生成h1-h6</li>
</ul>
<a id="more"></a>
<h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><ul>
<li>单一段落<code>&lt;p&gt;</code>用一个空白行</li>
<li>连续两个空格会变成一个<code>&lt;br&gt;</code></li>
<li>连续三个Markdown符号<code>---</code>或<code>***</code></li>
</ul>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><ul>
<li>斜体 <code>*斜体*</code> <em>斜体</em> </li>
<li>粗体 <code>**粗体**</code> <strong>粗体</strong> </li>
<li></li>
</ul>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul>
<li>引用 <code>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用&gt;&gt;</code></li>
<li>代码区块 <code>两个单引号</code></li>
<li>块代码: ```python 代码```</li>
</ul>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul>
<li>使用*,+,-加上一个空格来表示</li>
<li>可以支持嵌套</li>
<li>有序列表用(数字+英文点+空格)来表示如(1. )</li>
<li>列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的</li>
</ul>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul>
<li>行内式: <code>[锚文本](url &quot;可选的title&quot;)</code></li>
<li>参考式: 引用先定义 <code>[ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]</code>，通常的ref_name一般用数字表示，这样显得专业</li>
<li>简写url：用尖括号包裹url,这样生成的url锚文本就是url本身,<code>&lt;htttp://www.baidu.com&gt;</code></li>
</ul>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><ul>
<li>行内式和链接的区别是多一个<code>!</code>号</li>
<li>直接使用<code>&lt;img&gt;</code>标签，这样可以指定图片的大小尺寸</li>
</ul>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<p>表格中换行用html标签<code>br</code></p>
<h2 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h2><ul>
<li>首行缩进: <code>&amp;#160; &amp;#160; &amp;#160; &amp;#160;</code>或者<code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</code></li>
<li>字体颜色: 用html标签<code>&lt;font color=red&gt;我是红色&lt;/font&gt;</code></li>
<li><p>替换html标签正则:<br>过滤所有以&lt;开头以&gt;结尾的标签: <code>&lt;([^&gt;]*)&gt;</code><br>找出IMG标签: <code>&lt;\\s*img\\s+([^&gt;]*)\\s*&gt;</code><br>找出IMG标签的SRC属性: <code>src=\&quot;([^\&quot;]+)\</code><br>常用转义   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;quot; (&quot;)</span><br><span class="line">&amp;amp;  (&amp;)</span><br><span class="line">&amp;lt;      (&lt;)</span><br><span class="line">&amp;gt;    (&gt;)</span><br><span class="line">&amp;nbsp;  ( )</span><br></pre></td></tr></table></figure>
</li>
<li><p>一个好看的样式</p>
<div class="tit" style="overflow-y: hidden; font-weight: bold; font-size: 14px; filter: none; visibility: visible! important; overflow-x: hidden; border-left: #77ae18 5px solid; word-break: break-all; text-indent: 8px; line-height: 26px; zoom: 1! important; font-family: Arial; text-align: left; word-wrap: break-word;">好看的样式</div></li>
</ul>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kindle不完全指南]]></title>
      <url>http://www.farwmarth.com/Kindle%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>资料整理来自(<a href="http://kindlefere.com" target="_blank" rel="noopener">http://kindlefere.com</a>)</p>
<h2 id="1-推送"><a href="#1-推送" class="headerlink" title="1. 推送"></a>1. 推送</h2><h3 id="1-邮件推送"><a href="#1-邮件推送" class="headerlink" title="1. 邮件推送"></a>1. 邮件推送</h3><h4 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 美亚kindle管理:https://www.amazon.com/mn/dcw/myx.html/ref=kinw_myk_redirect#/home/settings/payment</span><br><span class="line">2 中亚kindle管理:https://www.amazon.cn/mn/dcw/myx.html/ref=kinw_myk_redirect#/home/settings/payment</span><br></pre></td></tr></table></figure>
<h4 id="2-页面设置"><a href="#2-页面设置" class="headerlink" title="2. 页面设置"></a>2. 页面设置</h4><ol>
<li>为 Kindle 设备绑定亚马逊账号<br>点击 Kindle 屏幕右上角的三条横杆菜单图标，在弹出的菜单中点选设置，选取自己的Wifi热点将Kindle连接上WiFi,然后点击“注册”项填入第一步注册（或已有）的亚马逊帐号</li>
<li>获取接收推送的邮箱地址<br><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exh613cdz4j20jg0g4gor.jpg" alt="我的头像"></li>
<li>添加推送邮箱地址到已认可邮箱列表<br>需要在【设置】页面底部找到“已认可的发件人电子邮箱列表”这一项，点击“添加认可的电子邮箱”把第一步申请的邮箱地址（或已有邮箱地址）添加进去。<br><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exh69h4fsxj20jg0akgnf.jpg" alt="我的头像"></li>
</ol>
<a id="more"></a>
<h4 id="3-常规邮件推送"><a href="#3-常规邮件推送" class="headerlink" title="3. 常规邮件推送"></a>3. 常规邮件推送</h4><ol>
<li>收件人类似“<a href="mailto:***@kindle.cn" target="_blank" rel="noopener">***@kindle.cn</a>”的目标邮箱地址,主题和内容可随意填写或者干脆不填写（若想把发送的诸如 TXT,PDF文档自动转化为Kindle专有格式可以在电子邮件的主题栏中填写”convert”）。</li>
<li>然后添加要推送的文档或电子书到附件，点击发送。<br>稍等片刻，你的 Kindle 就可以收到推送的内容了（如果你推送的内容不被支持会收到一份“你发送至Kindle的邮件未附任何文件附件”的提示回信）。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意一定要使用邮箱的普通附件，不要使用诸如163 云附件、QQ 中的超大附件、Gmail 中的 Google Drive 附件之类的非普通附件。还需要注意亚马逊云端对文档大小的限制是 50MB，邮箱附件大小不要超过这个数值</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="4-Calibre-设置推送"><a href="#4-Calibre-设置推送" class="headerlink" title="4. Calibre 设置推送"></a>4. Calibre 设置推送</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">163 邮箱：主机名 smtp.163.com 端口 465 或 587（加密类型：SSL）</span><br><span class="line">126 邮箱：主机名 smtp.126.com 端口 465 或 587（加密类型：SSL）</span><br><span class="line">yeah 邮箱：主机名 smtp.yeah.net 端口 465 或 587（加密类型：SSL）</span><br><span class="line">新浪邮箱：主机名 smtp.sina.com 端口 端口 465 或 587（加密类型：SSL）</span><br><span class="line">Gmail 邮箱：主机名 smtp.gmail.com 端口 587（加密类型：TLS）</span><br><span class="line">Hotmail/Live/Outlook邮箱：主机名 smtp-mail.outlook.com 端口 587（加密类型：TLS）</span><br><span class="line">QQ 邮箱：主机名 smtp.qq.com 端口 465（加密类型：SSL）</span><br></pre></td></tr></table></figure>
<p>  <img src="http://ww1.sinaimg.cn/large/4b5a1116jw1exh5dqakfmj20jg0ijgnq.jpg" alt="我的头像"><br>  <strong>右键一键推送图书</strong><br>  回到主界面书库，选择一个或多个电子书，右键点击所选电子书，在弹出的菜单里将鼠标指针悬浮到“连接/共享”，在弹出的子菜单中点击“发送右键至<a href="mailto:***@kindle.cn" target="_blank" rel="noopener">***@kindle.cn</a>”（<a href="mailto:***@kindle.cn" target="_blank" rel="noopener">***@kindle.cn</a> 就是第2步填写的那个邮箱），就可以直接把这些电子书发送到你亚马逊账户中的【<a href="https://www.amazon.cn/mn/dcw/myx.html/ref=kinw_myk_redirect#/home/content/pdocs/dateDsc/" target="_blank" rel="noopener">我的内容</a>】中了。</p>
<h4 id="5-闪电邮推送"><a href="#5-闪电邮推送" class="headerlink" title="5. 闪电邮推送"></a>5. 闪电邮推送</h4><p>如果感觉每次都要打开浏览器进入邮箱发送附件比较麻烦，可以通过邮箱桌面客户端“网易闪电邮”的右键发送功能简化推送步骤。此方法仅适用于 Windows 系统。<br>请先把发送邮件的邮箱添加到亚马逊已认可列表。然后进入“网易闪电邮”下载页面，下载安装后打开。可以关闭烦人的向导，填入你的邮箱和密码（不只是 163 邮箱，其他的如 QQ邮箱、新浪邮箱等主流邮箱都可以的哦）并选择“客户端模式”。<br>点击菜单栏的“邮箱 -&gt; 邮箱设置”，点击设置窗口左侧的“发信设置”，然后勾选左侧窗口中的“默认抄送给”，把“@kindle.cn”结尾的接收邮箱，点击【保存并关闭】。<br>现在用鼠标右键点击需要推送的文件，在弹出的右键菜单中点击“通过网易闪电邮发送”，文件将自动被添加到附件中，直接点击左上角的【发送】按钮就可以直接推送到亚马逊云端了。<br><img src="http://ww3.sinaimg.cn/large/4b5a1116gw1exh6xz59atj20hh0gwwhm.jpg" alt="我的头像"></p>
<h4 id="6-微信推送"><a href="#6-微信推送" class="headerlink" title="6. 微信推送"></a>6. 微信推送</h4><ol>
<li>在亚马逊 Kindle 服务号中回复“绑定 + Kindle 电子邮件地址”（不带引号哦！）Kindle 电子邮件地址是和您的 Kindle 设备关联的唯一邮箱，这个邮箱可以帮助您推送各种个人文档。比如您的 Kindle 电子邮件地址为：<a href="mailto:123456789@kindle.cn" target="_blank" rel="noopener">123456789@kindle.cn</a>，那就回复“绑定 + <a href="mailto:123456789@kindle.cn" target="_blank" rel="noopener">123456789@kindle.cn</a> ”使您的 Kindle 和微信服务号绑定，这样就可以推送文章了。</li>
<li>添加白名单,在【已认可的发件人电子邮箱列表 】下方，请选择【添加认可的电子邮箱】。输入 <a href="mailto:kindle@eub-inc.com" target="_blank" rel="noopener">kindle@eub-inc.com</a>，</li>
<li>推送内容到Kindle<br> （1）推送微信公众号的图文消息<br>  点开消息，然后点右上角，最后选“亚马逊Kindle服务号”<br> （2）推送微信对话<br>  长按任意消息，选择“更多”，勾选所有您要保存的消息。再点右下角的【…】，选择“亚马逊Kindle服务号”。请求成功后稍等片刻，文章便推送至您的Kindle设备，记得保持Kindle一直处于联网状态。您还可以在微信菜单中的【Send to Kindle】中查看推送记录<br> （3）推送普通网页内容<br> 除了以上两种方式，还可以通过“扫一扫”功能推送普通网页哦。首先打开二维码生成器（<a href="http://cli.im/url），把需要推送的网址贴上去生成一个二维码，然后使用微信的“扫一扫”扫描生成的二维码，然后点右上角，最后选“亚马逊Kindle服务号”即可" target="_blank" rel="noopener">http://cli.im/url），把需要推送的网址贴上去生成一个二维码，然后使用微信的“扫一扫”扫描生成的二维码，然后点右上角，最后选“亚马逊Kindle服务号”即可</a></li>
</ol>
<h4 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h4><ul>
<li>亚马逊Kindle服务号</li>
<li>kindle1000</li>
<li>readfreeme</li>
</ul>
<h4 id="7-网盘推送"><a href="#7-网盘推送" class="headerlink" title="7.  网盘推送"></a>7.  网盘推送</h4><ol>
<li>ifttt  gmail dropbox<br>必要条件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifttt帐号、dropbox帐号、gmail帐号、kindle推送邮箱、个人电脑一台</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>跳转到<a href="https://ifttt.com/recipes/77816-convert-and-send-pdfs-docs-and-more-from-dropbox-to-your-kindle" target="_blank" rel="noopener">ifttt</a>登录后激活dropbox和gmail的通道.<br>设置subfolder name(Dropbox中网盘新建一个文件夹),to address(自己的设置邮件地址)，ok<br><img src="http://ww1.sinaimg.cn/large/4b5a1116gw1exh9t2j4njj216g0iqdhe.jpg" alt="我的头像"></p>
<ol start="2">
<li><a href="https://getbookdrop.com/start" target="_blank" rel="noopener">https://getbookdrop.com/start</a></li>
<li><a href="http://wappwolf.com/gdriveautomator/#" target="_blank" rel="noopener">wappwolf googledrive 网盘推送</a>同上,美亚账号,中亚的要付费</li>
</ol>
<h4 id="8-插件及网站方式"><a href="#8-插件及网站方式" class="headerlink" title="8. 插件及网站方式"></a>8. 插件及网站方式</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/push-to-kindle/pnaiinchjaonopoejhknmgjingcnaloc" target="_blank" rel="noopener">fivefilters</a> </li>
<li><a href="https://chrome.google.com/webstore/detail/%E4%B8%80%E9%94%AE%E5%8F%91%E9%80%81%E5%88%B0kindle/hpphpohoimhpjigccjejlokfkdiaopof" target="_blank" rel="noopener">一键发送到kindle</a></li>
<li><a href="https://chrome.google.com/webstore/detail/send-to-kindle-for-google/cgdjpilhipecahhcilnafpblkieebhea" target="_blank" rel="noopener">Send to Kindle for Google Chrome</a> 这个然并卵,官方出品和电脑端一样只能是美亚账号  </li>
</ul>
<h4 id="9-rss-推送网站"><a href="#9-rss-推送网站" class="headerlink" title="9. rss 推送网站"></a>9. rss 推送网站</h4><ul>
<li><a href="http://www.mybanshu.com/portal.php" target="_blank" rel="noopener">http://www.mybanshu.com/portal.php</a></li>
</ul>
<h3 id="2-wifi推送"><a href="#2-wifi推送" class="headerlink" title="2. wifi推送"></a>2. wifi推送</h3><h4 id="1-Calibre-wifi"><a href="#1-Calibre-wifi" class="headerlink" title="1.Calibre wifi"></a>1.Calibre wifi</h4><ol>
<li>打开 Calibre，点击界面上方的图标按钮“连接/共享”，在弹出的菜单中点击“启动连接服务”。<br><img src="http://ww3.sinaimg.cn/large/4b5a1116gw1exh76dab1oj20c7098wf7.jpg" alt="我的头像"></li>
<li>记录共享 IP 和端口<br><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exh77blmv4j20c7098q3n.jpg" alt="我的头像"></li>
<li>使用 Kindle 体验版网络浏览器访问下载<br>Kindle浏览器中输入<strong><a href="http://192.168.1.100:8080" target="_blank" rel="noopener">http://192.168.1.100:8080</a></strong>（这里请输入你自己的IP）<br><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exh78tqoedj209q0d5t9u.jpg" alt="我的头像"></li>
</ol>
<h3 id="3-usb推送"><a href="#3-usb推送" class="headerlink" title="3. usb推送"></a>3. usb推送</h3><h4 id="1-usb数据线"><a href="#1-usb数据线" class="headerlink" title="1. usb数据线"></a>1. usb数据线</h4><h4 id="2-otg"><a href="#2-otg" class="headerlink" title="2. otg"></a>2. otg</h4><ul>
<li>如何使用安卓手机的 OTG 功能管理 Kindle 文件？<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 一部 Kindle 设备, 一条 Kindle 数据线, 一部支持 OTG 功能的 Android（安卓）手机（平板也可）, 安装文件管理 APP（推荐“ES文件管理器”）, 一条 OTG 线</span><br><span class="line">2 将 OTG 线与 Kindle 数据线相连接；</span><br><span class="line">3 把 Kindle 数据线插到 Kindle 上（注意！Kindle 数据线不要插到手机上）；</span><br><span class="line">4 将 OTG 线插到手机上（注意！OTG 线不要插到 Kindle 上）。</span><br><span class="line">5 点击“菜单（左上角的三道杠）”，展开“本地”标签；</span><br><span class="line">6 找到类似“USB1002”的盘符，点击该盘符；</span><br><span class="line">7 会提示“允许应用‘ES文件浏览器’该USB设备吗？”的提示框，继续点击【确定】按钮；</span><br><span class="line">8 可以看到一个名为“Kindle”的文件夹，这就是 Kindle 磁盘；</span><br><span class="line">9 把手机中的电子书文件拷贝到里面的“documents”文件夹中；</span><br><span class="line">10 传输完毕后断开 USB 连接，打开 Kindle 就能看到拷贝进去的电子书了。</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exh73hpy9xg208c0et0uy.gif" alt="我的头像"></p>
<h2 id="2-资源"><a href="#2-资源" class="headerlink" title="2. 资源"></a>2. 资源</h2><ul>
<li><a href="http://qiyeyun.baidu.com/share/home?uk=1075874930&amp;view=share#category/type=0" target="_blank" rel="noopener">苏菇莨</a></li>
<li><a href="http://www.panc.cc/" target="_blank" rel="noopener">胖次搜索</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> kindle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wordpress迁移到hexo]]></title>
      <url>http://www.farwmarth.com/wordpress%E8%BF%81%E7%A7%BB%E5%88%B0hexo/</url>
      <content type="html"><![CDATA[<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li>(<a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">官方帮助</a>)</li>
</ul>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>安装hexo</span><br><span class="line">npm install hexo  -g</span><br><span class="line"><span class="meta">#</span>安装hexo命令行模块</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"><span class="meta">#</span>创建blog目录</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line"><span class="meta">#</span>初始化</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>安装server插件</span><br><span class="line">npm install hexo-server --save</span><br><span class="line"><span class="meta">#</span>git插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">#</span>feed</span><br><span class="line">npm install hexo-generator-feed@1.0.2 --save</span><br><span class="line"><span class="meta">#</span>sitemap</span><br><span class="line">npm install hexo-generator-sitemap@1.0.1 --save</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="hexo-init后目录结构"><a href="#hexo-init后目录结构" class="headerlink" title="hexo init后目录结构"></a>hexo init后目录结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── db.json  #json格式的静态常量数据库</span><br><span class="line">├── _config.yml #网站配置</span><br><span class="line">├── package.json #插件依赖</span><br><span class="line">├── scaffolds    #文章模板</span><br><span class="line">├── scripts   #脚本文件夹</span><br><span class="line">├── source    #资源文件夹</span><br><span class="line">|   ├── _drafts  #草稿</span><br><span class="line">|   └── _posts   #要发布的源文章</span><br><span class="line">└── themes     #主题</span><br></pre></td></tr></table></figure>
<h2 id="下载blog中的图片"><a href="#下载blog中的图片" class="headerlink" title="下载blog中的图片"></a>下载blog中的图片</h2><p>写了一个py脚本搞定<br><a href="https://gist.github.com/wujiyu115/707691f95713c69fde01" target="_blank" rel="noopener">https://gist.github.com/wujiyu115/707691f95713c69fde01</a><br>把blog文中的图片下载下来放到source目录中,以wp-content目录为根目录,域名不变的前提下文章中的链接都需要再更新</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt; --hexo n     #建立新文章，默认在_posts下，layout="draft"时发布的是草稿</span><br><span class="line">hexo publish &lt;filename&gt; --hexo p  #将_drafts下的文件放到_posts下，也就是发布草稿</span><br><span class="line">hexo generate  --hexo g #生成静态文件</span><br><span class="line">hexo clean   --hexo c #清理缓存</span><br><span class="line">hexo server   --hexo s #启动服务器</span><br><span class="line">hexo deploy  --hexo d #部署到远程</span><br></pre></td></tr></table></figure>
<h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ul>
<li><p>如果是直接写完整篇文章,部署的步骤。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>创建文章</span><br><span class="line">hexo new post &lt;filename&gt;</span><br><span class="line"><span class="meta">#</span>生成文章</span><br><span class="line">hexo generate</span><br><span class="line"><span class="meta">#</span>发布</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果有草稿的话可以这样</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>创建草稿</span><br><span class="line">hexo new draft "new draft"</span><br><span class="line"><span class="meta">#</span>编辑好草稿好后发布草稿</span><br><span class="line">hexo publish &lt;filename&gt;</span><br><span class="line"><span class="meta">#</span>预览草稿</span><br><span class="line">hexo server --drafts</span><br><span class="line"><span class="meta">#</span>发布</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="config-xml"><a href="#config-xml" class="headerlink" title="_config.xml"></a>_config.xml</h2><p>###部署类型设置git<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#hexo 3.0 部署类型不再是github，_config.yml 中修改,同时部署到github和gitcafe</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">    - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">      repo:</span> <span class="attr">https://github.com/wujiyu115/wujiyu115.github.com.git,master</span></span><br><span class="line"><span class="attr">    - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">      repo:</span> <span class="attr">https://gitcafe.com/wujiyu115/farwmarth.git,gitcafe-pages</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>定位到根目录</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line"><span class="meta">#</span>更改根目录_config.yml</span><br><span class="line">theme: next</span><br><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure>
<h3 id="next主题"><a href="#next主题" class="headerlink" title="next主题"></a>next主题</h3><ul>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next/wiki</a></li>
<li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></li>
</ul>
<h2 id="hexo源文章和主题管理"><a href="#hexo源文章和主题管理" class="headerlink" title="hexo源文章和主题管理"></a>hexo源文章和主题管理</h2><ul>
<li><code>github</code>建立主仓库管理文章叫<code>hexo</code></li>
<li>fork一下<code>next</code>主题新仓库叫<code>next</code></li>
<li>然后在<code>hexo</code>仓库中<code>themes</code>中添加<code>submodule</code>这样主题和源文章分开管理.<code>hexo</code>仓库只托管源文章.</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/hexo_source.png" width="200px" height="300px"></p>
<h3 id="管理主题"><a href="#管理主题" class="headerlink" title="管理主题"></a>管理主题</h3><ul>
<li>自己的<code>next</code>仓库持有两个远程别名,自有的fork的<code>origin</code>,另外一个是官方next主题别名为<code>upstream</code>.</li>
<li>自己对主题的修改推送到fork的<code>origin</code>仓库中</li>
<li>要更新官方的新版本时,从upstream中pull下来进行合并。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/wujiyu115/hexo-theme-next.git themes/next</span><br><span class="line">cd themes/next</span><br><span class="line">git remote add upstream https://github.com/iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure>
<h4 id="hexo仓库更新子项目"><a href="#hexo仓库更新子项目" class="headerlink" title="hexo仓库更新子项目"></a><code>hexo</code>仓库更新子项目</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/wujiyu115/hexo.git hexo</span><br><span class="line">cd hexo</span><br><span class="line">git submodule update --recursive --init</span><br></pre></td></tr></table></figure>
<h4 id="删除submodule"><a href="#删除submodule" class="headerlink" title="删除submodule"></a>删除submodule</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule deinit &lt;path_to_submodule-name&gt;</span><br><span class="line">git rm --cached &lt;path_to_submodule&gt;</span><br><span class="line">rm -rf .git/modules/&lt;path_to_submodule&gt;</span><br></pre></td></tr></table></figure>
<h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p><a href="https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/" target="_blank" rel="noopener">https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/</a></p>
<ul>
<li>ping wujiyu115.github.io记录下IP地址</li>
<li>CNAME 在仓库根目录下添加一个CNAM文件，没有后缀名，里面内容为你的域名(如:test.com),不需要添加http/www等前缀</li>
<li>添加 DNS  Service记录</li>
<li>清理浏览器缓存<br><code>chrome://net-internals#dns</code> 点击 <code>clear host cache</code></li>
</ul>
<h3 id="gitcafe"><a href="#gitcafe" class="headerlink" title="gitcafe"></a>gitcafe</h3><p><a href="https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki" target="_blank" rel="noopener">https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki</a></p>
<ul>
<li>将用于 Pages 服务站点的自定义域名使用 CNAME 记录指向 gitcafe.io。</li>
</ul>
<p><img src="http://ww2.sinaimg.cn/large/4b5a1116gw1exrhfcx5tuj20m30aaq50.jpg" alt="域名绑定"></p>
<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><h3 id="新建一个不依赖模板的HTML页面"><a href="#新建一个不依赖模板的HTML页面" class="headerlink" title="新建一个不依赖模板的HTML页面"></a>新建一个不依赖模板的HTML页面</h3><p>如果你是不想hexo g时被模板改变你的html的话，可在在文件头加<code>layout: false</code></p>
<p>例如新建一个404页面</p>
<pre><code>layout: false
title: &quot;404&quot;
date: 2015-02-05 20:03:48
---
&lt;html&gt;
&lt;body&gt;
&lt;h1&gt;404 Page Not Found&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h1 id="coding上单项目部署公钥"><a href="#coding上单项目部署公钥" class="headerlink" title="coding上单项目部署公钥"></a>coding上单项目部署公钥</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>测试密钥是否部署成功</span><br><span class="line">ssh -i /data/publish/xxx_rsa  -T git@git.coding.net</span><br></pre></td></tr></table></figure>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="出现-Cannot-GET"><a href="#出现-Cannot-GET" class="headerlink" title="出现 Cannot GET /"></a>出现 Cannot GET /</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure>
<ul>
<li>注意冒号后面都要添加一个半角空格 之后才是设置参数</li>
</ul>
<h3 id="hexo中source目录的js被渲染"><a href="#hexo中source目录的js被渲染" class="headerlink" title="hexo中source目录的js被渲染"></a><a href="https://segmentfault.com/q/1010000003957602/a-1020000003957954" target="_blank" rel="noopener">hexo中source目录的js被渲染</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo会把hexo/source下的文件全部渲染,放在source目录的js也会被渲染出错,</span><br><span class="line">解决办法就是将js文件放到主题的source目录中,如themes/next/source中</span><br></pre></td></tr></table></figure>
<h3 id="解决hexo神烦的DTraceProviderBindings-MODULE-NOT-FOUND"><a href="#解决hexo神烦的DTraceProviderBindings-MODULE-NOT-FOUND" class="headerlink" title="解决hexo神烦的DTraceProviderBindings MODULE_NOT_FOUND"></a>解决hexo神烦的DTraceProviderBindings MODULE_NOT_FOUND</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo --no-optional</span><br><span class="line">npm uninstall hexo</span><br><span class="line">npm install hexo --no-optional</span><br><span class="line">npm uninstall hexo-cli -g</span><br><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<h3 id="提交出现fatal-multiple-stage-entries-for-merged-file的问题"><a href="#提交出现fatal-multiple-stage-entries-for-merged-file的问题" class="headerlink" title="提交出现fatal:multiple stage entries for merged file的问题."></a>提交出现<code>fatal:multiple stage entries for merged file</code>的问题.</h3><p>在hexo主目录中执行如下操作解决。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm .git/index</span><br><span class="line">git add -A</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给skynet加上curl模块]]></title>
      <url>http://www.farwmarth.com/%E7%BB%99skynet%E5%8A%A0%E4%B8%8Acurl%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;现在项目里用的是早期的skynet版本,一直不支持http的get,post. 充值与后台交互方式都是采用socket的方式。大部分需求都尽量避开这一块，最近策划又提了个需求,关服开服状态要反应到客户端。这个项目服务器列表是直接是一个静态文件放在web容器中.思路很简单,用jsp写个服务来修改服务器状态(这里应该做安全检验),各服务器开关服，或者服务器崩溃时将状态上报到web服务上. 关键就在这个skynet的http上.</p><p></p><br>&nbsp;&nbsp;尝试用skynet的socket来模拟http请求,一直处于阻塞状态。没有去细究. 然后从github找了个luacurl库 : <a href="https://github.com/Lua-cURL/Lua-cURLv3" title="https://github.com/Lua-cURL/Lua-cURLv3" target="_blank" rel="noopener">https://github.com/Lua-cURL/Lua-cURLv3</a>&nbsp; , 然后把依赖库<a href="http://curl.haxx.se/download.html" title="http://curl.haxx.se/download.html" target="_blank" rel="noopener">http://curl.haxx.se/download.html</a> 也down下来.<p></p>
<a id="more"></a>
<h2 id="编译curl"><a href="#编译curl" class="headerlink" title="编译curl"></a>编译curl</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/curl</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h2 id="编译lua-curlv3-gt"><a href="#编译lua-curlv3-gt" class="headerlink" title="编译lua-curlv3 &gt;"></a>编译lua-curlv3 &gt;</h2><p>这步有点蛋疼,刚开始是lua路径不对,默认写是的5.1的目录，skynet我们用的是lua 5.2.而且安装的路径也不一样，修改之后，一直卡在找不到curl/curl.h这个头文件上。最后修改makefile把头文件路径加上去解决了这个问题,修改的部分makefile代码:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">include .config</span><br><span class="line"></span><br><span class="line">T=lcurl</span><br><span class="line"></span><br><span class="line">UNAME            ?= $(shell uname)</span><br><span class="line">DESTDIR          ?= /</span><br><span class="line">PKG_CONFIG       ?= pkg-config</span><br><span class="line">INSTALL          ?= install</span><br><span class="line">RM               ?= rm</span><br><span class="line">LUA_IMPL         ?= lua</span><br><span class="line">CC               ?= $(MAC_ENV) gcc</span><br><span class="line"></span><br><span class="line">LUA_VERSION       = $(shell lua -v| awk '&#123; print substr($$2,1,3) &#125;')</span><br><span class="line"><span class="meta">#</span> ifeq ($(LUA_VERSION),)</span><br><span class="line"><span class="meta">#</span> LUA_CMOD         ?= /usr/lib/lua/5.1</span><br><span class="line"><span class="meta">#</span> LUA_LMOD         ?= /usr/share/lua/5.1</span><br><span class="line"><span class="meta">#</span> LIBDIR           ?= /usr/lib</span><br><span class="line"><span class="meta">#</span> LUA_INC          ?= /usr/include</span><br><span class="line"><span class="meta">#</span> CURL_LIBS         = -L/usr/local/lib -lcurl</span><br><span class="line"><span class="meta">#</span> else</span><br><span class="line"><span class="meta">#</span> LUA_CMOD         ?= $(shell $(PKG_CONFIG) --variable INSTALL_CMOD $(LUA_IMPL))</span><br><span class="line"><span class="meta">#</span> LUA_LMOD         ?= $(shell $(PKG_CONFIG) --variable INSTALL_LMOD $(LUA_IMPL))</span><br><span class="line"><span class="meta">#</span> LIBDIR           ?= $(shell $(PKG_CONFIG) --variable libdir $(LUA_IMPL))</span><br><span class="line"><span class="meta">#</span> LUA_INC          ?= $(shell $(PKG_CONFIG) --variable includedir $(LUA_IMPL))</span><br><span class="line"><span class="meta">#</span> LUA_LIBS          = $(shell $(PKG_CONFIG) --libs $(LUA_IMPL))</span><br><span class="line"><span class="meta">#</span> CURL_LIBS         = $(shell $(PKG_CONFIG) --libs libcurl)</span><br><span class="line"><span class="meta">#</span> endif</span><br><span class="line"></span><br><span class="line">LUA_CMOD         ?= /usr/local/lib/lua/$(LUA_VERSION)</span><br><span class="line">LUA_LMOD         ?= /usr/local/share/lua/$(LUA_VERSION)</span><br><span class="line">LIBDIR           ?= /usr/lib</span><br><span class="line">LUA_INC          ?= /usr/local/include/</span><br><span class="line">CURL_INC          ?= /usr/local/curl/include/</span><br><span class="line">CURL_LIBS         = -L/usr/local/curl/lib -lcurl</span><br><span class="line"></span><br><span class="line">ifeq ($(UNAME), Linux)</span><br><span class="line">OS_FLAGS         ?= -shared</span><br><span class="line">LIBS              = -lrt -ldl $(CURL_LIBS)</span><br><span class="line">endif</span><br><span class="line">ifeq ($(UNAME), Darwin)</span><br><span class="line">OS_FLAGS         ?= -bundle -undefined dynamic_lookup</span><br><span class="line">MAC_ENV          ?= env MACOSX_DEPLOYMENT_TARGET='10.3'</span><br><span class="line">LIBS              = -ldl $(CURL_LIBS)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">ifneq ($(DEBUG),)</span><br><span class="line">DBG               = -ggdb</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">ifeq ($(DEV),)</span><br><span class="line">WARN              = -Wall -Wno-unused-value</span><br><span class="line">else</span><br><span class="line">WARN              = -Wall -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">INCLUDES          = -I$(LUA_INC)   -I$(CURL_INC)</span><br><span class="line">DEFINES           =</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">COMMONFLAGS       = -O2 -g -pipe -fPIC $(OS_FLAGS) $(DBG)</span><br><span class="line">LF                = $(LIBS) $(LDFLAGS)</span><br><span class="line">CF                = $(INCLUDES) $(DEFINES) $(COMMONFLAGS) $(WARN) -DPTHREADS $(CFLAGS)</span><br><span class="line"></span><br><span class="line">SCR               = src/lua/*.lua src/lua/cURL/*.lua src/lua/cURL/impl/*.lua</span><br><span class="line">SRCS              = src/*.c</span><br><span class="line"></span><br><span class="line">BIN               = $(T).so</span><br><span class="line"></span><br><span class="line">all: $(BIN)</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span>(BIN): $(SRCS)</span><br><span class="line">    $(CC) $(CF) -o $@ $^ $(LF)</span><br><span class="line">    # @echo $(LUA_CMOD) </span><br><span class="line"></span><br><span class="line">install: all</span><br><span class="line">    $(INSTALL) -d $(DESTDIR)$(LUA_CMOD) $(DESTDIR)$(LUA_LMOD)/cURL/impl</span><br><span class="line">    $(INSTALL) $(BIN) $(DESTDIR)$(LUA_CMOD)</span><br><span class="line">    $(INSTALL) src/lua/cURL.lua $(DESTDIR)$(LUA_LMOD)</span><br><span class="line">    $(INSTALL) src/lua/cURL/safe.lua $(DESTDIR)$(LUA_LMOD)/cURL</span><br><span class="line">    $(INSTALL) src/lua/cURL/utils.lua $(DESTDIR)$(LUA_LMOD)/cURL</span><br><span class="line">    $(INSTALL) src/lua/cURL/impl/cURL.lua $(DESTDIR)$(LUA_LMOD)/cURL/impl</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">    $(RM) -f $(BIN)</span><br></pre></td></tr></table></figure></p>
<p>编译好后在目录生成lcurl.so文件。基本上就ok了。  </p><p><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local curl = require &quot;lcurl&quot;</span><br><span class="line">curl.easy()</span><br><span class="line">      :setopt_url(url)</span><br><span class="line">      :setopt_writefunction(io.stderr) -- use io.stderr:write()</span><br><span class="line">      :perform()</span><br><span class="line">      :close()</span><br></pre></td></tr></table></figure></p>
<p>这样require就可以加载这个动态链接库跑过来了</p>
<p>默认是同步的,异步访问:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local cURL = require(&quot;cURL&quot;)</span><br><span class="line"></span><br><span class="line">-- setup easy and url</span><br><span class="line">c1 = cURL.easy&#123;url = &quot;http://www.lua.org/&quot;&#125;</span><br><span class="line">c2 = cURL.easy&#123;url = &quot;http://luajit.org/&quot;&#125;</span><br><span class="line"></span><br><span class="line">m = cURL.multi()</span><br><span class="line">  :add_handle(c1)</span><br><span class="line">  :add_handle(c2)</span><br><span class="line"></span><br><span class="line">print(&quot;-------------------------&quot;)</span><br><span class="line">for data, type, easy in m:iperform() do</span><br><span class="line">  if type == &quot;data&quot; and c1 == easy then print(data) end</span><br><span class="line">  if type == &quot;data&quot; and c2 == easy then  print(data) end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> c++ </category>
            
        </categories>
        
        
        <tags>
            
            <tag> luacurl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[翻翻旧货]]></title>
      <url>http://www.farwmarth.com/%E7%BF%BB%E7%BF%BB%E6%97%A7%E8%B4%A7/</url>
      <content type="html"><![CDATA[<p>这两个月代码产出量比以往都要高，可能是兴趣所致,总喜欢折腾一些工作外的想法.</p>
<p>二月份的时候断断续续花了一周的时间写了fei.py这个自动化注册的东西。也当是python的一次练手.</p>
<p> 说来也巧,写这个东西起因是因为在博客上看到”轻松筹”发起了刷脸送parallels desktop 正版激活码的活动.其实就是在”轻松筹”上发起一个活动,让好友来支持,这样就可以得到一套正版的激活码.但是注册这个网站不是一般的邮箱注册,而是手机号注册.神奇的网路上一搜索，果然有专门提供一次性注册得到验证码的服务,筛选了一下就用了飞Q(<a href="http://sms.xudan123.com/api.html" title="http://sms.xudan123.com/api.html" target="_blank" rel="noopener">http://sms.xudan123.com/api.html</a>)这个服务,代码分为三个部分,注册,创建支持项目,确认支持.期间也遇到不少问题,调用”轻松筹”短信接口太频繁被封ip,然后就写了个代理筛选的模块.需要BeautifulSoup模块的支持.</p>
<a id="more"></a>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2015/04/fei.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2015/04/fei.jpg" alt="fei" title="fei"></a> </p>
<p>代码奉上:&nbsp; <a href="https://gist.github.com/wujiyu115/0fa517285ed3788ddd6a" title="https://gist.github.com/wujiyu115/0fa517285ed3788ddd6a" target="_blank" rel="noopener">https://gist.github.com/wujiyu115/0fa517285ed3788ddd6a</a></p>
<p>三月份玩了下instagram,发现了不少好的图片,苦于instagram没有保存的功能,又不满Instadownloader这个应该的功能单一性，然后就自己动手写了一个下载图片视频的app.用法很简单,启动app后会监测剪贴板,在原应用复制链接时符合规则的图片或者是视频就会自动下载了.没有复制链接的就点击分享按钮,分享应用选择我的app就可以了.目前支持的应用:</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2015/04/S50424120837.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2015/04/S50424120837.jpg" alt="S50424-120837" title="S50424-120837"></a> </p>
<p>仓库: <a href="https://bitbucket.org/wujiyu115/easy_photo/" target="_blank" rel="noopener">https://bitbucket.org/wujiyu115/easy_photo/</a></p>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> 自动注册 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[萌芽]]></title>
      <url>http://www.farwmarth.com/%E8%90%8C%E8%8A%BD/</url>
      <content type="html"><![CDATA[<h2 id="再开始写点东西"><a href="#再开始写点东西" class="headerlink" title="再开始写点东西"></a>再开始写点东西</h2><p>&nbsp;&nbsp;&nbsp; 话说我为什么又开始写点东西了? 一是心血来潮,二是发现大半年都在一种半漂浮的状态,没有一些真正的思考.</p>
<p>&nbsp;&nbsp;&nbsp; 整理了下旧时写的一些博文,用四个字来形容是:其差无比,要么是篇幅太短,要么结构缭乱,要么是一些现在看来一文不值的转载,万物大概都遵循了这个法则:随着时间的推演,总会产生一些变化.当时的心境和现在也是大相径庭.</p>
<p>&nbsp;&nbsp;&nbsp; 我记得第一篇博文应该是在刚参加工作的时候,字里行间尽是刚工作的困惑与新奇感.思绪也像脱缰的野马,完全没有逻辑,而且写完后从来不会再审阅,就像twitter上有人发过一句话一样:写过后的文章就像拉过的屎,不忍回头再看.现在倒是养成了一点小习惯,不管文章写得多烂,还是会自己再去读一读,改改错别字和措辞,估且算是一种进步吧.</p>
<a id="more"></a>
<p>&nbsp;&nbsp;&nbsp; 要说不足的地方就是拖延症,每次开了个头,不知道几天后才能把剩下的写完.原因也有几种,灵感匮乏,经常是有一点小思绪却不知道怎么成文.要么是写着写着被其他事耽搁了,再捡起来写找不到当时的氛围.所以草稿箱里胎死腹中的不计其数.不仅仅是博文.还有很多想完成的点子也是如此.估计大部分人都如《Before Sunset》里所说的:”There’s so many things I want to do,and I end up doing not much.”,坚持和保持热情是一件很困难的事情.</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<h2 id="失败但有意义的一次项目"><a href="#失败但有意义的一次项目" class="headerlink" title="失败但有意义的一次项目"></a>失败但有意义的一次项目</h2><p>&nbsp;&nbsp;&nbsp; 最近朋友找到我做一个视频会议的交互app,抱着跃跃一试的心态答应了,花了二天时间做demo,收定金然后开始漫长的编码过程,因为朋友没用过git,所以代码仓库用了淘宝的svn.其实这个领域并不熟悉,边学边做,从github上扒源码改造.做了两周牺牲了两个双休,主体功能大体是出来了,交货的过程并不顺利,达不到客户的指标,而且我们两个人的情绪上也是有点些波动,被客户的要求折腾地想死,上班的时间也在撸这个. 周一的时候特意请假在家准备把这个烫手的山芋整完,朋友打电话过来说:这个活还是推掉算了,影响正常工作不说还焦头烂额的.我也不再过多说什么,两三周紧崩的弦突然松弛下来有点找不到北的感觉.事后想想这无疾而终的事情顿觉遗憾.有时候付出了不一定能得到想要的结果,这一圈下来也是长了点教训,工作量和需求没有评估好,而且对这种外单来说,牺牲个人时间是无法避免的,要说收获吧也不是没有.做交互其实单独做成一套业务,一些以视觉导向的行业有大把的这种需求,教育行业,广告,地产.这个业务可以成为一个长期的发展方向.再者就是做东西要追求细腻度,之前做东西大多是功能为导向,功能完全微调就交差了.就算了自己兴趣之内做的东西也是过于粗糙,很少去考虑观感.</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<h2 id="说说拍照"><a href="#说说拍照" class="headerlink" title="说说拍照"></a>说说拍照</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 怎么说呢,算了发展一下兴趣爱好吧,60D买了近一年了,偶尔去拍拍东西,大多数是给女朋友拍,都是边玩边拍的状态.一年了摄影水平并没有太多长进,大抵就是因为是兴趣,不会花太多精力去脑补这个领域的知识.今年对摄影产生了不一样的期许,受一些网上的素材启发又有了一些新的想法想去完成.比如延时摄影,减光境拍风光片,夜影等等.其实摄影和写作相差无几, 都是表达情绪的一种方式,只是一个是视觉系,一个是思维系.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 摄影群里经常有两种纷争,一是器材,二是后期,好的器材确实能帮一个摄影师拍出更出色的照片,更好的细节,更丰富的色彩.但是好的照片跟好器材并不成正比.就像好文章与华丽辞藻一样,立意准确,片面整洁,色彩得当,我觉得这就是一张好的照片.至于后期,一些大拿说后期是对原片的一种侮辱,是对自己的提炼不自信的表现.我倒觉得并非如此,可能是还没到那个境界,我觉得后期也分两种,一种是裁剪和修饰,让视角和色彩更符合拍摄者的原意.一种是二次创作,让原有的作品有不一样的表现.比如加上镜像,局部色彩高亮. 不管大拿怎么想,反正我现在是挺乐意折腾后期的.</p>
<p>&nbsp;</p>
<p>今天写得比较顺利,一气呵成了.推荐个白噪音网站: <a href="http://www.rainymood.com/" title="http://www.rainymood.com/" target="_blank" rel="noopener">http://www.rainymood.com/</a></p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[这一年看的电影]]></title>
      <url>http://www.farwmarth.com/%E8%BF%99%E4%B8%80%E5%B9%B4%E7%9C%8B%E7%9A%84%E7%94%B5%E5%BD%B1/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp; <font color="#ff0000">少年时代(boyhood)</font></p>
<p>&nbsp;&nbsp;&nbsp; 此片时长166分钟,看的时候自备干粮。整个故事讲的是一个男孩从6岁到18岁的成长过程,父母在6岁的时候就离婚，母亲独自抚养姐弟俩，只有每年夏天的时候会和父亲有段时间相处。母亲为了他们更好的生活，一边读求学一边照顾他们。后来嫁了一个酒鬼老师,一个社区警察,最后都以离婚告终.整个故事并没有太多波澜,平淡地描述了成长叛逆的过程,年少时对外部世界的懵懂,对自我认知的探索,对未知旅程的激动而紧张。</p>
<a id="more"></a>
<p>&nbsp;&nbsp; 电影对我触动的几点.</p>
<p>&nbsp;&nbsp; 15岁生日时家人精心准备的礼物,第一张披头士专辑,第一把猎枪,第一件西装,第一次进教堂.傍晚一家人在木屋前轻声吟唱父亲创作的歌曲.</p>
<p>&nbsp;&nbsp;&nbsp; 梅森学会摄影后觉得自己很特别,所以就呆在暗室里逃避功课，老师对他说了一番话，你交上的摄影作品很不错,看待事物的方式也很特别,但是这个世界天赋异禀的人很多，单靠天赋你只能在咖啡馆里喝一杯咖啡.一个不自律没有决心，没有职业道德的情况下做出成就的我还没见过,然后老师给梅森抛出了两个经典的问题: what are you want to be? what are you want to do ? 梅森说:我想要拍照,想要搞艺术,老师又问:谁都可以拍照搞艺术,但是凭什么你能能更出众呢?</p>
<p>&nbsp;&nbsp; 高中毕业后,漂亮女友劈腿,父亲在酒吧安慰他:女人永远都不会满足,总在寻找更好的男人,不要在一棵树人吊死,专注于让自己更优秀,然后欲女们才会蠢蠢欲动任你挑选了,生活中我们都是在即兴表演,要用心去感受,当你越长越大时候外壳会变得越来越坚硬,这种触觉会越来越不灵敏.</p>
<p>&nbsp; 在饭店吃饭时碰到以前的在他家工作过的水管工,母亲之前建议小伙子去读社区学校,然后他真的去了而且拿到了学位,换了一份不错的工作.母亲有点唏嘘,有时候一些建议真的能改变一个人的轨迹.</p>
<p>&nbsp; 毕业后要离开家,梅森讲着新舍友的事情,母亲终于爆发了:我想起了我的一个个人生的里程碑,结婚,生子,离婚.以为你有阅读障碍,教你骑自行车,然后再次离婚,终于获得了学位找到了心仪的工作,送你姐上大学,再送你上大学,下个里程碑就是我的葬礼,我以为人生会有更多.<br>&nbsp; 看完电影又看了一下幕后,导演是Richard Linklater,这部电影耗时12年,片中的梅森的姐姐就是导演的女儿,每次拍戏都是利用主角Ellar Coltrane假期时间来完成.主角口述一下这一年发生了什么,然后导演将他改造写成剧本.这是一部相当纪实的电影,包括片中母亲的离异,再结婚也是根据主角的亲身经历改编的。</p>
<p>&nbsp;&nbsp; </p>
<p>&nbsp; <font color="#ff0000">少年斯派维的奇异旅行(L’extravagant voyage du jeune et prodigieux T.S. Spivet)</font></p>
<p>&nbsp;&nbsp;&nbsp; 这个剧本是少年冒险的题材，斯派维从小出生在一个奇怪的家庭组织里,妈妈是个生物科学家,爸爸是狂热的的牛仔,小斯派维酷爱科学和图解.斯派维本来有一个异卵双胞胎弟弟雷顿,比起斯派维,父亲更喜欢弟弟雷顿,因为弟弟更有牛仔的天赋,喜欢练枪打土狼,但是弟弟在一场意外里死掉了,然后这就成了全家人的心病,没人再提起过它,这也成为斯派维不受待见的原因之一.</p>
<p>&nbsp;&nbsp;&nbsp; 一年前,在一场关于永动机的观影课堂上,教授说,基本热学理论认为所有的机械最终都会处于静止状态，有学生提问,永远机在现有的科学基础上交给空想家和诗人比较合适,教授反驳,那些突破想象超越科学极限的人不也叫诗人吗？正是这样开放的科学态度让斯派维备受鼓舞,课堂结束后小斯派维握紧小手郑重其事地对教授说:我是来自蒙大拿州的斯派维,我接受制造永动机的挑战.虽然教授只是拍拍他的头微微一笑,但斯派维却把这个当作了一项事业.</p>
<p>&nbsp;&nbsp; 第二前八月份的时候,斯派维接到了一个电话,自己的磁力轮设计稿获取了斯宾塞贝尔德奖,他假装父亲是个哑巴,然后自己和史密森学院的副干事通话,因为没人会相信是一个10岁的小屁孩设计了磁力轮.</p>
<p>&nbsp;&nbsp; 斯派维犹豫再三最终决定一个人去纽约去接受这个奖项,对于一个10岁的少年来说这是一个艰难的决定,打包行李,给家人写一封离别信,用小拖车拖着自己笨重的行李箱上路了,机智的斯派维把火车的信号灯涂成了红色蹭上了货运列车,旅途的风景让斯派维很兴奋,有成林的树木,清澈的河流,一望无际的沙漠,风格各异的建筑,血色一样的天空,但是现实的问题也随即而来,食物吃完了在货运列车上的生存成了问题.幸运的是他遇到了一个流浪汉,流浪给他一些硬币去买热狗,吃完热狗后看着窗外的夜色,斯派维思绪万千,我不是一个无忧无虑的漂泊者,我只是一个离家出走的10岁小孩.</p>
<p>&nbsp; 虽然旅途不易,经历了警察的追捕,身体受伤,但斯派维还是搭上怪叔叔的大货车到达史密森学院,但是斯派维却被学院的副干事包装经历,成了舆论上的小茶点,出入各种show,而没人在意这个小少年真正想要说的,斯派维在演讲上最后还是讲起了弟弟雷顿意外死亡的故事,母亲在场外默默地听着独自流泪,因为弟弟的死亡母亲一度扎在寻找不存在的昆虫这项研究来掩盖伤痛,而忽视了现实中还存在的家庭.</p>
<p>&nbsp;&nbsp; 斯派维最终被父母接回了家,他妈妈又怀了一个小baby,父亲还是一个纯粹的牛仔,但是家庭气氛却和睦起来，母亲不再沉迷在她的昆虫世界里,片尾的时候斯派维的永动机设计被用来摇婴儿床.</p>
<p>&nbsp; 忠犬八公的故事(Hachi: A Dog’s Tale)</p>
<p>&nbsp; 夏日之王 (The Kings of Summer )</p>
<p>&nbsp; 天堂真的存在 (Heaven is for Real )</p>
<p>&nbsp; 独立游戏大电影 (Indie Game: The Movie)</p>
<p>&nbsp; 银河护卫队(Guardians of the Galaxy)</p>
<p>&nbsp;苹果核战记(阿尔法 Appleseed Alpha)</p>
<p>&nbsp; 夺命地铁 (Метро)</p>
<p>&nbsp; 消失的爱人 (Gone Girl)</p>
]]></content>
      
        <categories>
            
            <category> movie </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[游戏数值修改器]]></title>
      <url>http://www.farwmarth.com/%E6%B8%B8%E6%88%8F%E6%95%B0%E5%80%BC%E4%BF%AE%E6%94%B9%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h2><ul>
<li>金山游侠:</li>
<li>变速齿轮:</li>
<li>flash修改大师 :<a href="http://www.cordyblog.cn/" title="http://www.cordyblog.cn/" target="_blank" rel="noopener">http://www.cordyblog.cn/</a></li>
</ul>
<a id="more"></a>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android:"></a>Android:</h2><ul>
<li>手机游侠</li>
<li>游戏金手指</li>
<li>八门神器(GameKiller):</li>
<li>烧饼修改器:</li>
<li>葫芦侠修改器:</li>
</ul>
<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS:"></a>IOS:</h2><ul>
<li>八门神器(GamePlayer):</li>
<li>烧饼修改器:</li>
</ul>
<p>数值修改器用法大同小异,先打开游戏查看原数值如1200,用修改器搜索该数值1200,返回游戏消费,使数值改变,如花费后数值为1100,再到修改器搜索1100,这样循环就可以定位到数值的内存地址了,然后直接用修改器修改该内存地址的值就可以了.注意的是修改值别超过了游戏中的上限.</p>
]]></content>
      
        <categories>
            
            <category> 教你瞎折腾 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数值修改 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[广告拦截指南]]></title>
      <url>http://www.farwmarth.com/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p><span style="color: #ff0000;"><br>update:2016-09-14 20:13 更新pac,ADfree<br>update:2014-12-04 10:42 更新插件<br></span></p>
<h2 id="一-windows"><a href="#一-windows" class="headerlink" title="一 windows :"></a>一 windows :</h2><h3 id="1-chrome插件"><a href="#1-chrome插件" class="headerlink" title="1. chrome插件:"></a>1. chrome插件:</h3><ul>
<li><a href="http://www.adtchrome.com/" title="http://www.adtchrome.com/" target="_blank" rel="noopener">广告终结者</a> (好像是抄袭的adblock )</li>
<li><a href="https://chrome.google.com/webstore/detail/%E8%A7%86%E9%A2%91%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/jlnekjcjlfbocaonidkndcobheipmmhj?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">视频广告终结者</a></li>
<li><a href="https://adblockplus.org/zh_CN/chrome" title="https://adblockplus.org/zh_CN/chrome" target="_blank" rel="noopener">adblock</a></li>
<li><a href="https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">adblock plus</a></li>
<li><a href="https://chrome.google.com/webstore/detail/iaebjamgfeimndfmoaddgocnhddjhgfd?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">小猪广告杀手</a></li>
<li><a href="https://chrome.google.com/webstore/detail/%E5%B0%8F%E9%BB%84%E7%93%9C%E8%A7%86%E9%A2%91%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/goppkfbpdcohaknmoabhnfclcepcjlda?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">小黄瓜视频广告拦截</a></li>
<li><a href="https://chrome.google.com/webstore/detail/bgnkhhnnamicmpeenaelnjfhikgbkllg?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener"><del>Adguard 广告拦截器</del> </a></li>
<li><a href="https://chrome.google.com/webstore/detail/adfreeplayeronline/gnpjhfjhgfkohgdklomfbjmnchpenngp" target="_blank" rel="noopener">ADfree.Player.Online </a></li>
</ul>
<a id="more"></a>
<h3 id="2-客户端"><a href="#2-客户端" class="headerlink" title="2. 客户端:"></a>2. 客户端:</h3><ul>
<li><a href="http://www.ad-safe.com/?b1" title="http://www.ad-safe.com/?b1" target="_blank" rel="noopener">adsafe</a></li>
<li><a href="http://www.admon.cn/?1shipin" title="http://www.admon.cn/?1shipin" target="_blank" rel="noopener"><del>admon</del></a></li>
<li><a href="http://www.admflt.com/" target="_blank" rel="noopener">阿呆喵</a></li>
<li><a href="http://www.adzhushou.com/" target="_blank" rel="noopener">广告助手</a></li>
<li><a href="http://www.adbyby.com/" target="_blank" rel="noopener">广告屏蔽大师</a></li>
<li><a href="http://www.luyoudashi.com/" target="_blank" rel="noopener">路由优化大师</a></li>
<li><a href="http://www.adbyebye.com/" target="_blank" rel="noopener">广告拜拜</a></li>
<li><a href="http://www.chisstech.com/" target="_blank" rel="noopener">奇式网盾</a></li>
<li><a href="http://www.tianxingad.com/" target="_blank" rel="noopener">天行广告防火墙</a></li>
<li><a href="http://www.jhdashi.com/" target="_blank" rel="noopener"><del>菠萝净化大师</del></a></li>
<li><a href="http://www.vablocker.com/" target="_blank" rel="noopener">vablocker</a></li>
</ul>
<h2 id="二-android"><a href="#二-android" class="headerlink" title="二  android:"></a>二  android:</h2><ul>
<li><a href="https://adblockplus.org/en/android-install" title="https://adblockplus.org/en/android-install" target="_blank" rel="noopener">adblockplus</a></li>
<li><a href="http://www.ad-safe.com/?b1" title="http://www.ad-safe.com/?b1" target="_blank" rel="noopener">adsafe</a></li>
<li><a href="http://www.tianxingad.com/" target="_blank" rel="noopener">天行广告防火墙</a></li>
</ul>
<h2 id="三-ios"><a href="#三-ios" class="headerlink" title="三 ios :"></a>三 ios :</h2><ul>
<li>flex2 (越狱插件)</li>
</ul>
<h2 id="四-pac"><a href="#四-pac" class="headerlink" title="四 pac:"></a>四 pac:</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//ad.farwmarth.com/ad.js</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 教你瞎折腾 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 广告 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[翻墙有术]]></title>
      <url>http://www.farwmarth.com/%E7%BF%BB%E5%A2%99%E6%9C%89%E6%9C%AF/</url>
      <content type="html"><![CDATA[<p><span style="color: #ff0000;"><br>update:2016-09-14 20:13 更新pac<br>update:2014-12-04 10:42<br>update:2014-4-21 17:08 更新chrome插件<br></span></p>
<p>在天朝,难免要翻翻墙，看看墙外的世界.</p>
<p>网盘里上传了墙外需要的一些应用instagram,facebook,twitter,youtube,google+还有一些翻墙道具,国外的不用翻墙的商店,现在大都是android应用 .</p>
<p>百度,115,360,乐视网盘,金山快盘都有敏感字限制,有些应用上传不了,所以找了个无限制的网盘:<a href="https://jianguoyun.com/p/DZwoJSEQ8MfmBRiUpgo" title="https://jianguoyun.com/p/DZwoJSEQ8MfmBRiUpgo" target="_blank" rel="noopener">https://jianguoyun.com/p/DZwoJSEQ8MfmBRiUpgo</a></p>
<a id="more"></a>
<h2 id="翻墙术"><a href="#翻墙术" class="headerlink" title="翻墙术"></a>翻墙术</h2><p><strong>Chrome插件:</strong></p>
<ul>
<li>时空隧道:   <a href="http://www.suidao.in/[" target="_blank" rel="noopener">http://www.suidao.in/[</a><br>](<a href="https://hosts.huhamhire.com/" target="_blank" rel="noopener">https://hosts.huhamhire.com/</a>)</li>
</ul>
<p><strong>Windows</strong></p>
<ul>
<li>HostTool : <a href="https://hosts.huhamhire.com/" target="_blank" rel="noopener">https://hosts.huhamhire.com/</a></li>
<li>自由门 :<a href="http://dongtaiwang.com/loc/download.php" title="http://dongtaiwang.com/loc/download.php" target="_blank" rel="noopener">http://dongtaiwang.com/loc/download.php</a></li>
<li>无界浏览: <a href="http://wujieliulan.com/" title="http://wujieliulan.com/" target="_blank" rel="noopener">http://wujieliulan.com/</a> (<a href="https://s3.amazonaws.com/xiazai/u.zip" title="https://s3.amazonaws.com/xiazai/u.zip" target="_blank" rel="noopener">https://s3.amazonaws.com/xiazai/u.zip</a>)</li>
<li>天行浏览器</li>
<li>GreenVpn : <a href="http://www.greenjsq.info/" title="http://www.greenjsq.info/" target="_blank" rel="noopener">http://www.greenjsq.info/</a></li>
</ul>
<p><strong>Android:</strong></p>
<ul>
<li>ShadowSocks : <a href="https://play.google.com/store/apps/details?id=com.github.shadowsocks" title="https://play.google.com/store/apps/details?id=com.github.shadowsocks" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=com.github.shadowsocks</a></li>
</ul>
<p>教程就不帖了:上张手机的图对应填写就可以了</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2014/12/S41201195807.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/12/S41201195807.jpg" alt="S41201-195807"></a></p>
<ul>
<li>翻墙路由器(Fqrouter2):<a href="https://play.google.com/store/apps/details?id=fq.router2" title="https://play.google.com/store/apps/details?id=fq.router2" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=fq.router2</a></li>
<li>赛风(Psiphon) : <a href="https://play.google.com/store/apps/details?id=com.psiphon3" title="https://play.google.com/store/apps/details?id=com.psiphon3" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=com.psiphon3</a></li>
<li>Zero VPN : <a href="https://play.google.com/store/apps/details?id=net.tntapp.app.zerovpn" title="https://play.google.com/store/apps/details?id=net.tntapp.app.zerovpn" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=net.tntapp.app.zerovpn</a></li>
<li>SpeedVPN : <a href="https://play.google.com/store/apps/details?id=us.gospeed.speedvpn" title="https://play.google.com/store/apps/details?id=us.gospeed.speedvpn" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=us.gospeed.speedvpn</a></li>
<li>Hola: <a href="https://play.google.com/store/apps/details?id=org.hola" title="https://play.google.com/store/apps/details?id=org.hola" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=org.hola</a></li>
<li><del>Hosts同步</del> :  <a href="https://play.google.com/store/apps/details?id=net.wszf.client.synchost" title="https://play.google.com/store/apps/details?id=net.wszf.client.synchost" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=net.wszf.client.synchost</a></li>
<li><del>SmartHosts</del>: <a href="https://play.google.com/store/apps/details?id=mobi.smarthosts" title="https://play.google.com/store/apps/details?id=mobi.smarthosts" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=mobi.smarthosts</a></li>
<li>自由门: <a href="http://dongtaiwang.com/loc/download.php" title="http://dongtaiwang.com/loc/download.php" target="_blank" rel="noopener">http://dongtaiwang.com/loc/download.php</a></li>
<li>无界一点通:<a href="https://s3.amazonaws.com/xiazai/um.apk" title="https://s3.amazonaws.com/xiazai/um.apk" target="_blank" rel="noopener">https://s3.amazonaws.com/xiazai/um.apk</a></li>
</ul>
<h2 id="Google-Play"><a href="#Google-Play" class="headerlink" title="Google Play"></a>Google Play</h2><h6 id="一-电脑下载google-play-android应用"><a href="#一-电脑下载google-play-android应用" class="headerlink" title="一 电脑下载google play android应用"></a>一 电脑下载google play android应用</h6><ul>
<li>hosttool工具使<a href="https://play.google.com/store" title="https://play.google.com/store" target="_blank" rel="noopener">https://play.google.com/store</a>可以访问</li>
<li>搜索要下载的应用:如<a href="https://play.google.com/store/apps/details?id=com.instagram.android" target="_blank" rel="noopener">instagram</a>,url为<a href="https://play.google.com/store/apps/details?id=com.instagram.android" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=com.instagram.android</a> ,id后面为应用的包名</li>
<li>打开<a href="http://apps.evozi.com/apk-downloader/" title="http://apps.evozi.com/apk-downloader/" target="_blank" rel="noopener">http://apps.evozi.com/apk-downloader/</a>网站,将包名或者googleplay上完整的网址输入到搜索框，点击Generate Download Link 按钮，生成链接后点击click here to download xxx now 下载即可.<br>另外一种方式比较麻烦，需要输入gooogle的账户和设备id.详情:<a href="http://www.appinn.com/apk-downloader/" title="http://www.appinn.com/apk-downloader/" target="_blank" rel="noopener">http://www.appinn.com/apk-downloader/</a></li>
</ul>
<p>如果两种方式都觉得麻烦，可以从国外的android应用市场上下载下来,但不能保证应用是最新版本，推荐几个网站:</p>
<ul>
<li><a href="http://www.1mobile.com/" title="http://www.1mobile.com/" target="_blank" rel="noopener">http://www.1mobile.com/</a>  </li>
<li><a href="http://www.hiapphere.org/ , http://www.bestappsmarket.com/" title="http://www.hiapphere.org/" target="_blank" rel="noopener">http://www.hiapphere.org/ , </a></li>
<li><a href="http://www.bestappsmarket.com/" title="http://www.bestappsmarket.com/" target="_blank" rel="noopener">http://www.bestappsmarket.com/</a></li>
</ul>
<h2 id="Instagram"><a href="#Instagram" class="headerlink" title="Instagram"></a><strong>Instagram</strong></h2><ol>
<li>电脑看instagram,无需翻墙<br><a href="http://pinsta.me/" title="http://pinsta.me/" target="_blank" rel="noopener">   http://pinsta.me/</a>  连接你的instagram账号就可以看到你的instagram关注的人了，当然图片也可以下载了</li>
<li>android下载instagram图片<ul>
<li>下载android应用Instadownloader : <a href="http://www.eagleget.com/apps/apk-file/8783/" title="http://www.eagleget.com/apps/apk-file/8783/" target="_blank" rel="noopener">http://www.eagleget.com/apps/apk-file/8783/</a>,注意在googleplay上的这个应用已经下架了。也可以在豌豆荚上下载.</li>
<li>在instagram打开一张图片,拖动到右下角有个<code>…</code>的按钮，点击复制共享链接.</li>
<li>打开Instadownloader,粘贴复制的链接，下载.</li>
</ul>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 教你瞎折腾 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 翻墙 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu 终端终结者]]></title>
      <url>http://www.farwmarth.com/%20ubuntu%20%E7%BB%88%E7%AB%AF%E7%BB%88%E7%BB%93%E8%80%85/</url>
      <content type="html"><![CDATA[<p>在linux中经常要在多个终端界面间切换，于是就找了下终端管理的方法。</p>
<h2 id="一-screen命令"><a href="#一-screen命令" class="headerlink" title="一 screen命令"></a><strong>一 screen命令</strong></h2><p>screen命令是ubuntu自带的.查看screen是否安装可以用如下命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@tivf06 ~]# rpm -qa|grep screen</span><br><span class="line">xscreensaver-4.18-5.rhel4.11</span><br><span class="line">**screen-4.0.2-5**</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>查看screen用法可以用:man screen<br>screen命令可以新建一个会话，在会话中又可以建立多个窗口，多个窗口中用快捷键切换.<br>下面是screen的基础用法</p>
<ul>
<li>screen : 新建会话</li>
<li>screen –S [会话名] :给会话取名字，这个名字在 screen –x 恢复会话时可用.</li>
<li>screen –ls : 列出所有的会话列表</li>
<li>screen –r [会话id] : 以id恢复会话,会话id在 -ls中可以查看到</li>
<li>screen –x [会话名或索引值]:以名字和索引恢复会话.</li>
<li>screen –d [会话名] :中断会话.中断会话还可以这样:在会话中按ctrl+a,d可以中断会话，用screen –r 或-x来恢复</li>
</ul>
<p>在会话模式下的基础操作.</p>
<ul>
<li><code>ctrl+a,c</code>: 开启一个新的窗口</li>
<li><code>ctrl+a,n</code> :切换到下一个窗口</li>
<li><code>ctrl+a,p</code>: 切换到前一个窗口</li>
<li><code>ctrl+a,0..9</code>:数字键切换窗口</li>
<li><code>ctrl+a,space</code> :顺序循环切换窗口</li>
<li><code>ctrl+a,ctrl+a</code>:在最近使用的两个窗口中切换</li>
<li><code>ctrl+a,[</code>:回滚,可滑动模式<br>+<code>ctrl+a,A</code> :可窗口改名</li>
<li><code>ctrl+a,w</code>: 显示所有窗口<br>+<code>ctrl+a,k</code>:关闭当前窗口，如果只有一个窗口会中止当前会话</li>
</ul>
<p>screen除了管理多终端外，还有一个功能就是ssh退出后能保持程序继续运行。替代<code>nohup</code>命令.</p>
<h2 id="二-Terminator"><a href="#二-Terminator" class="headerlink" title="二 Terminator"></a><strong>二 Terminator</strong></h2><p><code>terminator</code>不是基于会话模式的，它只是终端的增强版本，将多个终端平铺在一个界面中。可以自由地增加终端窗口.安装很简单，直接:<code>sudo apt-get install terminator</code>就可以了。</p>
<ul>
<li><code>Ctrl+Shift+O</code>: 上下开新窗口</li>
<li><code>Ctrl+Shift+E</code>： 左右开新窗口</li>
<li><code>Ctrl+Shift+Right,Left,Up,Down</code>:扩展窗口</li>
<li><code>Ctrl+Shift+S</code>：隐藏滚动条</li>
<li><code>Ctrl+Shift+F</code>：查找</li>
<li><code>Ctrl+Shift+P or Ctrl+Shift+N</code>: 按序号切换窗口</li>
<li><code>Alt+Right,Left,Up,Down</code>: 按方向 切换窗口</li>
<li><code>Ctrl+Shift+C</code> :复制选中文字</li>
<li><code>Ctrl+Shift+V</code>:粘贴</li>
<li><code>Ctrl+Shift+W</code>:关闭当前窗口</li>
<li><code>Ctrl+Shift+Q</code>:退出</li>
<li><code>Ctrl+Shift+X</code> 最大化当前窗口</li>
<li><code>Ctrl+Shift+T</code>:新建标签页</li>
</ul>
<h3 id="设置启动后切换到默认路径"><a href="#设置启动后切换到默认路径" class="headerlink" title="设置启动后切换到默认路径"></a>设置启动后切换到默认路径</h3><p><img src="http://farwmarth.bestnewbee.com/images/terminator.png" alt="terminator"></p>
]]></content>
      
        <categories>
            
            <category> ubuntu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 终端 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[游戏SDK接入的一些总结]]></title>
      <url>http://www.farwmarth.com/%E6%B8%B8%E6%88%8FSDK%E6%8E%A5%E5%85%A5%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<font color="red"> update: 2016-04-23     ysdk  </font>

<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>首先来澄清两个概念:</p>
<ul>
<li><strong>CP</strong>:Content Provider,中文翻译为内容提供商。通常指制作厂商</li>
<li><strong>游戏sdk</strong>: SDK是手游渠道提供的、集成了用户登录、充值通道、社区功能、社交分享功能、数据后台统计功能的一个功能模块</li>
</ul>
<a id="more"></a>
<p>游戏SDK作为游戏制作方来说是一个很蛋疼的过程，因为接入的流程过于冗长,首先商务要出去抱渠道大腿,叫大爷多导点量,洽谈完毕后给一个可游戏的游戏版本给渠道方去测评分级,如果评分级别太低的话,你的游戏就over了,评级如果是A及A以上的话渠道就会乐呵呵地给你的产品分配资源.分配标识key,文档,sdk,接着就是商务通知运营建立讨论组，把双方的技术运营拉进来开始接入,接入完成后让运营在渠道后台上传包，渠道QA测试完成如果没问题就给予上线，如果不符合标准就是返工改bug然后继续上传审核的过程。</p>
<p>SDK接入另一个开销成本就是接入的渠道数量众多，SDK的繁杂程度和文档完美度也参数不齐，有的渠道一天就可以接完调试。有的渠道有花上两三天。所以在刚开始要接大量渠道时也去找过第三方的接入服务.</p>
<ul>
<li>anysdk(<a href="http://www.anysdk.com/" title="http://www.anysdk.com/" target="_blank" rel="noopener">http://www.anysdk.com/</a>): 触控旗下的SDK接入服务</li>
<li>棱镜(<a href="http://www.ljsdk.com/" title="http://www.ljsdk.com/" target="_blank" rel="noopener">http://www.ljsdk.com/</a>):一家从发行转型做第三方SDK接入的平台</li>
<li>云接入(<a href="http://www.allsdk.com/" title="http://www.allsdk.com/" target="_blank" rel="noopener">http://www.allsdk.com/</a>) :斯凯投资的云接入</li>
<li><p>易接入(<a href="http://www.1sdk.cn/" title="http://www.1sdk.cn/" target="_blank" rel="noopener">http://www.1sdk.cn/</a>) :雪鲤鱼科技</p>
<p>这几家第三方的服务共同特点是统一了各渠道的服务接口，但是cp的游戏数据都会记录在第三方服务商的数据库中。这点对于游戏厂商来说是很第敏感的一点，还有一点就是如果采用第三方接入就会依赖于他们的服务，如果第三方接入服务崩溃的话会导致游戏厂商的游戏不能正常运行。这是很大的安全隐患。</p>
<p>我们游戏总共接入了18个渠道，android上14个，ios上4个。各个渠道通用的接入功能是登录和充值。还有几个渠道需要接入游戏数据提交功能(登录时候将游戏角色,等级，余额，所在区，所在服数据提交到渠道接口).</p>
</li>
</ul>
<h2 id="一般流程"><a href="#一般流程" class="headerlink" title="一般流程"></a>一般流程</h2><h3 id="登录流程"><a href="#登录流程" class="headerlink" title="登录流程"></a>登录流程</h3><p><a href="http://farwmarth.bestnewbee.com/images/uploads/2014/10/2cbebc690d07.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/thumb.jpg" alt="游戏客户端登录" title="游戏客户端登录"></a></p>
<h3 id="支付流程"><a href="#支付流程" class="headerlink" title="支付流程"></a>支付流程</h3><p> <a href="http://farwmarth.bestnewbee.com/images/uploads/2014/10/166491a2b95a.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/thumb1.jpg" alt="游戏客户端充值" title="游戏客户端充值"></a></p>
<p>sdk接入主要工作分为两部分</p>
<ul>
<li>在游戏客户端的sdk接入代码<br>游戏客户端启动基本过程为:<code>显示logo画面--&gt;初始化SDK----&gt;检测游戏更新---&gt;显示SDK登录界面----&gt;选服</code>.</li>
<li>应用服务器的校验过程</li>
</ul>
<h2 id="ysdk"><a href="#ysdk" class="headerlink" title="ysdk"></a>ysdk</h2><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>接入sdk容易出现的问题:</p>
<ul>
<li>svn默认不上传so文件，银联支付需要so打包时候导致无法正常银联支付.</li>
<li>android上登录或者注册过程中按退出键关闭了页面未重新打开</li>
<li>打开sdk页面时游戏黑屏</li>
<li>游戏退出时没有调用注销接口</li>
<li>未接入退出游戏，个人中心，浮标</li>
<li>角标和logo不符合规则或者带有外链</li>
<li>充值后没有立即到账</li>
</ul>
]]></content>
      
        <categories>
            
            <category> cocos2d-x </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SDK </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[代码加密,渠道打包过程]]></title>
      <url>http://www.farwmarth.com/%E4%BB%A3%E7%A0%81%E5%8A%A0%E5%AF%86,%E6%B8%A0%E9%81%93%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>前段时间就计划着把项目里用到的一些通用的东西整理出来，正好最近项目不是太忙，就整理一下。</p>
<a id="more"></a>
<h2 id="lua代码加密"><a href="#lua代码加密" class="headerlink" title="lua代码加密"></a><strong>lua代码加密</strong></h2><p>  我们的项目是基于cocos2dx 2.2.2 用lua开发,支持luajit,所以lua代码加密就把quick-cocos2dx的代码加密直接迁移过来(实际上就是用luajit把lua源码编译成预字节码)</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-10-下午2.37.426.png" alt=""></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-10-下午2.38.37-34.png" alt=""><br>调用compile_script.sh 参数说明:</p>
<p>-i 在加密的lua源码目录<br>-o 加密后的压缩包<br>-x 排除的lua文件用逗号隔开.</p>
<p>c++端的解析流程和quick大同小异:解析zip压缩包,用pakcage.preload通过lua_loadbuffer来不原。唯一有点不一样的地方是.多级目录时luajit会以点号分隔,但是我们的项目做了一段时间才做加密，所以在不不改变require的引用 语法前提下，稍微修改了一下还原步骤,将’.’还原成’/‘</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-10-下午5.30.164.png" alt=""></p>
<h2 id="渠道打包"><a href="#渠道打包" class="headerlink" title="渠道打包"></a><strong>渠道打包</strong></h2><p>需要跨平台我选择了python作为脚本。打包流程基本流程为:</p>
<ul>
<li>加密lua代码</li>
<li>android平台编译so,或者从svn获取最新的so</li>
<li>Android平台拷贝资源到assets,iOS平台拷贝到编译目录</li>
<li>android平台上调用ant更改版本号编译项目,ios上用PlistBuddy更改版本号,用xctool命令行编译项目</li>
</ul>
<p>项目目录结构</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-2014-10-10_21-08-421.png" width="350" height="1000"></p>
<p>每个渠道一个目录,Classes目录为公共c++代码,各平台共用.proj.android.base目录为android的基础类库依赖libcocos2dx的java工程,基础类库给各android渠道项目共用,proj.ios.common为oc公共代码给iOS各渠道项目共用。</p>
<p><strong>android平台的编译和打包解析</strong></p>
<p><strong>     基础类库mk配置</strong></p>
<p>为了共用代码将so编译放在基础类库proj.android.base中.mk配置如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LOCAL_PATH := $(call my-dir)</span><br><span class="line"><span class="meta">include$</span>(CLEAR_VARS)</span><br><span class="line">LOCAL_MODULE := cocos2dlua_shared</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2dlua</span><br><span class="line"><span class="meta">#</span> 配置自己的源文件目录和源文件后缀名</span><br><span class="line">MY_FILES_PATH  :=  $(LOCAL_PATH) \</span><br><span class="line">                   $(LOCAL_PATH)/../../Classes  \</span><br><span class="line">MY_FILES_SUFFIX := %.cpp %.c</span><br><span class="line"><span class="meta">#</span> 递归遍历目录下的所有的文件</span><br><span class="line">rwildcard=$(wildcard $1$2)$(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))</span><br><span class="line"><span class="meta">#</span> 获取相应的源文件</span><br><span class="line">MY_ALL_FILES := $(foreach src_path,$(MY_FILES_PATH), $(call rwildcard,$(src_path),*.*) ) </span><br><span class="line">MY_ALL_FILES := $(MY_ALL_FILES:$(MY_CPP_PATH)/./%=$(MY_CPP_PATH)%)</span><br><span class="line">MY_SRC_LIST  := $(filter $(MY_FILES_SUFFIX),$(MY_ALL_FILES)) </span><br><span class="line">MY_SRC_LIST  := $(MY_SRC_LIST:$(LOCAL_PATH)/%=%)</span><br><span class="line"><span class="meta">#</span> 去除字串的重复单词</span><br><span class="line">define uniq =</span><br><span class="line"><span class="meta">  $</span>(eval seen :=)</span><br><span class="line"><span class="meta">  $</span>(foreach _,$1,$(if $(filter $_,$&#123;seen&#125;),,$(eval seen += $_)))</span><br><span class="line"><span class="meta">  $</span>&#123;seen&#125;</span><br><span class="line">endef</span><br><span class="line"><span class="meta">#</span> 递归遍历获取所有目录</span><br><span class="line">MY_ALL_DIRS := $(dir $(foreach src_path,$(MY_FILES_PATH), $(call rwildcard,$(src_path),*/) ) )</span><br><span class="line">MY_ALL_DIRS := $(call uniq,$(MY_ALL_DIRS))</span><br><span class="line"><span class="meta">#</span> 赋值给NDK编译系统</span><br><span class="line">LOCAL_SRC_FILES  := $(MY_SRC_LIST)</span><br><span class="line">LOCAL_C_INCLUDES := $(MY_ALL_DIRS)</span><br><span class="line"><span class="meta">#</span>$(warning $(LOCAL_SRC_FILES))</span><br><span class="line">LOCAL_STATIC_LIBRARIES := curl_static_prebuilt</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES := cocos2dx_static</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES += cocosdenshion_static</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES += cocos_lua_static</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES += box2d_static</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES += chipmunk_static</span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES += cocos_extension_static</span><br><span class="line"><span class="meta">include$</span>(BUILD_SHARED_LIBRARY)</span><br><span class="line"><span class="meta">$</span>(call import-module,cocos2dx)</span><br><span class="line"><span class="meta">$</span>(call import-module,CocosDenshion/android)</span><br><span class="line"><span class="meta">$</span>(call import-module,scripting/lua/proj.android)</span><br><span class="line"><span class="meta">$</span>(call import-module,cocos2dx/platform/third_party/android/prebuilt/libcurl)</span><br><span class="line"><span class="meta">$</span>(call import-module,extensions)</span><br><span class="line"><span class="meta">$</span>(call import-module,external/Box2D)</span><br><span class="line"><span class="meta">$</span>(call import-module,external/chipmunk)</span><br></pre></td></tr></table></figure>
<p>上面的配置会遍历项目jni目录和项目上级的classes目录达到自动添加cpp和.h的目的,这样不要频繁去理发mk文件了。</p>
<p><strong>    android项目的编译过程</strong></p>
<pre><code>![15205029 814db23b81404db1bffc9ffb0da5f270](http://farwmarth.bestnewbee.com/images/uploads/2014/10/15205029-814db23b81404db1bffc9ffb0da5f270.png &quot;15205029-814db23b81404db1bffc9ffb0da5f270.png&quot;)
</code></pre><ul>
<li>首先.aidl(Android Interface Description Language)文件需要通过aidl工具转换成编译器能处理的Java接口文件</li>
<li>同时资源文件将被aapt (Asset Packaging Tool)处理为最终的resources.arsc，并生成R.java文件以使源码可以方便地访问到这些资源</li>
<li>Java的编译器将R.java, Java源码以及上述生成的接口文件统一编译成.class文件</li>
<li>不过.class并不是Android系统所能识别的格式，因而还要利用dex工具转化为Dalvik字节码。这其中还会加入所有需要的第三方库等文件</li>
<li>接下来系统将上面生成的dex，资源包，以及其它资源通过apkbuilder生成初始的apk文件包。这时还没有签名和优化</li>
<li>签名可以用Jarsigner，也可以用其它类似的工具。如果是在Debug模式下，所签名所用的keystore就是系统默认自带的，否则开发者需要提供自己的私钥以完成签名过程</li>
<li><p>最后一步，将上述签名后的apk通过zipalign进行优化，以提高加载和运行速度。大概原理是通过对其中包含的相关数据进行边界对齐，来加快读取和处理。这也同时解释了其名称”zip”+”align”的由来</p>
<p>  好在android sdk tools中已经将ant编译脚本写好了，只要直接调用就可以了。</p>
</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/屏幕快照-2014-10-13-下午1.28.07.png" alt="屏幕快照 2014 10 13 下午1 28 07" title="屏幕快照 2014-10-13 下午1.28.07.png"></p>
<pre><code>项目中build.xml内容,这里只定义了一个target，在编译完成后在手机上自动运行一个app，此build.xml在能用的python脚本里会调用
</code></pre><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;?xmlversion="1.0"encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">"sanguo"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">default</span>=<span class="string">"sanguoBuildAll"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">propertyfile="ant.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loadpropertiessrcFile="project.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">targetname="apkBuildBefore"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">echomessage="apk</span> <span class="attr">build</span> <span class="attr">before</span> <span class="attr">....</span>"/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">targetname="runApp"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec</span></span></span><br><span class="line"><span class="tag"><span class="attr">executable</span>=<span class="string">"adb"</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">argline="shell</span> <span class="attr">am</span> <span class="attr">start</span> <span class="attr">-n</span> <span class="attr">com.sanguo.game.uc</span>/<span class="attr">com.sanguo.game.uc.sanguo</span>"/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exec</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">propertyname="common.buildxml"location="..</span>/<span class="attr">tools</span>/<span class="attr">build</span>/<span class="attr">build_common_android.xml</span>"/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入共用build--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">importfile="$&#123;common.buildxml&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>tools目录中公用的build_common_android.xml内容,些ant主要任务是替换版本号(用到了xmltask库),编译android项目并运行.<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;?xmlversion="1.0"encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">projectname="commonBuild"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taskdefname="xmltask"classname="com.oopsconsultancy.xmltask.ant.XmlTask"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">propertyenvironment="env"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name="project.versionname" value="1" /&gt;</span></span><br><span class="line"><span class="comment">&lt;property name="project.versioncode" value="1" /&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">propertyname="manifest.file"location="$&#123;basedir&#125;</span>/<span class="attr">AndroidManifest.xml</span>"/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echomessage="build</span> <span class="attr">project</span> <span class="attr">path</span> <span class="attr">is</span> <span class="attr">:</span> $&#123;<span class="attr">basedir</span>&#125;"/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echomessage="AndroidManifest.xml</span> <span class="attr">path</span> <span class="attr">is</span> <span class="attr">:</span> $&#123;<span class="attr">manifest.file</span>&#125;"/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">condition</span></span></span><br><span class="line"><span class="tag"><span class="attr">property</span>=<span class="string">"sdk.dir"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">"$&#123;env.ANDROID_HOME&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">issetproperty="env.ANDROID_HOME"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fail</span></span></span><br><span class="line"><span class="tag">        <span class="attr">message</span>=<span class="string">"sdk.dir missing, please config  ANDROID_HOME environment variable."</span></span></span><br><span class="line"><span class="tag"><span class="attr">unless</span>=<span class="string">"sdk.dir"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--完整编译--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"sanguoBuildAll"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">depends</span>=<span class="string">"sanguoBuildNotInstall,intallSanguo"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">description</span>=<span class="string">"install sanguo application"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--完整编译但是不安装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"sanguoBuildNotInstall"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">depends</span>=<span class="string">"replace_manifest,apkBuildBefore,clean,release"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">description</span>=<span class="string">"install sanguo application"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--安装并运行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"intallSanguo"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">depends</span>=<span class="string">"installr,runApp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">description</span>=<span class="string">"install sanguo application"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--替换版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">targetname="replace_manifest_check"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">conditionproperty="has.version"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">issetproperty="project.versionname"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">targetname="replace_manifest"if="has.version"depends="replace_manifest_check"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xmltasksource="$&#123;manifest.file&#125;"dest="$&#123;manifest.file&#125;"encoding="utf-8"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">attrpath="</span>//<span class="attr">manifest</span>"<span class="attr">attr</span>=<span class="string">"android:versionName"</span><span class="attr">value</span>=<span class="string">"$&#123;project.versionname&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">attrpath="</span>//<span class="attr">manifest</span>"<span class="attr">attr</span>=<span class="string">"android:versionCode"</span><span class="attr">value</span>=<span class="string">"$&#123;project.versioncode&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xmltask</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">echomessage="new</span> <span class="attr">version</span> <span class="attr">is:</span> $&#123;<span class="attr">project.versionname</span>&#125; , $&#123;<span class="attr">project.versioncode</span>&#125;"/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">echomessage="replace_manifest</span> <span class="attr">version</span> <span class="attr">code</span> <span class="attr">success</span> <span class="attr">....</span>"/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">importfile="$&#123;sdk.dir&#125;</span>/<span class="attr">tools</span>/<span class="attr">ant</span>/<span class="attr">build.xml</span>"/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>IOS项目的编译过程</strong></p>
<p><strong>xcode打包过程</strong></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/xcodebuild2.jpg" alt="Xcodebuild" title="xcodebuild.jpg"></p>
<ul>
<li><p>编译源文件（Compile Sources）连接二进制文件和库（Link Binary With Libraries）<br>这个阶段编译所有的源文件；默认情况下，项目中添加任何一个源文件，也将添加到编译列表中。<br>Compile Sources 构建阶段分为两步：预处理（Preprocessing）和编译（Compiling）。<br><code>预处理（Preprocessing）</code><br>的目标是为每一个实现文件（.m）创建中间文件（intermediate file）。中间文件仍然类似实现文件的Objective-C代码，但是中间文件会变得非常大。<br>在创建中间文件时，预处理器负责处理实现文件（.m）中所有的预处理指令（preprocessor directives）。预处理指令是所有以 # 开头的语句，如 #import。#import 语句将替换为实际引用文件的内容。<br>例如，一个实现文件 .m 引用了.h 头文件；为 .m 创建的中间文件将包含 .h和 .m文件。还不止这些，并且 .h 头文件引用了其他 2 个文件 UIKit.h和CoreLocation.h，还有可能这 2 个文件引用了其他的头文件 .h，这些头文件将全部包含在该实现文件.m    创建的中间文件中（intermediate file）。<br><code>编译（Compiling）</code><br>一旦预编译（Preprocessor）完成之后，接着编译生成的中间文件（intermediate files），编译中间文件 – Objective-C 代码，生成机器码（machine code）。机器码存放在对象文件（object file）中，一个中间文件对应一个对象文件。<br>编译阶段，也就是将Objective代码文件转为机器码，将检测多数编译错误。当编译器不理解我们编写的代码时，将报错。我们称之为编译错误或语法错误。<br><code>连接（Linking）</code><br>编译生成的对象文件（object file）包含了实现文件（implementation file）的机器码。在一个实现文件中，可以调用其他实现文件的方法。此时，并不会将其他实现文件的代码复制到本实现文件中，而是连接其他实现文件。连接二进制文件和库（Link Binary With Libraries）就是负责此项任务，我们简称连接阶段（linking phase）。</p>
</li>
<li><p>复制绑定资源（Copy Bundle Resources）<br>在源文件编译和连接库之后，创建一个可执行文件，并放置在应用程序的绑定中，其实就是一个文件夹。<br>其中资源文件将和可执行文件一起添加到绑定（bundle）中。这些资源文件是数据文件，应用程序在运行时需要使用，如XIB 文件和图像文件、声音文件等等。<br>默认情况下，添加到项目中的文件，如不是源代码文件，将添加到这个构建阶段（Build Phase）。<br>如果图片资源是PNG格式，那么不仅仅对其进行拷贝，还会做一些优化(如果build settings中的PNG优化是打开的)</p>
</li>
<li><p>运行指定脚本<br>如果在build phases 下指定了run Script,在这里会运行脚本。<br>我在项目中的脚本内容如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">_TARGET_BUILD_CONTENTS_PATH=$TARGET_BUILD_DIR/$CONTENTS_FOLDER_PATH</span><br><span class="line">echo Target Path: $_TARGET_BUILD_CONTENTS_PATH</span><br><span class="line">BUILD_PATH=$&#123;PWD&#125;/../tools/build/build_native.py</span><br><span class="line">python $BUILD_PATH -c 2  -w 0 -o $_TARGET_BUILD_CONTENTS_PATH</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包签名<br>调用command tools打包签名</p>
</li>
</ul>
<p><strong>脚本打包</strong></p>
<p>脚本打包一般采用xcodebuild和xcrun.</p>
<p>这里在github中有一个用它打包的shell库,包括了打包上传邮件通知，功能比较完整(<a href="https://github.com/webfrogs/xcode_shell" target="_blank" rel="noopener">https://github.com/webfrogs/xcode_shell</a>)</p>
<p>xcodebuild这种打包方式缺点是编译过程中输出太不人性化，难以查看，所以我找了facebook开源的的一个打包的库xctool.</p>
<p>打包脚本build_ipa_all.sh如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"><span class="meta">#</span>--------------------------------------------</span><br><span class="line"><span class="meta">#</span> 功能：编译xcode项目并打ipa包</span><br><span class="line"><span class="meta">#</span> 使用说明：</span><br><span class="line"><span class="meta">#</span> 编译workspace</span><br><span class="line"><span class="meta">#</span>build_ipa_all   proj.ios#sanguo:proj.ios.pp#sanguopp:proj.ios_91#sangup91  140902</span><br><span class="line"><span class="meta">#</span> 作者：farwmarth</span><br><span class="line"><span class="meta">#</span> E-mail:[wujiyu115@gmail.com](mailto:wujiyu115@gmail.com)</span><br><span class="line"><span class="meta">#</span> 创建日期：2014-09-23 15:17:19</span><br><span class="line"><span class="meta">#</span>--------------------------------------------</span><br><span class="line"><span class="meta">#</span>build前清除之前的目录</span><br><span class="line">clean_app_build_dic=true</span><br><span class="line"><span class="meta">#</span>是否只通过*.app来生成ipa</span><br><span class="line">only_packge_ipa=false</span><br><span class="line"><span class="meta">#</span>#############配置工程目录和scheme名称,scheme名称要和xcodeproj一致,用空格隔开#############</span><br><span class="line"><span class="meta">#</span>要打包的项目</span><br><span class="line">project_config=$1</span><br><span class="line"><span class="meta">#</span>新版本</span><br><span class="line">new_version_code=$2</span><br><span class="line"><span class="meta">#</span>去空格</span><br><span class="line">new_version_code=$(echo $new_version_code)</span><br><span class="line">if  [[ ! $new_version_code =~ ^[0-9]+$ ]] || [ $&#123;#new_version_code&#125; -ne 6 ]  ; then</span><br><span class="line">echo new_version_code is not number or the length is not six</span><br><span class="line">exit2</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span>###############################</span><br><span class="line">str_dic=""</span><br><span class="line">str_scheme=""</span><br><span class="line">for item in $(echo $project_config | tr ":" "\n")</span><br><span class="line">do</span><br><span class="line">  count=1</span><br><span class="line">for config in $(echo $item | tr "#" "\n")</span><br><span class="line">do</span><br><span class="line"><span class="meta">#</span> echo $count</span><br><span class="line">if [ $count = 1 ];then</span><br><span class="line">str_dic=$str_dic" "$config</span><br><span class="line">fi</span><br><span class="line">if [ $count = 2 ] ;then</span><br><span class="line">str_scheme=$str_scheme" "$config</span><br><span class="line">fi</span><br><span class="line">let "count++"</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">echo $str_dic</span><br><span class="line">echo $str_scheme</span><br><span class="line">dicArray=($str_dic)</span><br><span class="line">schemeArray=($str_scheme)</span><br><span class="line"><span class="meta">#</span> exit 0</span><br><span class="line"><span class="meta">#</span>############安装brew 和xctool#############</span><br><span class="line">if which brew 2&amp;gt;/dev/null; then</span><br><span class="line">  echo "brew exists!"</span><br><span class="line">else</span><br><span class="line">  echo "nope, no brew installed, begin install"</span><br><span class="line">  curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</span><br><span class="line">fi</span><br><span class="line">if which xctool&amp;gt;/dev/null; then</span><br><span class="line">  echo "xctool exists!"</span><br><span class="line">else</span><br><span class="line">  echo "nope, no xctool installed, begin install"</span><br><span class="line">  sudo brew update</span><br><span class="line">  sudo brew install xctool</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span> xctool -scheme sanguopp -reporter plain:log.txt  archive  -archivePath ./xctoolBuild</span><br><span class="line"><span class="meta">#</span>############批量打包应用#############</span><br><span class="line">dic_count=$&#123;#dicArray[@]&#125;</span><br><span class="line">scheme_count=$&#123;#schemeArray[@]&#125;</span><br><span class="line">if [ dic_count!=0 ] &amp;amp;&amp;amp; [ $dic_count != $scheme_count ] ; then</span><br><span class="line">echo "dic count not equesl scheme count!"</span><br><span class="line">exit2</span><br><span class="line">fi</span><br><span class="line">build_path=$(pwd)</span><br><span class="line">ios_build_path=$build_path/releaseIpas</span><br><span class="line">ios_ipa_build_path=$build_path/releaseIpas/ipabuild</span><br><span class="line">if [ $clean_app_build_dic  ] &amp;amp;&amp;amp; [ -d $ios_build_path ]; then</span><br><span class="line">rm -rf $ios_build_path</span><br><span class="line">fi</span><br><span class="line">if [ ! -d $ios_ipa_build_path ] ; then</span><br><span class="line">mkdir -p $ios_ipa_build_path</span><br><span class="line">fi</span><br><span class="line">function replace_info_list()&#123;</span><br><span class="line">app_infoplist_path=$1</span><br><span class="line">schemeName=$2</span><br><span class="line"><span class="meta">#</span>取版本号</span><br><span class="line">bundleShortVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleShortVersionString" $&#123;app_infoplist_path&#125;)</span><br><span class="line"><span class="meta">#</span>取build值</span><br><span class="line">bundleVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleVersion" $&#123;app_infoplist_path&#125;)</span><br><span class="line">hasPoint=false</span><br><span class="line">temp_version_code=$new_version_code</span><br><span class="line">if [[ $bundleShortVersion =~ "." ]];then</span><br><span class="line">    hasPoint=true</span><br><span class="line">else</span><br><span class="line">hasPoint=false</span><br><span class="line">fi</span><br><span class="line">if [ "$hasPoint" == true ]; then</span><br><span class="line">temp_version_code=$(echo  $temp_version_code|awk  'BEGIN&#123;FS=""&#125;&#123;print $1$2"."$3$4"."$5$6&#125;')</span><br><span class="line">fi</span><br><span class="line">echo $schemeName old CFBundleShortVersionString,CFBundleVersion is: $bundleShortVersion , $bundleVersion</span><br><span class="line">echo $schemeName ipa new_version_code is: $temp_version_code</span><br><span class="line">    /usr/libexec/Plistbuddy -c "Set CFBundleVersion $temp_version_code""$&#123;app_infoplist_path&#125;"</span><br><span class="line">    /usr/libexec/Plistbuddy -c "Set CFBundleShortVersionString $temp_version_code""$&#123;app_infoplist_path&#125;"</span><br><span class="line">&#125;</span><br><span class="line">function build_release()&#123;</span><br><span class="line">schemeName=$2</span><br><span class="line">project_path=$1/$scheme".xcodeproj"</span><br><span class="line"><span class="meta">#</span>app文件中Info.plist文件路径</span><br><span class="line">app_infoplist_path=$1/Info.plist</span><br><span class="line"><span class="meta">#</span>ipa名称</span><br><span class="line">ipa_name=$schemeName"_"$(date +"%Y%m%d")</span><br><span class="line"><span class="meta">#</span>scheme路径</span><br><span class="line">target_ios_build_path=$ios_build_path/$schemeName</span><br><span class="line"><span class="meta">#</span>生成.app的路径</span><br><span class="line">target_ios_app_path=$target_ios_build_path".xcarchive/Products/Applications/*.app"</span><br><span class="line"><span class="meta">#</span>发布的ipa路径</span><br><span class="line">ipa_publish_path=$ios_ipa_build_path/$&#123;ipa_name&#125;.ipa</span><br><span class="line">replace_info_list $app_infoplist_path $schemeName</span><br><span class="line">if [  "$only_packge_ipa" == false ] ; then</span><br><span class="line">echo  xctool build begin...</span><br><span class="line">xctool -project $project_path -scheme $schemeName clean</span><br><span class="line">xctool -project $project_path -scheme $schemeName archive  -archivePath $target_ios_build_path</span><br><span class="line">fi</span><br><span class="line">if [ -d $target_ios_app_path ] ; then</span><br><span class="line">xcrun -sdk iphoneos PackageApplication -v $target_ios_app_path -o  $ipa_publish_path</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">for (( i=0;i&amp;lt;$dic_count;i=i+1))</span><br><span class="line">do</span><br><span class="line">dic=$&#123;dicArray[$i]&#125;</span><br><span class="line">scheme=$&#123;schemeArray[$i]&#125;</span><br><span class="line">p_path=../../$dic</span><br><span class="line">if [ -d $p_path ] ; then</span><br><span class="line">build_release $p_path $scheme</span><br><span class="line">else</span><br><span class="line">echo "this project is not exists :"$p_path</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>脚本使用方法 build_ipa_all   proj.ios#sanguo:proj.ios.pp#sanguopp:proj.ios_91#sangup91  140902<br>第一个参数:工程目录名#要编译的scheme名:工程目录名#要编译的scheme名<br>第二个参数:新版本名<br>如果没有xctool，脚本会自动安装,然后调用PlistBuddy替换版本号，然后调用xctool打包。<br>编译所有ios项目的脚本build_ipa_all.sh:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"> #</span>!/bin/bash</span><br><span class="line">newVersion=140902</span><br><span class="line">allproj='proj.ios#sanguo:proj.ios.pp#sanguopp:proj.ios_91#sanguo91:proj.ios_xy#sanguoXY'</span><br><span class="line">python build_native.py -c 2  -w 0</span><br><span class="line">. ./build_common_ipa.sh $allproj $newVersion</span><br></pre></td></tr></table></figure>
<p>最后来看下android和iOS公用的python脚本build_native.py: </p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># build_native.py</span></span><br><span class="line"><span class="comment"># Build native codes</span></span><br><span class="line"><span class="comment">#--------------------------------------------</span></span><br><span class="line"><span class="comment"># 功能：加密处理资源</span></span><br><span class="line"><span class="comment"># 使用说明：</span></span><br><span class="line"><span class="comment">#   '-c', '--compiler_platform', dest='compiler_platform', help='编译android用1,编译ipa用2')</span></span><br><span class="line"><span class="comment">#   '-p', '--projects_path', dest='projects_path', help='项目目录名,如proj.android,编译ipa单个项目时可不指定,为空值时不调用xctool脚本打包')</span></span><br><span class="line"><span class="comment">#   '-w', '--with_lua_code', dest='with_lua_code', help='1为带源lua源码,0为加密lua代码')</span></span><br><span class="line"><span class="comment">#   '-t', '--ant_target', dest='ant_target', help='编译android时 为"None"值:不调用build.xml,为空值时调用默认的target,有值时调用对应的ant target')</span></span><br><span class="line"><span class="comment">#   '-s', '--compiler_cplus', dest='compiler_cplus', help='调用ndk编译c++代码，编译ipa时无用')</span></span><br><span class="line"><span class="comment">#   '-v', '--version_code', dest='version_code', help='新的版本号')</span></span><br><span class="line"><span class="comment">#   '-o', '--output_path', dest='output_path', help='资源加密后输出目录,可选')</span></span><br><span class="line"><span class="comment"># 作者：farwmarth</span></span><br><span class="line"><span class="comment"># E-mail:[wujiyu115@gmail.com](mailto:wujiyu115@gmail.com)</span></span><br><span class="line"><span class="comment"># 创建日期：2014-09-23 15:17:19</span></span><br><span class="line"><span class="comment">#--------------------------------------------</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os, os.path, stat, shutil</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line">PLATFORM_ANDROID = <span class="string">"1"</span></span><br><span class="line">PLATFORM_IOS = <span class="string">"2"</span></span><br><span class="line">SO_PATH=<span class="string">"/libs/armeabi/libcocos2dlua.so"</span></span><br><span class="line">ANDROID_PROJ_BASE=<span class="string">"proj.android.base"</span></span><br><span class="line">PROJ_SO_BASE=ANDROID_PROJ_BASE+SO_PATH</span><br><span class="line">CURR_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">releaseApksFile = os.path.abspath(CURR_DIR+<span class="string">"/releaseApks/"</span>)</span><br><span class="line">ANT_PATH=os.path.abspath(os.path.join(CURR_DIR)+<span class="string">"/../ant/bin/ant"</span>)</span><br><span class="line">with_lua_code = <span class="keyword">False</span>  <span class="comment"># 是否运行lua源码</span></span><br><span class="line">compiler_cplus = <span class="keyword">False</span>  <span class="comment"># android上是否编译c++代码</span></span><br><span class="line">compiler_platform = <span class="number">1</span>  <span class="comment"># 编译的平台 android还是ios</span></span><br><span class="line">projects_path =<span class="keyword">None</span>  <span class="comment"># 项目要目录 </span></span><br><span class="line">ant_target = <span class="keyword">None</span><span class="comment"># android ant 目标</span></span><br><span class="line">version_code = <span class="keyword">None</span> <span class="comment"># 新版本号</span></span><br><span class="line">output_path = <span class="keyword">None</span> <span class="comment">#资源处理好后输出目录</span></span><br><span class="line"><span class="comment"># 检查ndk环境变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_ndk_environment</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">''' Checking the environment NDK_ROOT, which will be used for building</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        NDK_ROOT = os.environ[<span class="string">'NDK_ROOT'</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">print</span><span class="string">"NDK_ROOT not defined. Please define NDK_ROOT in your environment"</span></span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> NDK_ROOT</span><br><span class="line"><span class="comment">#检查环境变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_environment_variables</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> compiler_platform==PLATFORM_ANDROID :</span><br><span class="line">        svnResult = <span class="keyword">None</span></span><br><span class="line">        antResult = <span class="keyword">None</span></span><br><span class="line">        <span class="keyword">if</span>(isWin32()):</span><br><span class="line">            svnResult = check_cmd_path(<span class="string">"TortoiseProc.exe"</span>)</span><br><span class="line">            antResult = check_cmd_path(<span class="string">"ant"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            svnResult = check_cmd_path(<span class="string">"svn"</span>)</span><br><span class="line">            antResult = check_cmd_path(<span class="string">"ant"</span>)</span><br><span class="line">        <span class="comment"># print svnResult</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> svnResult :</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#检查路径里面是否包含某可执行文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_cmd_path</span><span class="params">(executePath)</span>:</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    dirs = <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">if</span>(isWin32()):</span><br><span class="line">        dirs = os.environ[<span class="string">'PATH'</span>].split(<span class="string">';'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dirs = os.environ[<span class="string">'PATH'</span>].split(<span class="string">':'</span>)</span><br><span class="line">    <span class="keyword">for</span> cmdpath <span class="keyword">in</span> dirs :</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(cmdpath) <span class="keyword">and</span>  executePath <span class="keyword">in</span> os.listdir(cmdpath):</span><br><span class="line">            result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">         <span class="keyword">print</span><span class="string">"please check environment variables   "</span> + executePath</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment"># ndk编译链</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_toolchain_version</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''ndk-r8e  -&amp;gt; use gcc4.7</span></span><br><span class="line"><span class="string">    ndk-r9   -&amp;gt; use gcc4.8</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    ndk_root = check_ndk_environment()</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(os.path.join(ndk_root, <span class="string">"toolchains/arm-linux-androideabi-4.8"</span>)):</span><br><span class="line">        os.environ[<span class="string">'NDK_TOOLCHAIN_VERSION'</span>] = <span class="string">'4.8'</span></span><br><span class="line">        <span class="keyword">print</span><span class="string">"The Selected NDK toolchain version was 4.8 !"</span></span><br><span class="line">    <span class="keyword">elif</span> os.path.isdir(os.path.join(ndk_root, <span class="string">"toolchains/arm-linux-androideabi-4.7"</span>)):</span><br><span class="line">        os.environ[<span class="string">'NDK_TOOLCHAIN_VERSION'</span>] = <span class="string">'4.7'</span></span><br><span class="line">        <span class="keyword">print</span><span class="string">"The Selected NDK toolchain version was 4.7 !"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span><span class="string">"Couldn't find the gcc toolchain."</span></span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># ndk编译c++</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_build</span><span class="params">(cocos_root, ndk_root, app_android_root)</span>:</span></span><br><span class="line">    ndk_path = os.path.join(ndk_root, <span class="string">"ndk-build"</span>)</span><br><span class="line">    <span class="comment"># windows should use ";" to seperate module paths</span></span><br><span class="line">    platform = sys.platform</span><br><span class="line">    <span class="keyword">if</span> platform == <span class="string">'win32'</span>:</span><br><span class="line">        ndk_module_path = <span class="string">'NDK_MODULE_PATH=%s;%s/cocos2dx/platform/third_party/android/prebuilt'</span> % (cocos_root, cocos_root)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ndk_module_path = <span class="string">'NDK_MODULE_PATH=%s:%s/cocos2dx/platform/third_party/android/prebuilt'</span> % (cocos_root, cocos_root)</span><br><span class="line">    command = <span class="string">'%s -C %s %s'</span> % (ndk_path, app_android_root, ndk_module_path)</span><br><span class="line">    os.system(command)</span><br><span class="line"><span class="comment"># 赋权操作</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subFileChmod</span><span class="params">(_sPath, _stat)</span>:</span></span><br><span class="line">     itemsInDir = os.listdir(_sPath);</span><br><span class="line">     <span class="keyword">for</span> item <span class="keyword">in</span> itemsInDir:</span><br><span class="line">         sItemPath = os.path.join(_sPath, item);</span><br><span class="line">         os.chmod(sItemPath, _stat);</span><br><span class="line">         <span class="keyword">if</span> os.path.isdir(sItemPath):</span><br><span class="line">             subFileChmod(sItemPath, _stat);</span><br><span class="line"><span class="comment"># 拷贝文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy_files</span><span class="params">(src, dst)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> os.listdir(src):</span><br><span class="line">        path = os.path.join(src, item)</span><br><span class="line">        <span class="comment"># Android can not package the file that ends with ".gz"</span></span><br><span class="line">        <span class="keyword">if</span> with_lua_code == <span class="keyword">False</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> item.startswith(<span class="string">'UserDefault.xml'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'.'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.endswith(<span class="string">'.gz'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.endswith(<span class="string">'.dll'</span>)  <span class="keyword">and</span> <span class="keyword">not</span> item.endswith(<span class="string">'.exe'</span>)  <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'start.bat'</span>) <span class="keyword">and</span> os.path.isfile(path):</span><br><span class="line">                shutil.copy(path, dst)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(path) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'.svn'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'script'</span>) <span class="keyword">and</span> item != <span class="string">'cache'</span> <span class="keyword">and</span> item != <span class="string">'editor'</span>  <span class="keyword">and</span> item != <span class="string">'.settings'</span>  <span class="keyword">and</span> item != <span class="string">'_gsdata_'</span>  :</span><br><span class="line">                new_dst = os.path.join(dst, item)</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(new_dst):</span><br><span class="line">                    shutil.rmtree(new_dst)</span><br><span class="line">                os.mkdir(new_dst)</span><br><span class="line">                copy_files(path, new_dst)</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> item.startswith(<span class="string">'UserDefault.xml'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'.'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.endswith(<span class="string">'.gz'</span>) <span class="keyword">and</span>  <span class="keyword">not</span> item.endswith(<span class="string">'.dll'</span>)  <span class="keyword">and</span> <span class="keyword">not</span> item.endswith(<span class="string">'.exe'</span>) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'start.bat'</span>) <span class="keyword">and</span>  item != <span class="string">'js'</span> <span class="keyword">and</span> os.path.isfile(path):</span><br><span class="line">                shutil.copy(path, dst)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(path) <span class="keyword">and</span> <span class="keyword">not</span> item.startswith(<span class="string">'.svn'</span>) <span class="keyword">and</span> item != <span class="string">'cache'</span> <span class="keyword">and</span> item != <span class="string">'editor'</span>  <span class="keyword">and</span> item != <span class="string">'.settings'</span> <span class="keyword">and</span> item != <span class="string">'_gsdata_'</span>  :</span><br><span class="line">                new_dst = os.path.join(dst, item)</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(new_dst):</span><br><span class="line">                    shutil.rmtree(new_dst)</span><br><span class="line">                os.mkdir(new_dst)</span><br><span class="line">                copy_files(path, new_dst)</span><br><span class="line"><span class="comment"># 拷贝资源</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy_resources</span><span class="params">(resources_dir,assets_dir,remove_assets)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> remove_assets:</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(assets_dir):</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"delete "</span>+assets_dir</span><br><span class="line">            shutil.rmtree(assets_dir)</span><br><span class="line">        os.mkdir(assets_dir)</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(resources_dir):</span><br><span class="line">        copy_files(resources_dir, assets_dir)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy_android_res</span><span class="params">(app_android_root)</span>:</span></span><br><span class="line">    assets_dir = os.path.join(app_android_root, <span class="string">"assets"</span>)</span><br><span class="line">    resources_dir = os.path.join(app_android_root, <span class="string">"../Resources"</span>)</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(resources_dir) <span class="keyword">and</span> os.path.isdir(assets_dir):</span><br><span class="line">        copy_resources(resources_dir,assets_dir,<span class="keyword">True</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy_ipa_res</span><span class="params">(app_output_path,resources_dir)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> app_output_path!=<span class="keyword">None</span> <span class="keyword">and</span> resources_dir!=<span class="keyword">None</span> <span class="keyword">and</span> os.path.isdir(app_output_path) <span class="keyword">and</span> os.path.isdir(resources_dir):</span><br><span class="line">        copy_resources(resources_dir,app_output_path,<span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 加密lua代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dumplua</span><span class="params">(current_dir)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> with_lua_code == <span class="keyword">False</span>:</span><br><span class="line">        command = <span class="keyword">None</span></span><br><span class="line">        <span class="keyword">if</span>(isWin32()):</span><br><span class="line">            command =os.path.abspath(current_dir+<span class="string">"/../dump/dump.bat"</span>)</span><br><span class="line">            command = <span class="string">"call "</span>+command</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command =os.path.abspath(current_dir+<span class="string">"/../dump/dump.sh"</span>)</span><br><span class="line">        <span class="keyword">if</span> command :</span><br><span class="line">            <span class="comment"># print command</span></span><br><span class="line">            os.system(command)</span><br><span class="line"><span class="comment"># 是否是windows平台</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isWin32</span><span class="params">()</span>:</span></span><br><span class="line">    sysstr = platform.system()</span><br><span class="line">    <span class="keyword">return</span> sysstr == <span class="string">"Windows"</span></span><br><span class="line"><span class="comment">#更新so文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">updateSo</span><span class="params">(update,app_android_root)</span>:</span></span><br><span class="line">    <span class="keyword">print</span><span class="string">"update so file"</span></span><br><span class="line">    <span class="comment"># print update</span></span><br><span class="line">    command =<span class="keyword">None</span></span><br><span class="line">    PROJ_SO_BASE_ABS = os.path.abspath(app_android_root+<span class="string">"/../"</span>+PROJ_SO_BASE)</span><br><span class="line">    <span class="comment"># print PROJ_SO_BASE_ABS</span></span><br><span class="line">    <span class="keyword">if</span> update ==<span class="keyword">True</span> :</span><br><span class="line">        <span class="keyword">if</span>(isWin32()):</span><br><span class="line">            command=<span class="string">"TortoiseProc.exe /command:update /path:"</span>+PROJ_SO_BASE_ABS+<span class="string">" /closeonend:1"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command=<span class="string">"svn update "</span>+PROJ_SO_BASE_ABS</span><br><span class="line">        os.system(command)</span><br><span class="line">        <span class="keyword">print</span><span class="string">"update so file success"</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outputApk</span><span class="params">(app_android_root,project_path)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> ant_target != <span class="string">"None"</span>:</span><br><span class="line">        <span class="keyword">print</span><span class="string">".................outputApk"</span></span><br><span class="line">        command= ANT_PATH+<span class="string">"  -buildfile  "</span> + app_android_root+<span class="string">"/build.xml  "</span></span><br><span class="line">        <span class="keyword">if</span> ant_target:</span><br><span class="line">            <span class="keyword">if</span> ant_target ==<span class="string">"sanguoBuildNotInstall"</span>:</span><br><span class="line">                command =command + <span class="string">" -q "</span></span><br><span class="line">            command = command+ant_target</span><br><span class="line">        <span class="keyword">if</span> version_code:</span><br><span class="line">            command = command+<span class="string">" -Dproject.versionname="</span>+version_code+<span class="string">" -Dproject.versioncode="</span>+version_code</span><br><span class="line">        <span class="keyword">print</span> command</span><br><span class="line">        <span class="keyword">if</span> command :</span><br><span class="line">            os.system(command)</span><br><span class="line">        <span class="keyword">if</span> ant_target ==<span class="string">"sanguoBuildNotInstall"</span>:</span><br><span class="line">            releaseApk = os.path.abspath(app_android_root+<span class="string">"/bin/sanguo-release.apk"</span>)</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(releaseApk):</span><br><span class="line">                destPath=releaseApksFile+<span class="string">"/"</span>+project_path+<span class="string">".apk"</span></span><br><span class="line">                <span class="comment"># print destPath</span></span><br><span class="line">                shutil.copy(releaseApk,destPath)</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"copy  "</span>+project_path+<span class="string">" apk success"</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outputIpa</span><span class="params">(app_projects_path)</span>:</span></span><br><span class="line">    <span class="keyword">if</span>  app_projects_path != <span class="keyword">None</span>:</span><br><span class="line">        command = <span class="string">". ./build_common_ipa.sh  "</span>+app_projects_path</span><br><span class="line">        os.system(command)</span><br><span class="line"><span class="comment"># 处理</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">()</span> :</span></span><br><span class="line">    <span class="comment"># check_environment_variables</span></span><br><span class="line">    check_environment_variables()</span><br><span class="line">    <span class="comment"># set Path</span></span><br><span class="line">    current_dir = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">    cocos_root = os.path.join(current_dir, <span class="string">"../../../.."</span>)</span><br><span class="line">    <span class="comment"># dumpLua</span></span><br><span class="line">    dumplua(current_dir)</span><br><span class="line">    <span class="keyword">if</span> compiler_platform==PLATFORM_ANDROID :</span><br><span class="line">        <span class="comment">#如果在函数内修改全局变量则视他为一个局部变量</span></span><br><span class="line">        projects_path_local = projects_path.split(<span class="string">":"</span>)</span><br><span class="line">        projectLen=len(projects_path_local)</span><br><span class="line">        ANDROID_PROJ_BASE_ABS=os.path.abspath(os.path.join(current_dir, <span class="string">"../../"</span>) +ANDROID_PROJ_BASE)</span><br><span class="line">        <span class="keyword">if</span> compiler_cplus == <span class="keyword">True</span> :</span><br><span class="line">            <span class="comment"># print ANDROID_PROJ_BASE_ABS</span></span><br><span class="line">            ndk_root = check_ndk_environment()</span><br><span class="line">            select_toolchain_version()</span><br><span class="line">            do_build(cocos_root, ndk_root, ANDROID_PROJ_BASE_ABS)</span><br><span class="line">            <span class="keyword">print</span><span class="string">"compiler cplus plus code success"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            updateSo(<span class="keyword">True</span>,ANDROID_PROJ_BASE_ABS)</span><br><span class="line">        <span class="comment">#先删除apks目录</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(releaseApksFile):</span><br><span class="line">            shutil.rmtree(releaseApksFile)</span><br><span class="line">        os.mkdir(releaseApksFile)</span><br><span class="line">        <span class="comment">#遍历生成</span></span><br><span class="line">        <span class="keyword">for</span> project_path <span class="keyword">in</span>  projects_path_local:</span><br><span class="line">            app_android_root = os.path.join(current_dir, <span class="string">"../../"</span>) + project_path</span><br><span class="line">            app_android_root=os.path.abspath(app_android_root)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"deal project........ "</span>+project_path</span><br><span class="line">            <span class="comment"># copy files</span></span><br><span class="line">            <span class="keyword">print</span><span class="string">"begin copy resources"</span></span><br><span class="line">            copy_android_res(app_android_root)</span><br><span class="line">            <span class="keyword">print</span><span class="string">"copy resources success"</span></span><br><span class="line">            outputApk(app_android_root,project_path)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        resources_dir =os.path.join(current_dir, <span class="string">"../../Resources"</span>)</span><br><span class="line">        copy_ipa_res(output_path,resources_dir)</span><br><span class="line">        <span class="comment"># outputIpa(projects_path)</span></span><br><span class="line"><span class="comment"># -------------- main --------------</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = OptionParser()</span><br><span class="line">    parser.add_option(<span class="string">'-c'</span>, <span class="string">'--compiler_platform'</span>, dest=<span class="string">'compiler_platform'</span>, help=<span class="string">'compiler_platform: android 1,ios 2'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-p'</span>, <span class="string">'--projects_path'</span>, dest=<span class="string">'projects_path'</span>, help=<span class="string">'directory of project option of ios'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-w'</span>, <span class="string">'--with_lua_code'</span>, dest=<span class="string">'with_lua_code'</span>, help=<span class="string">'run game with lua  code'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-t'</span>, <span class="string">'--ant_target'</span>, dest=<span class="string">'ant_target'</span>, help=<span class="string">'config build target ,android is ant target,ios is build setting '</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-s'</span>, <span class="string">'--compiler_cplus'</span>, dest=<span class="string">'compiler_cplus'</span>, help=<span class="string">'compiler cplus code for android,option of ios'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-v'</span>, <span class="string">'--version_code'</span>, dest=<span class="string">'version_code'</span>, help=<span class="string">'new version code'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-o'</span>, <span class="string">'--output_path'</span>, dest=<span class="string">'output_path'</span>, help=<span class="string">'Resources out put path'</span>)</span><br><span class="line">    opts, args = parser.parse_args()</span><br><span class="line">    compiler_platform = opts.compiler_platform</span><br><span class="line">    projects_path = opts.projects_path</span><br><span class="line">    with_lua_code = opts.with_lua_code</span><br><span class="line">    compiler_cplus = opts.compiler_cplus</span><br><span class="line">    ant_target = opts.ant_target</span><br><span class="line">    version_code= opts.version_code</span><br><span class="line">    output_path= opts.output_path</span><br><span class="line">    <span class="keyword">if</span> compiler_platform ==<span class="keyword">None</span> <span class="keyword">or</span> with_lua_code ==<span class="keyword">None</span>  :</span><br><span class="line">            <span class="keyword">print</span><span class="string">"some params not defined"</span></span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> compiler_platform ==PLATFORM_ANDROID :</span><br><span class="line">        <span class="keyword">if</span> compiler_cplus ==<span class="keyword">None</span> <span class="keyword">or</span> projects_path ==<span class="keyword">None</span> :</span><br><span class="line">            <span class="keyword">print</span><span class="string">"android build compiler_cplus and projects_path is must"</span></span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span><span class="string">"compiler_platform is :"</span>+compiler_platform</span><br><span class="line">    <span class="keyword">if</span> compiler_cplus:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"projects_path is :"</span>+projects_path</span><br><span class="line">    <span class="keyword">print</span><span class="string">"with_lua_code is :"</span>+with_lua_code</span><br><span class="line">    <span class="keyword">if</span> compiler_cplus:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"compiler_cplus is :"</span>+compiler_cplus</span><br><span class="line">        compiler_cplus= int(compiler_cplus)</span><br><span class="line">    <span class="keyword">if</span> ant_target:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"ant_target is :"</span>+ant_target</span><br><span class="line">    <span class="keyword">if</span> version_code:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"version_code is :"</span>+version_code</span><br><span class="line">    <span class="comment">#int to boolean</span></span><br><span class="line">    with_lua_code= int(with_lua_code)</span><br><span class="line">    build()</span><br></pre></td></tr></table></figure>
<p>这个python脚本用了OptionParser库来构建参数，参数说明在注释里有就不再复述了。脚本流程:</p>
<ul>
<li>检查环境变量 NDK_ROOT ,win上的TortoiseProc.exe,ant我也放到tools目录了。</li>
<li>加密lua代码</li>
<li>android平台复制资源调用各项目的build.xml编译打包 ,iOS只做资源拷贝，编译在外层的shell脚本中。</li>
</ul>
<p>build_ipa_all.sh:编译所有ipa<br>build_anroid_all.sh:编译所有anroid项目<br>渠道批量打包后,apk在releaseApks目录中,ipa中releaseIpas目录中</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/屏幕快照-2014-10-14-下午5.12.50.png" alt="屏幕快照 2014 10 14 下午5 12 50" title="屏幕快照 2014-10-14 下午5.12.50.png"></p>
<p>所有脚本附上: <a href="http://pan.baidu.com/s/1o6ODJNc" target="_blank" rel="noopener">http://pan.baidu.com/s/1o6ODJNc</a></p>
]]></content>
      
        <categories>
            
            <category> cocos2d-x </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一套键鼠的忧愁]]></title>
      <url>http://www.farwmarth.com/%E4%B8%80%E5%A5%97%E9%94%AE%E9%BC%A0%E7%9A%84%E5%BF%A7%E6%84%81/</url>
      <content type="html"><![CDATA[<p>最近终于从虚拟机的囧境里走了出来，申请了一台macMini在win和mac之间切换开发.两台主机键鼠频繁切换真是件蛋疼的事情，不过还好有局域网键鼠控制工具。<br><a id="more"></a></p>
<p>跨平台的键盘控制工具里找到了两个好用点的:</p>
<p><strong>synery</strong> : 配置比shareMouse复杂些,连接要选择作为服务器端还是客户端，免费版不支持文件拖曳。优势在于免费</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-09-下午9.15.304.png" alt="">作为服务器时要先在configure server中配置要连接的客户端的位置，用pc名字作为唯一标记key.服务器启动后在客户端填写服务器的ip,点击start后就可以连接成功了。</p>
<p><strong>ShareMouse</strong>:傻瓜化，启动即可使用，拖曳调整位置，免费版隔几分钟就会弹出注册的信息，支持文字图片的复制粘贴，以及文件拖曳。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-09-下午9.20.27-33.png" alt="">现在我的使用情况是:平常使用synery,在需要文件拖曳的时候再启ShareMouse,两者不冲突。</p>
<p>解决了键鼠的问题，还有一个困扰的问题就是mac的键盘映射了,使用win的键盘的话，win徽键相当于mac中的command键。mac中的复制粘贴正好是command+c,v，这样一来用win键盘在mac系统中按键非常别扭。幸好mac自带修饰键映射，将command和ctrl键调整一下。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-09-下午9.37.471.png" alt="">在mac下按键终于舒服起来了。但这样又带了一个问题，因为将我是使用MacMini的键鼠,键盘映射导致在win下面的按键也被替换了。悲剧，又得在win下找按键映射的工具，找了很多都是写注册表需要重启电脑的。后来终于找到叫“移花接木”的映射软件，软列表不需要重启或注销。问题终于搞定，在win和mac下按键都一致了。<img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-QQ截图201410092145371.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> tools </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[小工具之AppInfo]]></title>
      <url>http://www.farwmarth.com/%E5%B0%8F%E5%B7%A5%E5%85%B7%E4%B9%8BAppInfo/</url>
      <content type="html"><![CDATA[<p>因为经常打包需要查看apk或者是ipa中的版本信息,包名信息就写了这么个小工具，要跨平台就选择了java来写.</p>
<p>功能非常简单,拖放apk到界面就会把AndroidManifest.xml内容解析出来,拖放ipa到界面会把Info.plist解析出来</p>
<a id="more"></a>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-09-下午4.26.2010.png" width="600px"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2014/10/wpid-屏幕快照-2014-10-09-下午4.27.109.png" width="600px"></p>
<p>原理也很简单,apk的xml用<a href="https://code.google.com/p/android4me/downloads/detail?name=AXMLPrinter2.zip&amp;" target="_blank" rel="noopener">axmlprinter2</a>这个库.ipa的用<a href="https://code.google.com/p/sunlab/source/detail?r=339" target="_blank" rel="noopener">sunlab</a>,代码高亮使用了: <code>rsyntaxtextarea</code></p>
<p>写完之后又稍微扩展了一下:增加了命令行的支持，增加了查看zip内任意文件内容的功能。</p>
<p><strong>参数说明:</strong></p>
<ul>
<li>zipFile: 源zip文件,(apk和ipa也是zip)</li>
<li>findFile:要查找的文件(如:PayLoad/sanguo.app/Info.plist)</li>
<li>regexp:查找是否启用正则(True or False)</li>
<li>showUI:是弹出界面还是输出到命令行(True or False)</li>
</ul>
<p>源码奉上:<a href="https://github.com/wujiyu115/AppInfo" target="_blank" rel="noopener">AppInfo</a>,out目录中为已打包好的jar,要修改代码可以用ant自己再构建</p>
]]></content>
      
        <categories>
            
            <category> ant </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[libgdx字体渲染选择方案]]></title>
      <url>http://www.farwmarth.com/libgdx%E5%AD%97%E4%BD%93%E6%B8%B2%E6%9F%93%E9%80%89%E6%8B%A9%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<p>最近在优化一下游戏中内的字体渲染方案。<br>找了下资料发现渲染方案就两种。一种是使用ttf，动态去生成纹理渲染.第二种是采用位图字体.两种方案各有利弊.第一种方案性能损耗比较大,在libgdx的FreeTypeFontGenerator中会每次都重新生成纹理。如果界面上Label数量增多,</p>
<a id="more"></a>
<p>fps自然会下降。好处是因为实时生成不会因为字体放大而模糊。第二种方案好处是性能均衡.但是字体比例放大时会出现模糊现象.</p>
<p>策划要求使用android自带的ttf文件.实现过程很简单:<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileHandle fileHandler=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">switch</span> (Gdx.app.getType()) &#123;</span><br><span class="line">    <span class="keyword">case</span> Android:</span><br><span class="line">        fileHandler = Gdx.files.absolute(<span class="string">"/system/fonts/DroidSansFallback.ttf"</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Desktop:</span><br><span class="line">        fileHandler = Gdx.files.absolute(<span class="string">"C:/Windows/Fonts/font.ttf"</span>);</span><br><span class="line"><span class="comment">//        fileHandler = Gdx.files.internal("data/potato.ttf");</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">FreeTypeFontGenerator    generator = <span class="keyword">new</span> FreeTypeFontGenerator(fileHandler);</span><br></pre></td></tr></table></figure></p>
<p>我在桌面版中调用的是winodws自带字体库.在Android中加载系统字体库。然FreeTypeFontGenerator来生成BitmapFont.坑爹的是FreeTypeFontGenerator生成字体库时不能重复文字,</p>
<p>而且如果生成的字体库太大时，动态生成完全是个悲剧。pc测试生成4000常用字需要4s左右,在android中动态生成4000字体67s.</p>
<p>在android上还是通过jni生成的.这种性能完全无法接受. 所以这种方案貌似行不通。 不过有个优化设想还没实践:可以修改api来实现生成字体时可将接受重复文字。将单个文字纹理缓存这样相当于有到什么文字时才增加纹理的体积。游戏运行过程中运行也不会达到4000个汉字.   </p>
<p>纹理体积比第二种方案会减少很多.当然这只是设想.</p>
<p>第一种方案行不能。只能折中使用第二种方案了。将4000汉字打包成图片纹理在800k左右.</p>
<p>至于放大模糊的问题没有什么好的解决方案。可以在打包输出纹理的时候将字号设置为22号左右。然后使用DistanceField效果.</p>
<p>如果需要描边效果的话也是个蛋疼的问题.libgdx还没有支持描边的特性,只能用Hiero重新打包一个加描边特效的fnt.不过也可以依照Hiero使用java.awt.Stroke 对象动态去描边.打包的纹理还可以使用pngGauntlet来减小20%左右的体积.</p>
]]></content>
      
        <categories>
            
            <category> libgdx </category>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> libgdx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟货币二三事]]></title>
      <url>http://www.farwmarth.com/%E8%99%9A%E6%8B%9F%E8%B4%A7%E5%B8%81%E4%BA%8C%E4%B8%89%E4%BA%8B/</url>
      <content type="html"><![CDATA[<h3 id="比特币"><a href="#比特币" class="headerlink" title="比特币"></a>比特币</h3><p>最近比特币炒得比较火,最开始听说这种虚拟货币是从国外的极客网站上看到的,流传于极客之间的玩物.十一月初的时候还是对人民币汇率还是1000元的样子。不到一个月，等到媒体大肆报道的时候已经翻了六七倍。出于好奇和装b的心理于是查了下维基百科.原理如下 ：</p>
<a id="more"></a>
<blockquote>
<p>新的比特币是由对等网络<a href="http://zh.wikipedia.org/wiki/%E7%82%B9%E5%AF%B9%E7%82%B9%E6%8A%80%E6%9C%AF" target="_blank" rel="noopener">P2P</a>的节点，在完成一个特定<a href="http://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6" target="_blank" rel="noopener">数学</a>问题计算之后生产出的。这些数学计算需要相当的运算能力才能完成，并能够通过生成有效运算工作的证明来检验。在比特币网络中运算难度可以自动调节，在最初的四年里会有10,500,000比特币被制造出来，这个数值每四年减半，所以在第四到第八年中会有5,250,000比特币被制造，在第8到第12年中会生产2,625,000比特币，以此类推。因此最终比特币的数额会无限趋近于21,000,000比特币。</p>
<p>技术上讲，目前的数据结构下，一个比特币可以被分区到8位小数，所以0.00000001BTC是目前的最小单位。如果将来有需要的话，再考虑更小的分区单位。即使比特币的允许<a href="http://zh.wikipedia.org/wiki/%E7%B2%BE%E5%BA%A6" target="_blank" rel="noopener">精度</a>从目前的8位小数扩展，最终流通中的比特币将总是略低于2100万（假定其他参数不变）。</p>
<p>系统运行内建的机制会在平均大约每10分钟确认一个区块（block）。<sup><a href="http://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81#cite_note-96" target="_blank" rel="noopener">[96]</a></sup>参与制造新比特币的人数变动，新比特币制造的难度也随之变动，这是将整个分布式网络作为一个整体来分析，分析的依据是之前2016个区块的制作时间。因此制造的难度与一定时间内全网投入制作工作的平均运算能力相关。单一个体“发现”新区块的可能性是创建在他的计算能力与全网计算能力的综合比较之上的。</p>
<p>区块的总数乘以每个区块的比特币值就是现存的比特币总数。每个区块的币值在最初的210,000个区块中是50BTC，之后210,000区块是每区块25BTC，然后是12.5BTC、6.25BTC，以此类推。最后一个产出比特币的区块将是编号为6,929,999的区块，这大约会在公元2140年前后发生。届时流通中比特币的总数将恒定维持在20999999.9769 BTC。生产的奖励会从0.00000001 BTC变为0，然后将不再有新的比特币被生产出来。<br>比特币地址大约33位，相当于银行卡,比特币私钥则相当于密码.它们会成对出现.而交易相当于我们平时的转账,可以把比特币从一个地址转移到另一个地址.因为地址是非实名的,这给洗黑钱提供了相当强力的温床。<br>比特币就像一个名不见经传的小人物一夜之间就被推到了历史的浪潮.有人一夜暴富，有人在暗叹错失良机.</p>
</blockquote>
<h3 id="另一种虚拟货币"><a href="#另一种虚拟货币" class="headerlink" title="另一种虚拟货币"></a>另一种虚拟货币</h3><p>XRP :由ripple实验室开发的另一种虚拟货币。知道这种货币的过程更是有趣,某一天在gamil的邮箱里发现了两封垃圾邮件.大意是收购5月1号之前注册的github账号.然后会通过支付宝支付你30块人民币.出于手贱我又查了查google.原来是ripple的活动,回赠5月1号之前注册github用户免费赠送xrp.如果关注了他们的github账号则是4040xrp.没有就会折半.注册个账号玩了玩。发现和比特币类似.前几天无聊在rippleChina逛逛。把这赠送的2020xrp以0.2元一个卖了.结果第二天就涨了…</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/12/image.png" alt="image"></p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[曲线救国之罗技蓝牙键盘]]></title>
      <url>http://www.farwmarth.com/%E6%9B%B2%E7%BA%BF%E6%95%91%E5%9B%BD%E4%B9%8B%E7%BD%97%E6%8A%80%E8%93%9D%E7%89%99%E9%94%AE%E7%9B%98/</url>
      <content type="html"><![CDATA[<p>双十一的时候手一抖秒了个罗技的蓝牙键盘，买来配ipad来写写博客.官网上报价499,秒杀价99。昨天到货后迫不及待地把玩一番，心想着坑爹的ipad输入终于有个好伴侣了。下班回家把ipad蓝牙打开，死活搜索不到这个键盘设备。朕以为哪里设置有问题，各种百度各种google无果，好吧，既然ipad连接不上,那就试下笔记本吧，尼玛,dell笔记本也是各种连不上，蓝牙驱动重装n遍还是无果啊。</p>
<a id="more"></a>
<p>然后把键盘翻过来一看，android专用啊，你妹的android专用啊。印象里蓝牙不是都通用嘛，怎么还各系统不兼容。官网上查了一下罗技y-r0021分了两款产品,for android和for ipad.我买的这个就只能连接我的mx了。键盘重量挺沉的，敲击感也不错。只是对着这手机小屏幕敲起来各种不爽。</p>
<p>还是想将键盘连上ipad或者笔记本，搜索了一下蓝牙适配的配件，全都是电脑的适配器。不知道对我这个y-r0021有效没，待测试。突然又想到其实可以将手机屏幕投影到ipad上面，这样屏幕看起来就大了，看起来就不用那么费劲了。找了n款屏幕共享的软件，android和ios共用的终于被我找到了:<span style="color: #ff0000;">mirrorop . </span><span style="color: #000000;">在android上装上send端，ipad上装上recevie端。然后蓝牙键盘再连上android手机。效果如下.</span></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/11/IMG_20131119_223319.jpg" alt="IMG_20131119_223319"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/11/IMG_20131119_223357.jpg" alt="IMG_20131119_223357"></p>
<p>终于是达到了目的，效果却是不甚理想。输入有点延时，毕竟是投影。瞎折腾.</p>
]]></content>
      
        <categories>
            
            <category> 瞎折腾 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
            <tag> 蓝牙键盘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[回归]]></title>
      <url>http://www.farwmarth.com/%E5%9B%9E%E5%BD%92/</url>
      <content type="html"><![CDATA[<h4 id="休了个好长一个假"><a href="#休了个好长一个假" class="headerlink" title="休了个好长一个假"></a>休了个好长一个假</h4><p>加上国庆的话,休息了二十来天的样子,又开始了忙碌的日子.这二十来天不上班的日子节奏放慢不少,国庆回了趟女朋友家,呼吸了一星期的新鲜空气.10号辞职后就开始不急不忙地找工作.辞职之前盘算着去厦门玩一个礼拜,真的辞了后又懒成一陀了,加上小锅又要上班,一个人出游似乎有点寂寞,于是一个周的时间又宅在家里.算下来应该是第三次找工作了,本以为是比较轻松的事情.投了简历一星期才一面试电话,还不是所做的行业.这倒让我挺吃惊了的.后面一周的时间面了几个不太相关的职位.活倒是轻松不少,双休不加班,工资也比现在的要好.但是总感觉做app以后不知道怎么发展,不继续做游戏感觉浪费了这两年的技能.</p>
<a id="more"></a>
<h4 id="这五个月"><a href="#这五个月" class="headerlink" title="这五个月"></a>这五个月</h4><p>这五个月真的是忙得天晕地岸,每天加班到11点以后,不断的新功能,待解决的问题,新的游戏. 每天都不想爬起来,这也是坚定辞职的原因之一.国庆后终于是结束了这五个月的疲惫状态.养了十几天后和还在团队里的人聚了聚,有个哥们说好两三周不见就面色红润,两眼放光啊.虽没这么夸张,不过精神状态恢复倒是真的.<br>说说辞职原因吧,首要原因肯定是加班.长期加班到深夜直接导致的是第二天上午没有战斗力.整个团队都处于疲态.有天和负责人去谈话他的理论居然是:工作效率=工作时长.这一点真不敢苟同,不知道他是如何得出这一结论了,就个经验而言,我大部分的代码都是每天只花四五个小时真正在写.到了晚上九点之后战斗力就急剧下降.<br>除了加班之外就是就是感觉团队管理上不合理,客户端一直是两三个人要兼顾三个游戏的所有东西,功能暂且不说,平台接入各种杂七杂八的事情.而且策划是想到一个功能或者是发现一个bug就跑过来.完全没办法集中精力.某天心血来潮,这个游戏风格不大好,改改版吧…这让我们情何以堪.而且这斗地主完全没有竞争力,比同类型的毫无亮点.<br>辞职说了一个月后终于是批了.虽说经过这悲催的五个月对负责人完全无感,但有一点还是挺欣赏的. 他有个习惯是有问题就立马去解决,资源调动很快,有时候程序上遇到什么问题,一通电话,就会有别的团队的人过来指导一下.对于我这样的拖延症还是值得学习的.</p>
<h4 id="面试与被面试"><a href="#面试与被面试" class="headerlink" title="面试与被面试"></a>面试与被面试</h4><p>在这个新团队里倒是有几次面试别人的机会,因为项目负责人不是搞技术的,所以有时候要自己招人用.这种角色转变倒是让我重新认识了一下面试这个问题.因为自己学android时间也不长所有招的时候侧重点可能不一样.除了问下基本知识结构和所做项目外,还有两点我也比较看重,第一是是否在学习新的语言.问这点是因为这两年自身切身经历各种语言的变迁,从java到as再到android 到c++.所以这种更新知识结构的能力感觉很重要.其实一般只要工作经历长一点.一两门语言的接触是不可避免的.市场的变化也带动了技术革新.学习新语言也成常态.第二点是是否知道github.github是个很好的代码库管理平台,很多优秀的引擎代码也在上面托管,比如:libgdx,cocos2d-x等等.大多数库都是开源的,当然也有私有库管理.除了可以参阅很好优秀的代码外,github上的开源氛围也很好,你可以直接和国外的开发者交流和讨论.更重要的一点是这种英文氛围对你的英文阅读能力有很大的帮助.英文资料的阅读能力如此重要是.因为大部分最新,诠释最全面最新的技术资料大多数是英文文档,如果你排斥英文文档,新技术学习往往会滞后一个周期.需要别人翻译好才能去学习.</p>
<p>站在面试的角度来讲,从这两年的面试来看,大部分面试官更注重经验之谈,面试不同工作年限的人方式自然也不一样. 没有工作经验的人笔试是免不了.一般有了两年工作经验这一步就可以省略,更多地是谈做的项目,在项目中的职责,对整个项目的掌控程度.这也是最近面试我才意识到的一点.对一个项目核心点和全局掌握会给你加分.</p>
<h4 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h4><p>二十几号的时候和之前的工作室的人聚了聚.感慨不少,对投入了一年精力的儿童游戏的失利的可惜.对现在状态的无奈.对上级管理的抱怨.如果不是因为主策的坑钱策略和上错了运营平台,这个儿童游戏本的长足发展和收入不至于此.不说和腾讯,百田去争个高下.在这市场分一杯羹不是难事.儿童市场像是一坛要慢慢酿的酒.电影,动画片,主题公园.而我们死在了起跑线上.<br>之前的组长叫我回去,现在做的手机rpg缺人手.看了下他们已完成的部分.犹豫了两天还是回归了.第一是没有做过这种类型的游戏想尝试一下.第二是觉得这游戏做出来流水应该不错.I am back,再战斗一场.</p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows常用bat命令]]></title>
      <url>http://www.farwmarth.com/%E5%B8%B8%E7%94%A8bat%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h2><h3 id="pandoc-rst-to-markdown"><a href="#pandoc-rst-to-markdown" class="headerlink" title="pandoc rst to markdown"></a>pandoc rst to markdown</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set mddir=md</span><br><span class="line">for /f "tokens=*" %%i in ('dir/s/b *.rst') do  pandoc -s -t rst --toc %%i -o %mddir%/%%~ni.md</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="快速删除大量文件"><a href="#快速删除大量文件" class="headerlink" title="快速删除大量文件"></a>快速删除大量文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">del /f/s/q dirname&gt; nul</span><br><span class="line">rmdir /s/q dirname</span><br></pre></td></tr></table></figure>
<h3 id="windows查看某个端口号被占用并结束此进程"><a href="#windows查看某个端口号被占用并结束此进程" class="headerlink" title="windows查看某个端口号被占用并结束此进程"></a>windows查看某个端口号被占用并结束此进程</h3><h4 id="单条命令"><a href="#单条命令" class="headerlink" title="单条命令:"></a>单条命令:</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FOR /F "tokens=5 delims= " %P IN ('netstat -a -n -o ^|findstr :4000.*LISTENING') DO TaskKill.exe /PID %P /T /F</span><br></pre></td></tr></table></figure>
<h4 id="分步过程"><a href="#分步过程" class="headerlink" title="分步过程"></a>分步过程</h4><ol>
<li><code>netstat -ano |findstr 4000</code> :  //查看3306端口是否存在</li>
<li><code>tasklist |findstr 3036</code>(PID号): //查看pid为3036的是什么程序在用</li>
<li><code>taskkill /T /F /PID 3036</code> : 杀死pid为3036的所有进程包括子进程(/T参数)</li>
</ol>
<h3 id="右键添加打开MS-DOS-bat"><a href="#右键添加打开MS-DOS-bat" class="headerlink" title="右键添加打开MS-DOS.bat"></a>右键添加打开MS-DOS.bat</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">reg add "HKCR\*\shell\ms-dos" /ve /d ms-dos /f</span><br><span class="line">reg add "HKCR\*\shell\ms-dos\command"  /ve /d "cmd.exe /k cd %%1"  /f</span><br><span class="line">reg add "HKCR\Folder\shell\ms-dos" /ve /d ms-dos /f</span><br><span class="line">reg add "HKCR\Folder\shell\ms-dos\command" /ve /d "cmd.exe /k cd %%1" /f</span><br></pre></td></tr></table></figure>
<h3 id="批量改名"><a href="#批量改名" class="headerlink" title="批量改名"></a>批量改名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ren *.xml *.txt</span><br></pre></td></tr></table></figure>
<h3 id="批量命令带过程"><a href="#批量命令带过程" class="headerlink" title="批量命令带过程"></a>批量命令带过程</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set num = 0</span><br><span class="line">For /r  . %%i in (*.RAR) do (</span><br><span class="line">set /a num += 1</span><br><span class="line">echo %%i</span><br><span class="line">call echo 第 %%num%% 个文件处理成功</span><br><span class="line">ren %%i *.mp4)</span><br><span class="line">echo 共%num%个文件被处理成功</span><br><span class="line"><span class="meta">pause&gt;</span>nul</span><br></pre></td></tr></table></figure>
<h3 id="清理SVN目录中-SVN"><a href="#清理SVN目录中-SVN" class="headerlink" title="清理SVN目录中.SVN"></a>清理SVN目录中.SVN</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo On</span><br><span class="line">@Rem 删除SVN版本控制目录</span><br><span class="line">@PROMPT [Com]</span><br><span class="line">@for /r . %%a in (.) do @if exist "%%a\.svn" rd /s /q "%%a\.svn"</span><br><span class="line">@Rem for /r . %%a in (.) do @if exist "%%a\.svn" @echo "%%a\.svn"</span><br><span class="line">@echo Mission Completed.</span><br><span class="line">@pause</span><br></pre></td></tr></table></figure>
<h3 id="显示自己的IP"><a href="#显示自己的IP" class="headerlink" title="显示自己的IP"></a>显示自己的IP</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">for /f "tokens=15" %%i in ('ipconfig ^| find /i "ip address"') do set ip=%%i</span><br><span class="line">echo %ip%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<h3 id="删除-svn-注册表"><a href="#删除-svn-注册表" class="headerlink" title="删除 svn 注册表"></a>删除 svn 注册表</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN]</span><br><span class="line">@="Delete SVN Folders"</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN\command]</span><br><span class="line">@="cmd.exe /c \"TITLE Removing SVN Folders in %1 &amp;amp;&amp;amp; COLOR 9A &amp;amp;&amp;amp; FOR /r \"%1\" %%f IN (.svn) DO RD /s /q \"%%f\" \""</span><br></pre></td></tr></table></figure>
<h2 id="bat写法备忘"><a href="#bat写法备忘" class="headerlink" title="bat写法备忘"></a>bat写法备忘</h2><h3 id="删除自身"><a href="#删除自身" class="headerlink" title="删除自身"></a>删除自身</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">del %0</span><br></pre></td></tr></table></figure>
<h3 id="查找字符串位置"><a href="#查找字符串位置" class="headerlink" title="查找字符串位置"></a>查找字符串位置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Setlocal ENABLEDELAYEDEXPANSION</span><br><span class="line"></span><br><span class="line">set str1=This is a test string</span><br><span class="line">set ch1=t</span><br><span class="line">set str=%str1%</span><br><span class="line">:next</span><br><span class="line">if not "%str%"=="" (</span><br><span class="line">set /a num+=1</span><br><span class="line">if "!str:~0,1!"=="%ch1%" goto last</span><br><span class="line">set "str=%str:~1%"</span><br><span class="line">goto next</span><br><span class="line">)</span><br><span class="line">set /a num=0</span><br><span class="line">:last</span><br><span class="line">echo %num%</span><br></pre></td></tr></table></figure>
<h3 id="bat-批处理－取年、月、日、时、分、秒、毫秒"><a href="#bat-批处理－取年、月、日、时、分、秒、毫秒" class="headerlink" title="bat 批处理－取年、月、日、时、分、秒、毫秒"></a>bat 批处理－取年、月、日、时、分、秒、毫秒</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">取年份：echo %date:~0,4%</span><br><span class="line">取月份：echo %date:~5,2%</span><br><span class="line">取日期：echo %date:~8,2%</span><br><span class="line">取星期：echo %date:~10,6%</span><br><span class="line">取小时：echo %time:~0,2%</span><br><span class="line">取分钟：echo %time:~3,2%</span><br><span class="line">取秒：      echo %time:~6,2%</span><br><span class="line">取毫秒：echo %time:~9,2%</span><br></pre></td></tr></table></figure>
<h3 id="余数运算符"><a href="#余数运算符" class="headerlink" title="余数运算符%"></a>余数运算符%</h3><p>在批处理程序中必须写成%%</p>
<h3 id="去除字符串前面的零"><a href="#去除字符串前面的零" class="headerlink" title="去除字符串前面的零"></a>去除字符串前面的零</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set /a m=%m:*0=%</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> bat </category>
            
        </categories>
        
        
        <tags>
            
            <tag> bat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[养了几天喵]]></title>
      <url>http://www.farwmarth.com/%E5%85%BB%E4%BA%86%E5%87%A0%E5%A4%A9%E5%96%B5/</url>
      <content type="html"><![CDATA[<p>以前家里养猫完全是放养状态.猫到处乱跑,饿了就回来吃饭,猫碗里要么是饭,要么是鱼骨头.一样长得肥肥壮壮还会抓老鼠.除了发情期很少听到猫叫,有些黑色的野猫更是神龙见首不见尾,很少能看清它的真容,经常是傍晚的时候一对眼就不见了.农村里的家猫基本作用是抓老鼠.养得也没那么骄贵.所以形态也和宠物猫有所不同,长得紧凑而彪悍.</p>
<p>昨天小锅跟我说她们公司门卫那里有3只小猫,想要抱回家.  下班回去的时候就看到一只2个月大小的小猫咪,蜷缩在客厅的长椅的角落里不出来.像是到了一个完全陌生的环境里的人,又没了小伙伴的陪伴那种落寞感让人看着心疼.<br><a id="more"></a></p>
<p>查了下幼猫喂养指南.各种麻烦,住要舒适的猫窝,吃要上好的猫粮还得不让它拉肚子,厕所要专门配置猫砂.还要定期打疫苗,清洁除虫.这还是猫的基本生活准则,更多的是要感情培育.要经常跟它玩,放在腿上抚摸它.这完全是带小孩的节奏啊.吃完饭后给它做了个简易的窝,在纸盒子里铺了件旧衣服.把猫粮和水盛好.猫咪死活不买账.嚎了一整晚,第二天很早就被吵醒,起来一直打瞌睡.趁着上班前的间隙用猫项圈陪它玩了一会.它也不再怕我,在我脚边蹭来蹭去的.</p>
<p>其实猫咪还是挺可爱的,熟络之后会跑来粘你.但有点让我受不了的是:半夜嚎叫.刚开始我以为嚎完第一个晚上就万事大吉了.事实并非如此.我上班的时候它一听到锁门的声音就开始哇哇大叫,似乎知道我要出门没时间陪它了一样.嚎得那叫一个惨绝人寰.第二个晚上我把它关在卧室外之后叫得更厉害了.声音也是一声长一声短,凌晨4点我只好爬起来把卧室门打开,它就一个人在椅子下面玩,还是不停地闹腾,真想一气之下把它丢外面去.</p>
<p>可能是这只小猫太小的缘故,特别爱活动,成天上窜下跳的,一个塑料袋都可以让它兴奋好一会儿.有时间看着它自己玩尾巴又觉得它特乖.上班和睡觉的时候特意把门窗全部关了.怕吵到邻居,也怕它从四楼一纵而下.猫天生对高度没有什么敏感度.晚上睡觉的时候它老是想往我床上跳,有时候鬼鬼祟祟地从床脚的一侧爬上来.家里灰尘太多,一两天它就把白毛染成了半灰的毛.如果不脏的会,我倒挺乐意让它睡在我床上.大部分时候它都很活跃.不过小猫咪也有安静的时候,玩累了就趴在电脑桌底下卷成一团.休息十来分钟又伸伸懒腰开始叫唤.真是个熊孩子.</p>
<p>养猫之前请教了一下爱猫人士,被说教了一番.养猫之前要做好心理准备,不要一时心血来潮就养个玩玩.因为养猫是猫咪一辈子的事情,少则7.8年,多则10年.刚开始觉得不就是养只猫吗?没啥大不了的.现在想想这些话,确实在理.养猫就像自己的小孩一样.是个有生命的个体.猫咪穷其一生陪你度过难过或者无聊的时光,某些时候连亲人都无可比拟.</p>
<p>和猫咪呆的这几天.让我突然理解那些流浪宠物关爱团体,绝非出于矫情.这次养猫的确是心血来潮了.我们没有足够的时间和精力去培育它.在豆瓣上发了个帖,希望给它找个有个有爱心的主.如果找不到合适的.就继续养着吧. 喵喵喵.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/10/P31010205927.jpg" alt="P31010-205927"></p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[清静了几天]]></title>
      <url>http://www.farwmarth.com/%E6%B8%85%E9%9D%99%E4%BA%86%E5%87%A0%E5%A4%A9/</url>
      <content type="html"><![CDATA[<h3 id="见家长"><a href="#见家长" class="headerlink" title="见家长"></a>见家长</h3><p>国庆难得长假，和女朋友回家见了见家长，不懂人情事故，没准备什么礼物，临时买的烟酒，买了些骨质增生的药给他爸，见面尴尬自不用说，特别是吃饭的时候，因为是语言不通，大部分时候都听他们在讲，和女朋友和她她妈打电话多了，大部分意思还是可以揣摩出来.一个劲地叫我吃菜，只能点头客气。</p>
<a id="more"></a>
<p>“审查” 自是不可避免，毕竟是要将一个养了二十年的姑娘交到一个黄毛小子手里，晚饭后叔叔便开始问一些家庭情况，兄弟姐妹，车程。一一对答，心里没底。不知道叔叔阿姨对我印象如何.叔叔阿姨都是很朴实的人，拿家里最好的来招待我。</p>
<p>她家三兄妹，属她最小，在家里也是最活跃的一个。她哥则在饭桌上一个劲地叫我喝酒。有天中午到她奶奶家还真喝醉了，白酒没怎么喝过，不胜酒力。这让我想起了有年过年在外公家把白酒当白开水喝的经历。醉酒的状态如同瘫痪，四肢不听使唤而意识清醒。刚开始会头昏脑胀，肚内如火烧。而后四肢麻木，夹菜都有困难。后来干脆就瘫倒床上等酒醒。昏睡到傍晚才醒。</p>
<h3 id="六根清静"><a href="#六根清静" class="headerlink" title="六根清静"></a>六根清静</h3><p> 在山里最大的感受是空气清新，阳光和煦。完全不用忌讳PM2.5的问题.她家门前有大片的竹林，风一吹便是滚滚的绿浪。到的那天下午我俩还跑来刚收割不久的稻田里去挖泥鳅，以前还没干过这事有种新奇感，在家里的时候只摸过鱼，泥鳅大多都是大人用电击法捕捉。果真是挖到了几条，感觉又回到了童年那段时光.</p>
<p> 放假这段时间把不刷微博和空间，手机也没整天捏在手上了，晚上9点多就睡觉，早上7点钟就伸伸懒腰起床。秋天的太阳不刺眼，吃完饭后就搬个凳子到院子里晒太阳。翻了下节前准备好的几本书。猫猫狗狗在脚边窜窜去甚是好玩。</p>
<h3 id="这几天看的两本书"><a href="#这几天看的两本书" class="headerlink" title="这几天看的两本书"></a>这几天看的两本书</h3><p> 以前看电子书多是txt,质量没法保证，而且很多书源找不到。最近看的两本书是多看上买的，价格不贵，三两块钱，而且阅读体验是txt所不能企及的。字体更加适合阅读，可以图文混排,还可以做书签和标注。</p>
<p> 第一本看的是孟非的自传&lt;&lt;随遇而安&gt;&gt;<br>从童年到成年的成长经历。这本书整体感觉文字比较朴实平淡，可以当作是一个故事来看。早年在重庆，之后到南京，从印刷工到摄影,编辑再干到主持人.书中最让我印象最深刻的部分倒不是他早年在印刷厂的艰苦岁月，而是拍&lt;&lt;西域风情&gt;&gt;的纪录片时在新疆那异域里的奇特旅程。也许是因为男人都有这样一个探险的梦想。如果没来见丈母娘，估计我也在穿越山川的路上。</p>
<p> 另一本更多是倾向于技术&lt;&lt;MacTalk.人生元编程&gt;&gt;.大部分篇幅介绍了苹果文化和发家史。以及mac的使用技巧。如果新手入门mac倒是本不错的教材。比较感兴趣的是关于程序员和编程的一些感悟这一章节。谈到了程序员的性格.程序员这个职业多个有一点会影响个人性格，平时交际有时会犯怵。这点在我这两年平时工作同事身上有所体现。可能是因为长期埋头写代码缺少社会活动的原因。书里也谈到了程序员个人提高 。如英语与编程能力的提高。其实没有什么窍门，持之以恒，方见成效。除此之外还应该发展下工作之外的兴趣。谁说程序员只能埋头做屌丝。程序员只是一种职业而已。我们同样可以做个十足的文艺青年。</p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[几多良友]]></title>
      <url>http://www.farwmarth.com/%E5%87%A0%E5%A4%9A%E8%89%AF%E5%8F%8B/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp; 仔细一想，我的大部分现在的好朋友都来自中学时期。当然每个时期身边都会有一些走得比较近的人，但说实话有些也无法称之为真正的朋友。中学时代交的朋友如此独特，也许是那个时候所处大环境一样,正在形成自己的观感，很多想法也不谋而同。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 我有一个从幼儿园就认识的朋友。同班了5年.学习成绩上会比赛，一起玩，放假的时候会去他家那边的小溪流里抓螃蟹，他喜欢画画，有时候会画一些卡通人物送给我。把他听过的故事讲给我听，那些什么薛仁贵的故事我现在还记得。那个时候娱乐的东西很少，下课时间又很漫长,通常是两个小时，经常会爬到学校上围墙择一种叫”竹节虫”的玩意,然后收拾到书包里，放学的时候丢到家里的火堆里燃得噼里啪啦响，像放鞭炮一样，就是这样的无聊的活动我们也乐此不疲。还有一件事情印象比较深刻的是上二三年级的时候,他用一种红色的剪纸剪了只特别好看的纸老虎,那个年纪自然是见到新奇的东西就要抢的时候。我们那时候课桌是那种很长的两人共用的那种，然后他就在各个课桌上窜来窜去的,我在过道里不停地追,一不小心就碰到他的脚跟,结果可想而知,鼻血暗涌。然后我就被罚站抄课文。<br><a id="more"></a></p>
<p>&nbsp;&nbsp;&nbsp; 后来隔开了两年,两个人在不同的学校,联系也渐少.努力去回忆这两年也是印象模糊,好像没什么深交的朋友。初中的时候两人又回到了一个学校，但不是同班，见面也比较少，偶尔中餐的时候打下招呼。放暑假的时候会约三五好友一起去他家聚聚。现在算算猛然一惊。他应该是和我在一个学校时间最长的了。五年的小学时间，初中三年，高中三年。十一年的时间却是君子之交淡如水的感觉。此后天南地北,相聚不易.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 中秋时节有一个朋友打电话给我,对于我这种基本上一年到头电话没动静的人来说着实有些意外,叙了叙旧,说到最后都不知道该怎么结束这场谈话.并不是心里厌恶,只是许久不见,又在不同的环境里生活了这么多年,共同语言所剩无几.只剩回忆.初二那会玩得特好.放假经常去我家.在卧室里用复读机听华仔和任贤齐.有时候俩人会神神道道地拿着可擦写的磁带录着.听一遍自己那五音不全的嗓音再擦掉.</p>
<p>&nbsp;&nbsp; 每当夏末蛙声遍地的时候,我俩就会有一个特别的消遣的方式:钓蛙.钓蛙和钓鱼同样需要极强的耐力.钓具倒是可以做得极其简陋,三五米长的小竹竿. 用鱼线即可,在末端拴上单节手指大小的棉絮就可以开钓了，如果要钓比较聪明的石蛙，那得先钓一些常见的土蛙做诱饵.我们一般就在门前的沟渠或者稻田里钓,装蛙的器具也非专业蛙篓，一肥料袋套上一个大铁圈。大约钓上七八只大的就可以吃一顿了，农田里长的青蛙和现在店里那些圈养的肉感完全不一样.炒上辣椒可以轻松干掉几碗饭.即使在烈日当空我们也钓得不亦乐乎.我运气和技术都算不上好,他每回都能钓得多一些。 </p>
<p>&nbsp;&nbsp; 后来联系渐少也是因为不在一个学校，他高中读了一年好像就出外务工了。有时候过年的过年的时候会聚一聚.电话号码虽然通讯录里还存着,但却从未拔过号。我到现在也在为自己这种性格懊恼，从来不去主动联系别人，哪怕是我妈。都是每周固定打一通电话。其实倒也不是害怕与人交流，只是拿起电话都不知道从哪讲起。不知道莫名的一通电话是不是太唐突。</p>
<p>&nbsp;&nbsp; 现在仅存的两个没有隔阂的朋友也是那时认识的。一个复读后还在上大学。一个被我忽悠走上了和我相同的路。即使很久不联系，聚在一起也不会觉得尴尬，有啥事情说出口都会鼎力相助那种。我觉得这样才是真正意义上的朋友吧。</p>
<p>&nbsp;&nbsp; 工作以后就有了一个新的称呼:同事，一起共事，下班之后从来不过问的那种，自是谈不上交情。偶尔集体活动也是吃个饭,唱个k.唱k基本上是一堆人在那傻坐着，几个麦霸在那里自娱自乐。如果是碰上户外活动更是令人无语。前段时间公司组织去个植物园搞烧烤，一大帮人干坐在那里，等着别人生拾柴生火，生怕弄脏了双手。到最后组织活动都没多少人响应。倒不是说人的品德有多低下。只是感觉外面的大环境里人更自私。遇事多数明哲保身.&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; 换了几家公司,氛围最好的应该是上一家,呆了一年.一起看着自己付出了心血的游戏开始收费，形势有所好转，最后因为一些因素又土崩瓦解.情绪复杂。最终留在那里的只剩三个人。有时候在q群里互道近况。之前的项目苟延残喘.又开了新的项目,苦逼着.而调度到新公司的我们突然觉得留下的甚好.我记得走的时候和boss说的时候,boss语重心长地跟我讲:你还年轻,脚踏实地地干几年.到我这个年纪混得不会很差。boss的大多数话都没听讲去，有一句话倒一直记得:人失败了没什么，再爬起来，大不了重新再来。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 最终还是没有和哪位前辈和领导成为很好的朋友,可能是太年轻,也可能是太自负.只能说这种东西可遇而不可.</p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 儿时记忆 </tag>
            
            <tag> 良友 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于正版软件]]></title>
      <url>http://www.farwmarth.com/%E5%85%B3%E4%BA%8E%E6%AD%A3%E7%89%88%E8%BD%AF%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp; 很少有人说去买一个正版的操作系统,或者付费去买一个只有十几个字符串的license.我们的概念里很少去正视软件这种劳动果实。有这种想法和基调的人大概有两种:一是大多数人没有去自己费尽心血去开发一个软件。不知道为了几行核心代码会多熬多少个通宵。二是因为囊中羞涩，有时一个正版软件得花几百美元甚至更多。我也是此等苦逼之人。</p>
<a id="more"></a>
<p>&nbsp;&nbsp;&nbsp; 虽然经常用盗版软件，但是同样作为软件行业的一员，深知软件作者的辛苦。有时候写代码得熬到凌晨两三点。基本作息是2点睡觉。所以有时候软件不贵的情况下还是会去支持正版。</p>
<p>&nbsp;&nbsp;&nbsp; 我记得第一个买的正版软件是一个叫&lt;&lt;简繁大师&gt;&gt;的简体繁体互相转换的这么一个软件，之所以要买这个软件是因为公司的一个游戏要译成台湾版本。本来这个工作在项目前期就开始的，因为图项目速度，根本没有去考虑这一点，到这个时候项目已经相当庞大了，各种诟病，如果要手工一句句去翻译的会至少得花那么二十来天，而且容易出错。这个软件在同类我找过的软件中应该是最好的了，支持批量处理，速度很快，还可以转换整个目录，最大亮点的是自主研发的一个语义转换的引擎，通俗地讲就是不只是把简体转换成繁体，还会依旧台湾的口语习惯做一个纠正。最后买的是一个简体中文版的，售价是68.花了几天时候就把之前的工作给搞定了。这个正版工具让我用起来比其他盗版的东西更加踏实，心安体得一些，而且提高的工作效率真不是这68块所能企及的。</p>
<p>&nbsp;&nbsp;&nbsp; 还有一次有趣的经历是免费用的正版软件。做游戏开发大概都听到过一个叫TexturePacker的材质打包工具.这个工具是用来将小图拼接成一张大的材质的。售价是258人民币，我等屌丝对于这个价钱还是觉得略贵。不过这个老外作者提供了一个非常人道的途径可获取这个license.条件很简单:有一个成立的半年的博客。并且最近发了三篇文章。还有一些啥条件具体忘记了，给他发email后第二天就拿到了这个license.回了邮件里大致的让我写篇博文帮他介绍一下这个工具，如果用这个工具做出了什么好游戏可以放到他的网站上去展示。虽然最后我没拿这个好软件去做出什么好作品。但老外这种开拓的软件精神让我为之敬佩。放到国内几乎没有这样的开发者。(也许是接触的少)。所以说盗版软件猖獗，我觉得软件开发者在营销策略上也有一定的问题。如果也像这个老外一样提供一种渠道去和用户交流，做一些馈赠的工作。或许盗版的人也会有些不好意思。</p>
<p>&nbsp;&nbsp; 自己对盗版软件的态度是，如果实在是买不起的，用着盗版别到处张扬自己用着就行。如果确实是工作所需在承受范围内。买正版是最好的一种选择。对作者是一种尊重。也是对自己的一种尊重。</p>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[食物印象]]></title>
      <url>http://www.farwmarth.com/%E9%A3%9F%E7%89%A9%E5%8D%B0%E8%B1%A1/</url>
      <content type="html"><![CDATA[<h2 id="早餐"><a href="#早餐" class="headerlink" title="早餐"></a>早餐</h2><p>在广州呆了两年多，没吃到啥好吃的东西，多数都会带些甜味而且又不放辣椒，对于无长期吃惯了辣椒的我来说是种折磨。虽然有不少湘菜馆，越总是吃不出读书时代那种小炒的味道。</p>
<a id="more"></a>
<p>至于早餐更是不知道如何选择,满大街都是馒头包子油条,对油条是完全无感，自从高中吃过一次后再也没有碰过。刚上班那话还凑合着吃包子，每天早上起得比较早，到公司附近那个小巷子里买3块钱一份的小笼包，每次都都要撒上一把辣椒粉才能咽完，后来真的是吃腻了，开始寻觅新早餐。有天早晨在附近找了一家汤粉店,各种拉肠什么的,挑来挑去点了碗素面。等了大概十来分钟，面终于上来了，愕然. 真的是素面:一叶扁舟江上流的感觉。就两三根青菜漂在面汤上，没有丁点肉丝啊。自此就把早餐给戒了。</p>
<p>回想起读书那会，早餐那叫一个种类繁多，干拌面，鸡蛋卷，玉米，茶叶蛋，还有各种说不出名字的饼。当然面条必不少。特别是冬天那会，早上冷得哆嗦，经常是快迟到的时候到小餐馆里点完热乎乎的面，然后把老板的大半碗酸菜倒光，虎扒式结束早餐时候。其实面条倒是一般，那酸菜和辣椒酱才是让我们欲罢不能的原因。整个冬天基本上都是吃着面条拌酸菜度过的。</p>
<p>如果让我说出最喜欢的而且永远不会厌倦的食物，第一反应肯定是酸菜了。虽然外观不是那么可人,乌漆抹黑的，但是味道却让我流连。</p>
<h2 id="年少时的味道"><a href="#年少时的味道" class="headerlink" title="年少时的味道"></a>年少时的味道</h2><p>生长在农村的好处就是对土地和食物有更直观的印象.我知道种子是如何一步步变成稻谷,粮食里渗透了多少汗水.菜地里的菜又是如何在肥沃的土地上萌芽到长出累累的果实.所以对于食物有很多的故事.</p>
<p>那时候一到夏天就成了孩子的季节,我会带着小伙伴到后山,把家里的锅碗瓢盆,油盐味精都带上,打灶生火,美其名曰”野炊”</p>
<p>.烧饭用的是一个叫”炉罐”的器皿,放上两勺菜油再加点盐.然后到山上折一些小木棍,捆上些易燃的松叶用打火机点燃开始野炊之旅.不一会就会炉里就会飘出阵阵香味.因为加上菜油的缘故这饭比在锅里面煮的还要香.然后几个小伙伴就狼吞虎咽了.饭饱之后就在这山坡上的松树下聊会天.</p>
<p>下雨的时候有时候会在山上采蘑菇,下雨过后蘑菇会从潮湿的地表钻出来,一般长在蕨类植物下面或者是一些沟壕的松树底下.蘑菇又分为很多种类.有茶树菇,四季菇,板粟菇等等.颜色也五花八门,有黑色的,褐色的,白色的.有一些却不能吃,如果颜色长得特别鲜艳,那么这是危险的信号,属于不能吃的一类.采蘑菇的过程就像发现新大陆一样.要有耐心.容易发现的自然都身材姣小.那些大点的蘑菇一般都长得较隐蔽,要翻开蕨类植物或者苔藓.采完后可以现炒,也可以晒干储存起来.</p>
<p>夏天还有一项必不可少的活动那就是捕鱼了,我们有一种捕鱼的土方法:就是用榨完油的茶树渣煮沸,然后把这些药水撒到河里.那时候门前的小河里小鱼很多.到中午太阳最晒的时候.我和我哥会用桶把这个熬出来的药水从河上游均匀地撒到各个河道上.然后在出水口堵上抓鱼用的网.过10来分钟.鲤鱼,鲫鱼这种小鱼就会漂出水面.很多小伙伴就会加入这个捕鱼的行列.整个小河里就热闹起来,小伙伴们不停地在水里窜动.想逮着大鱼.大点的鱼一般过了半小时后会游到浅水区去换水.茶树渣的药效会让鱼不适应.然后逮到一条大鱼后,小河里就像炸开了锅,争先恐后地围观.这种乐趣让我们乐此不疲.每年暑假都要经历好几次这样的高潮.前几年回老家一趟后甚是失望.小河被各色生活垃圾填满.河身变窄.鱼儿变点影子也看不着了.</p>
<h2 id="有些东西是只能去怀缅"><a href="#有些东西是只能去怀缅" class="headerlink" title="有些东西是只能去怀缅."></a>有些东西是只能去怀缅.</h2><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image17.png" alt="image"></p>
<blockquote>
<p>(以前在公司的小区里无意中找到的葱油饼,1块一个.这算是在广州吃的比较喜欢的食物中的一种.易饱,吃完有些葱油的香味.)</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[摄影入门]]></title>
      <url>http://www.farwmarth.com/%E6%91%84%E5%BD%B1%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>摄影可以看作是绘画的一个缩影，共通的地方有构图，线条和层次感。所谓构图就是将点线面，色彩，明暗合理安排。
摄影教程里的什么九宫格构图，对角线构图在特定的场景下拍摄会有很好的效果，但是不要拘泥于这个构图规则，选择自己感觉舒服的角度就可以了。
摄影包括很多种，风光，人像，纪实，商业，建筑，静物，还有衍生出来的延时摄影。摄影里最重要的元素之一就是光线,不同的光强度和光的照射角度可以让照片产生风格迥异的效果。清晨和傍晚是光线比较柔软的时候。风光摄影要注重层次感。而人像摄影则要注重人物的神态和情绪。
</code></pre><a id="more"></a>
<h3 id="几点建议"><a href="#几点建议" class="headerlink" title="几点建议:"></a>几点建议:</h3><ul>
<li>不要执着于器材,好的器材和只是辅助工具，但不是决定性因素，手机也能拍摄出好照片</li>
<li>可以先用手机来练习构图，然后逐步学习单反这样的器材</li>
<li>拍摄时除了主体对象也要注重背景的搭配</li>
<li>尝试浏览不同的风格类型的照片，总是看一种风格会有审美疲劳</li>
<li>多拍，然后每次只保留一两张照片</li>
<li>多看别人拍摄的照片，然后就会有喜好形成自己的风格。比如我就喜欢静物，建筑，风光这种</li>
</ul>
<h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><ul>
<li>目前我觉得拍照这种视觉媒介带来的生活上的两种功效，一是好玩,像男巫(zach king)一样把脑洞大开的idea付诸实现,然后看完会觉得:It’s cool,然后自己也激发了这方面的兴趣。另一方面就是最拍照最原始的意义,作为一种回忆与情绪的载体。就像你看到自己很多前年胖嘟嘟穿着小军装,抱着花盆站在老菜园里一样.那块地可能已经面目全非,那咔嚓一声截取的画面却一直在这里。</li>
</ul>
<h2 id="资料网站"><a href="#资料网站" class="headerlink" title="资料网站"></a>资料网站</h2><h3 id="概念学习"><a href="#概念学习" class="headerlink" title="概念学习"></a>概念学习</h3><ul>
<li>佳能官方入门 <a href="http://www.canon.com.cn/specialsite/ds_abcbook/index.html" target="_blank" rel="noopener">http://www.canon.com.cn/specialsite/ds_abcbook/index.html</a><ul>
<li>如何提高手机摄影水平<br><a href="http://www.zhihu.com/question/20921841/answer/23467328?utm_source=weibo&amp;utm_medium=weibo_share&amp;utm_content=share_answer&amp;utm_campaign=share_button" target="_blank" rel="noopener">http://www.zhihu.com/question/20921841/answer/23467328?utm_source=weibo&amp;utm_medium=weibo_share&amp;utm_content=share_answer&amp;utm_campaign=share_button</a></li>
</ul>
</li>
</ul>
<h3 id="图片欣赏"><a href="#图片欣赏" class="headerlink" title="图片欣赏"></a>图片欣赏</h3><ul>
<li>500px<br><a href="https://500px.com/" target="_blank" rel="noopener">https://500px.com/</a></li>
<li>猫的树<br><a href="http://cattree.cn/" target="_blank" rel="noopener">http://cattree.cn/</a></li>
<li>蜂鸟网<br><a href="http://www.fengniao.com/" target="_blank" rel="noopener">http://www.fengniao.com/</a></li>
<li>图虫网<br><a href="http://tuchong.com/" target="_blank" rel="noopener">http://tuchong.com/</a></li>
<li>胶片的味道<br><a href="http://letsfilm.org/" target="_blank" rel="noopener">http://letsfilm.org/</a></li>
<li>lofter<br><a href="http://danielwoo.lofter.com/" target="_blank" rel="noopener">http://danielwoo.lofter.com/</a><br><a href="http://l-j-feng.lofter.com/" target="_blank" rel="noopener">http://l-j-feng.lofter.com/</a><br><a href="http://feel1982.lofter.com/" target="_blank" rel="noopener">http://feel1982.lofter.com/</a><br><a href="http://yz1992.lofter.com/" target="_blank" rel="noopener">http://yz1992.lofter.com/</a><br><a href="http://wt0908.lofter.com/" target="_blank" rel="noopener">http://wt0908.lofter.com/</a><br><a href="http://zclqs.lofter.com/" target="_blank" rel="noopener">http://zclqs.lofter.com/</a><br><a href="http://zhangneixian.lofter.com/" target="_blank" rel="noopener">http://zhangneixian.lofter.com/</a><br><a href="http://mz1717.lofter.com/" target="_blank" rel="noopener">http://mz1717.lofter.com/</a></li>
</ul>
<h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p>下载地址: <a href="http://pan.baidu.com/s/1hqgzI76" target="_blank" rel="noopener">http://pan.baidu.com/s/1hqgzI76</a></p>
<ul>
<li>摄影笔记(最开始看这本书入门)<br>笔记摘录: <a href="http://farwmarth.com/2013/09/16/%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%20%E6%91%98%E5%BD%95/" target="_blank" rel="noopener">http://farwmarth.com/2013/09/16/%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%20%E6%91%98%E5%BD%95/</a><ul>
<li>自然光人像摄影指南].[美]唐·马.彩图版</li>
<li>[摄亦有道2：摄影构图完全攻略].(日)山口高志</li>
</ul>
</li>
</ul>
<h2 id="apps-amp-软件"><a href="#apps-amp-软件" class="headerlink" title="apps&amp;软件"></a>apps&amp;软件</h2><h3 id="图库"><a href="#图库" class="headerlink" title="图库"></a>图库</h3><ul>
<li>instagram<br>推荐账号:<br><a href="https://instagram.com/helloemilie" target="_blank" rel="noopener">https://instagram.com/helloemilie</a><br><a href="https://instagram.com/bythebrush" target="_blank" rel="noopener">https://instagram.com/bythebrush</a><br><a href="https://instagram.com/monchouchou" target="_blank" rel="noopener">https://instagram.com/monchouchou</a><br><a href="https://instagram.com/morganbrechler" target="_blank" rel="noopener">https://instagram.com/morganbrechler</a><br><a href="https://instagram.com/blackpigment" target="_blank" rel="noopener">https://instagram.com/blackpigment</a><br><a href="https://instagram.com/coffeewithme" target="_blank" rel="noopener">https://instagram.com/coffeewithme</a><br><a href="https://instagram.com/aminuteawayfromsnowing" target="_blank" rel="noopener">https://instagram.com/aminuteawayfromsnowing</a><br><a href="https://instagram.com/missanmo" target="_blank" rel="noopener">https://instagram.com/missanmo</a><ul>
<li>lofter</li>
<li>500px</li>
</ul>
</li>
</ul>
<h3 id="图片编辑app"><a href="#图片编辑app" class="headerlink" title="图片编辑app"></a>图片编辑app</h3><ul>
<li>VSCO Cam<ul>
<li>Snapseed</li>
<li>PS Touch</li>
</ul>
</li>
</ul>
<h3 id="图片编辑软件"><a href="#图片编辑软件" class="headerlink" title="图片编辑软件"></a>图片编辑软件</h3><ul>
<li>photoshop<ul>
<li>lightroom</li>
</ul>
</li>
</ul>
<h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><p><img src="http://farwmarth.bestnewbee.com/images/shooter.png" alt=" shooter"></p>
]]></content>
      
        <categories>
            
            <category> shoot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[摄影笔记 摘录]]></title>
      <url>http://www.farwmarth.com/%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%20%E6%91%98%E5%BD%95/</url>
      <content type="html"><![CDATA[<h2 id="一-相机分类"><a href="#一-相机分类" class="headerlink" title="一 相机分类:"></a>一 相机分类:</h2><p><strong>一 按取景系统分 :</strong></p>
<ul>
<li>平视旁轴取景相机 (人眼与ccd感光器会有视差)<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image8.png" alt="image"></li>
<li>单反(无视差)<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image9.png" alt="image"></li>
</ul>
<a id="more"></a>
<p><strong>二 按画幅:</strong></p>
<ul>
<li>全画幅：感光器尺寸为36mm*24mm ,相当于135单张胶卷尺寸</li>
<li>Aps画幅:<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image10.png" alt="image"></li>
</ul>
<h2 id="二-镜头"><a href="#二-镜头" class="headerlink" title="二 镜头"></a>二 镜头</h2><p>镜头的重要参数: <code>焦距,光圈,特性</code>   </p>
<h3 id="焦距"><a href="#焦距" class="headerlink" title="焦距"></a>焦距</h3><p><strong>焦距</strong> : 镜头中心点到感光器平面的距离</p>
<h4 id="焦距与视角"><a href="#焦距与视角" class="headerlink" title="焦距与视角"></a>焦距与视角</h4><p>每个镜头都有各自的焦距，焦距不同拍摄范围也不同。简单地说，焦距越短（数字越小），<br>拍摄画面所能容纳的范围越广；焦距越长（数字越大），拍摄画面所能容纳的范围越窄，类<br>似于望远镜。</p>
<p>![image]<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image11.png" target="_blank" rel="noopener">http://farwmarth.bestnewbee.com/images/uploads/2013/09/image11.png</a>)</p>
<p>非全画幅会命使镜头的视角变小:<br>举个例子200mm焦距的全画幅视角为12°，如果将200mm的镜头装在这三家APS - C<br>画幅的相机上，等效焦距就变成了300mm，视角就变成了8 °15′。<br>焦距一般可分为广角、中焦和摄远镜头。<br>按照135 相机全画幅视角：</p>
<ul>
<li>24mm 以下的焦距可称之为超广角。</li>
<li>24- 28mm 的焦距为标准广角。</li>
<li>28- 35mm 的焦距为一般广角。</li>
<li>35- 70mm 的焦距为中焦。</li>
<li>70- 135mm的焦距为中长焦。</li>
<li>135 - 400mm的焦距为摄远，也叫长焦。</li>
<li>400mm以上的焦距为超长焦。</li>
<li>50mm 因为视角与人眼一致，所以50mm 的定焦镜头就是标准镜头，简称标头。 </li>
</ul>
<h4 id="焦距与透视"><a href="#焦距与透视" class="headerlink" title="焦距与透视"></a>焦距与透视</h4><p>透视效果是一个常常被大家忽略的由镜头焦距产生的效果。尽管实际情况是透视与焦距<br>无关，只与拍摄距离有关。但是作为新手，可以简单地记作透视就是画面中的拍摄对象会产<br>生近大远小的视觉效果。广角镜头焦距短，在画面上表现相同大小的主体时拍摄距离更近，<br>产生更强烈的透视感。反之，焦距越长，在画面上表现相同大小的主体时拍摄距离更远，透<br>视感越弱。<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image12.png" alt="image">  </p>
<h3 id="光圈"><a href="#光圈" class="headerlink" title="光圈"></a>光圈</h3><p><code>光圈值F ＝焦距／孔径</code><br>焦距不变，孔径越大，光圈值越小，镜头越明亮。孔径不变，焦距越短，光圈值越小，镜头越明亮。<br><code>景深:</code>清晰范围越大我们说是景深越深，清晰范围越小景深越浅。</p>
<p>对于景深，主要由三个参数决定。</p>
<ol>
<li>光圈与景深的关系。光圈越大景深越浅。  </li>
<li>焦距与景深的关系。焦距越长景深越浅  </li>
<li>拍摄距离与景深的关系。拍摄距离越近，景深越浅。（拍摄距离就是相机到被摄体的距离）</li>
</ol>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/35525608.jpg" alt="35525608"></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image13.png" alt="image"></p>
<h4 id="镜头购买TIPS："><a href="#镜头购买TIPS：" class="headerlink" title="镜头购买TIPS："></a>镜头购买TIPS：</h4><ol>
<li>在资金允许的情况下机身尽量选择全画幅。 </li>
<li>避免以后更换镜头损失更大，镜头尽量选择专业级的。  </li>
<li>为以后升级考虑，镜头尽量要全画幅的。</li>
<li>最大光圈越大越好。</li>
<li>焦距变焦比最好不要超过3 倍。最多不要超过5 倍。  </li>
<li>第一支镜头配合机身的等效焦段尽量涵盖广角和中焦。</li>
</ol>
<h2 id="三-影调"><a href="#三-影调" class="headerlink" title="三 影调"></a>三 影调</h2><p><code>影调</code>:影调就是指一张照片的明暗程度</p>
<p><code>曝光补偿</code>:对曝光的干预的一种方式.曝光补偿的单位是EV，当光标处于标尺的0 刻度时，就是0EV ，光标越向正方向移动，影调越高，光标越向负方向移动影调越低。中间调＝18% 灰＝0EV</p>
<h3 id="相机的测光系统"><a href="#相机的测光系统" class="headerlink" title="相机的测光系统"></a>相机的测光系统</h3><p>相机的测光系统主要可以分为四种。</p>
<ul>
<li><strong>平均测光：</strong>相机取景中总体曝光的平均值。对于初学者来说很难理解。好吧，做个比喻。3 名评委给超女打分。平均测光就是平均分。我从来不用。 </li>
<li><strong>点测光：</strong>相机取景中中心点周围极小一部分区域的曝光值。3 名评委给超女打分。我只看包小᷿老师或者杨二的分数。一般用于对于Ḁ个区域的精确曝光。比如我只要阴影下人脸的曝光正常，对于其他地方曝光无所谓。  </li>
<li><strong>中央重点测光：</strong>相机取景中心点测光，兼顾平均测光。3 名评委给超女打分。主要听杨二的评价，但是其他人的也听。我从来不用这种模式。  </li>
<li><strong>评价测光：</strong>将取景区域分为多个分区，分别计算曝光，再加成。最高科技的算法。3 名评委给超女打分。包小᷿老师最专业，着重考虑；杨二最不专业，可听可不听；高晓松只要不是评价曾哥的都可以听听。我基本上绝大多数情况下都将相机调整至这个测光方式上。希望你也是。 </li>
</ul>
<p><code>曝光量</code>:光线进入相机的多少</p>
<p><code>感光度</code>:感光器对光的敏感程度.ISO 值越高，感光器对光线越敏感。在数码时代CCD和CMOS 的感光度越高，CCD和CMOS 越容易被电信号干扰，照片的噪点越多，所以看起来也越粗糙。细腻照片看起来更好，所以在拍照时摄影师都尽量选择较低的感光度，也就是ISO100<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">曝光量＝感光器接收光的速度×曝光时间</span><br><span class="line">感光器接收光的速度＝环境光的强度×光圈 -----&gt;</span><br><span class="line">曝光量＝环境光×光圈×快门(快门越快,曝光时间越短,曝光量越小) </span><br><span class="line">光圈值与曝光量成反比。 光圈与曝光量成正比 </span><br><span class="line">所以针对光圈定义的混乱，大家只要记住光圈数值越小光圈越大就行了</span><br></pre></td></tr></table></figure></p>
<h2 id="四-曝光组合"><a href="#四-曝光组合" class="headerlink" title="四 曝光组合"></a>四 曝光组合</h2><ul>
<li><strong>“A”档（Aperture Priority）</strong>：光圈优先。手动调节光圈，机器自动设置 快门。有利于<strong>景深控制</strong>。</li>
<li><strong>“S”档（Shutter Priority）</strong>：快门优先。手动调节快门，机器自动设置光 圈。拍摄<strong>运动、瀑布等可用</strong>。</li>
<li><strong> “M”档（Manual Exposure）</strong>：完全手动调节光圈、快门。充分发挥你 用光的创造性。</li>
<li>有的机器有一个“完全傻瓜”的“Auto”档。 P 档和它的不同之处在于 P 档 可以手动调节曝光补偿等参数。而Auto 档则是“纯傻”。 A 档能简单地控制镜头的光圈，从而控制成像质量，和想要的景深效果 M 档在高速闪光和B 门时使用 T 档在追拍和慢速闪光时使用 P 档算是准傻瓜档吧 光圈优先就是手动定义光圈的大小，然后利用相机的测光获取相应的快 门值</li>
</ul>
<h2 id="五-光线"><a href="#五-光线" class="headerlink" title="五 光线"></a>五 光线</h2><p><strong>方向:</strong>光源方向可以分为四种：</p>
<ul>
<li>顺光。光源在被摄体正面。</li>
<li><p>侧光。光源一般在被摄体正面45°。可用于人物造型，使人物看起来有立体感<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image14.png" alt="image"></p>
</li>
<li><p>90°侧光。光源一般在被摄体90°位置。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image15.png" alt="image"></p>
</li>
<li>逆光。光源在被摄体背面。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image16.png" alt="image"></li>
</ul>
<h2 id="六-色温"><a href="#六-色温" class="headerlink" title="六  色温"></a>六  色温</h2><p><code>色温</code>:还原物体的真实色彩</p>
<ul>
<li>烛光的色温大概是1900K 。那张白纸放到烛光下就是橙黄色的。</li>
<li>家用白炽灯的色温大概是2800K 。那张白纸放到白炽灯光下就是黄色的。</li>
<li>日光的色温大概是5500K 。那张白纸放到日光下就是白色的。</li>
<li>频闪灯的色温大概是6000K 。那张白纸放到频闪灯的闪光下就会特别白。</li>
<li>荧光灯 色温大概是7000K 。那张白纸放到荧光灯下就是白色偏蓝的。</li>
<li>天光的色温大概是11000K。那张白纸如果只反射天光就是蓝色的。</li>
</ul>
<p>所以色温越低，白色越显得发红；色温越高，白色越显得发蓝。 尽管红色是暖色调，蓝色是冷色调，但一定是发红色温低，发蓝色温高。白平衡:用来告诉相机修正真实颜色安全快门速度作为一个初学者的你，要尽量把快门速度保证在焦距2 倍的倒数之上。举例来说当你以30mm 的焦距进行拍摄的时候，你的快门速度就应该是焦距二倍的倒数，也就是最慢也应该在1/60 秒。当你用200mm的长焦镜头来拍摄的时候，最慢应该用1/400 秒的速度拍摄。随着你的摄影技术不断ᨀ高，你端相机的稳定性会越来越好。这时你的安全快门速度可以放慢到焦距的倒数。也就是说，你用30mm 的焦距拍摄时，你的快门速度只要比1/30 秒快就可以了，而你以200mm焦距拍摄的时候，快门速度至少要达到1/200 秒。 </p>
<p>满足我们的影调。这时候只有三种办法能够保证你的影调。</p>
<ul>
<li><strong>延长曝光时间,并固定相机.</strong></li>
</ul>
<p>如果手抖不可避免,我们可以将相机固定在这些不会发生位移的物体上,这样就可以放慢快门<br><code>优点</code>：最自然的取得需要影调的方式。<br><code>缺点</code>：被摄体可能会移动，所以依然可能造成模糊。<br><code>适用范围</code>：静物的拍摄   </p>
<ul>
<li><strong>使用闪光灯</strong></li>
</ul>
<p>增加照明光源，就可以保证曝光量的充足。<br><code>优点</code>：最直接的取得需要影调的方式。<br><code>缺点</code>：改变了场景光，可能会出现不自然的光影效果。<br><code>适用范围</code>：可以使用闪光灯的场景。</p>
<ul>
<li><strong>增加感光度</strong></li>
</ul>
<p>之前一直说一般情况下不要改变感光度，但是也许这就是不一般的情<br>况了。有人说增加感光度不是会降低图像质量吗？其实这就要你做个选择了。是要图像质量<br>还是要一张清晰的照片？如果是我，我会毫不犹豫地选择后者。因为一张模糊的照片，就算<br>有再高的图像质量也是一张废片。<br><code>优点</code>：最简单的取得需要影调的方式。<br><code>缺点</code>：降低了图像质量<br><code>适用范围</code>：不需要精美印刷的照片。</p>
]]></content>
      
        <categories>
            
            <category> shoot </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[随地乱吐槽]]></title>
      <url>http://www.farwmarth.com/%E9%9A%8F%E5%9C%B0%E4%B9%B1%E5%90%90%E6%A7%BD/</url>
      <content type="html"><![CDATA[<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/20090901_492a8b90c69e2d830a8e7pKluQREBo9d.jpg" alt="20090901_492a8b90c69e2d830a8e7pKluQREBo9d"></p>
<blockquote>
<p>我的上帝,请赐予我宁静去接受我不能改变的一切，请赐予我勇气，去改变我所能改变的一切，并赐予我智慧，去分辨两者的不同.</p>
</blockquote>
<a id="more"></a>
<h3 id="这三月"><a href="#这三月" class="headerlink" title="这三月"></a>这三月</h3><p> 近三个月没有写博客,到七月份才继续写了些新东西.主要原因是换了一个工作地点.每天疯狂加班.十一点,一点.刚开始还斗志旺盛,每天学习新的东西，赶着新功能，每天回家洗澡倒头就睡。消磨了三个月，最初的新奇感觉也渐渐消退。团队里的人数慢慢扩大,三个月从最初我们五个人增长至二十几个,也有一起共事很久的同事离开.</p>
<p>原因不言而喻长期地熬夜每天都没什么精神。团队的扩增却并非是一场胜利.一句话总结这三个月就是:小收成，瞎忙活.</p>
<h3 id="消失的专注力"><a href="#消失的专注力" class="headerlink" title="消失的专注力"></a>消失的专注力</h3><p> 近两个星期都处在一种游离状态,精神恍惚。心情浮躁，coding效率极低。像又到了女生的例假时间。完全没法静下心来写些东西。晚上经常熬到四点才能睡着。我想每个人都应该有这样的情况吧，不同时期都心情的起伏跌宕.这倒让我想起来读书时候那段时间，因为干扰的事物少,可以心无旁骛地去做一件事情.</p>
<p> 初中的时候上了电路课后就开始拆东西，拆复读机，把那个小型马达用来做船模的电机，拆电子手表,虽然到最后都拆坏了。但那种一折腾一下午那种专注力让我乐此不疲。当你认真去做一件事情的时候，时间会过得相当的快。譬如高中不听课去看小说。看电脑杂志。甚至是看旧书店里买来的二手黑客杂志，即使看不懂也会兴趣盎然，上课的时候会边看杂志看做笔记。比起那些化学公式，物理定律，这些杂志对我更有吸引力.</p>
<p> 不得不说20岁以前是学习和摸索的黄金时期，因为干扰的事物较少，承担的责任和风险也要小很多。有充沛的时间去干自己喜欢的事情。20岁以后就会有各种破事缠身。</p>
<h3 id="锻炼身体，增强体质"><a href="#锻炼身体，增强体质" class="headerlink" title="锻炼身体，增强体质"></a>锻炼身体，增强体质</h3><p> 最近微博上出现的猝死的消息略多，大半是做IT的，长期的加班身体拖成了废铁.前几天听了一期大狗熊的播客，设计师的健康问题，大致分析了IT行业从业人员的健康现状和应对策略，分享一下。</p>
<p> It行业猝死平均年龄为:37.5岁</p>
<p> 身体疾病的原因:加班,肥胖,久坐电脑前,饮食习惯不良喜欢吃辛辣油炸食品, 运动少,夜猫型晚上不睡白天补觉，喜欢烟酒, 抑郁,生活压力大.</p>
<p> 身体疾病的征兆: 疲劳,心悸,胸痛,胸闷</p>
<p> 应对策略:清淡低脂食物,每天至少6小时的睡眠,适当运动,良好心态,扩大交际圈多交朋友,适量烟酒,扩大自己的兴趣爱好.</p>
<p> 反观自己的生活状态,中枪n次,经常加班就无需再说了,除了睡觉时间基本上是对着电脑,因为实在是再受不了每天十一点的加班，和boss去谈判,约定是每天9点下班，但是得在一个短期限内完成任务，他是理论是:任务完成度=工作时间长度,实在是不敢苟同.关于运动量,现在倒是每周有两天晚上有活动,一是台球,一是羽毛球,周末基本上是窝在家里懒得动.</p>
<h3 id="podcast"><a href="#podcast" class="headerlink" title="podcast"></a>podcast</h3><p> 最近发现的新大陆.</p>
<p> 刚开始是听Teahour.fm 感觉这类访谈这类播客挺好玩的,然后顺藤摸瓜摸出了一大把. 有科技类，也有生活搞笑类的.这种媒介的好处是不用花时间去阅读,可以在线或者下载在手机上听,适合上班,公交上,或者在旅行途中. 听了一段时间也萌发一个想法:可以以播客为载体去组织一个社群,然后可以商业化.这样的用户比起微博上的粉显然要优质得多。这个领域应该好像还少人涉足。</p>
<ul>
<li>Teahour.fm: 面向程序员的访谈节目</li>
<li>iBuick :ios程序开发,&lt;<os x="" lion="" 高手进阶="">&gt;作者</os></li>
<li>tinyfool: ios开发</li>
<li>大狗熊有话要说: ios开发者,生活，苹果</li>
<li>赵畅不误: 屌丝不哭,站起来撸</li>
<li>友的聊 : 科技播客,游戏,电影,数码产品</li>
<li>大内密谈: 生活播客，美食，旅行，音乐，艳遇</li>
<li>坏蛋调频: 无节操,无下限.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 一个人的喃喃自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[cocos2d-x 骨骼动画]]></title>
      <url>http://www.farwmarth.com/cocos2d-x%20%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<h2 id="何谓骨骼动画"><a href="#何谓骨骼动画" class="headerlink" title="何谓骨骼动画?"></a>何谓骨骼动画?</h2><p> 骨骼动画包括两部分:蒙皮和系列相关联的骨头.在时间线上蒙皮会跟随骨骼的位置改变位置形成动画。 </p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image.png" alt="image"> </p>
<a id="more"></a>
<h2 id="骨骼动画的优势"><a href="#骨骼动画的优势" class="headerlink" title="骨骼动画的优势?"></a>骨骼动画的优势?</h2><ol>
<li>骨骼绑定可以让动画更精准，更真实自然，并可通过程序动态控制</li>
<li>动画各部分采用拼接方式，占用位图／内存资源少</li>
<li>骨骼显示对象与骨骼的逻辑分离，可在不影响动画播放的情况下动态更换</li>
</ol>
<h2 id="如何制作骨骼动画"><a href="#如何制作骨骼动画" class="headerlink" title="如何制作骨骼动画?"></a>如何制作骨骼动画?</h2><p> 这个是设计人员的活，flash cc 中已经取消了骨骼动画,flash cs6中还有。<br> 详解：<a href="http://help.adobe.com/zh_CN/flash/cs/using/WS58BD3A02-DA25-488f-B534-AE5463A24833.html" target="_blank" rel="noopener">http://help.adobe.com/zh_CN/flash/cs/using/WS58BD3A02-DA25-488f-B534-AE5463A24833.html</a><br>　　　　<a href="http://www.adobe.com/cn/devnet/flash/articles/character_animation_ik.html" target="_blank" rel="noopener">http://www.adobe.com/cn/devnet/flash/articles/character_animation_ik.html</a></p>
<h2 id="DragonBones"><a href="#DragonBones" class="headerlink" title="DragonBones"></a>DragonBones</h2><p>　　DragonBones是一套开源的 2D骨骼动画框架和工具，它包含了基于Flash Pro的骨骼动画编辑面板.DragonBonesDesignPanel及骨骼动画ActionScript框架。它可以让开发者运用熟悉的Flash Pro元</p>
<p>件及时间轴编辑方式，快速创建2D骨骼动画，并运用到Flash或其他技术的应用中.DragonBones在cocoStudio适配下可以用于cocos2d-x.DragonBones快速指南:<a href="http://dragonbones.github.io/getting_started_cn.html DragonBones" target="_blank" rel="noopener">http://dragonbones.github.io/getting_started_cn.html DragonBones</a></p>
<p>DragonBone and cocos2d-x </p><p> 1 <a href="http://zengrong.net/post/1915.htm" target="_blank" rel="noopener">zengrong</a>修改的DragonBone插件，为cocos2d-x专用.下载地址: <a href="http://zengrong.net/download/115/" title="http://zengrong.net/download/115/" target="_blank" rel="noopener">http://zengrong.net/download/115/</a> </p><p> 2 导出zip格式。 </p><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image1.png" alt="image">  </p><p>3 导出的zip分为两部分，一个xml文件包括骨骼的信息,以及导出的图片。 </p><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image2.png" alt="image">  </p><p>4 将zip解压,打开cocostudio动作编辑器.导入flash项目，要选择解压的skeleton_and_texture.xml </p><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image3.png" alt="image">  </p><p></p>
<p>5通过cocostudio导出的包括三个文件</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image4.png" alt="image"> </p>
<p>6 在代码中使用<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CCArmatureDataManager::sharedArmatureDataManager()-&gt;addArmatureFileInfo(<span class="string">"warr0.png"</span>, <span class="string">"warr0.plist"</span>, <span class="string">"warr.ExportJson"</span>);</span><br><span class="line">CCArmature *armature = CCArmature::create(<span class="string">"warr"</span>);</span><br><span class="line">armature-&gt;getAnimation()-&gt;playByIndex(<span class="number">3</span>);</span><br><span class="line">armature-&gt;setScale(<span class="number">0.5f</span>);</span><br><span class="line">armature-&gt;setPosition(ccp(visibleSize.width * <span class="number">0.5</span>, visibleSize.height * <span class="number">0.5</span>));</span><br><span class="line"><span class="keyword">this</span>-&gt;addChild(armature,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></p>
<p>要注意的是CCArmature::create(“warr”);这个要在ExportJson中描述的name一样</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image5.png" alt="image"><br> 运行效果</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/09/image6.png" alt="image"> </p>
<p><strong>参考:</strong><br> <a href="http://zengrong.net/post/1915.htm" target="_blank" rel="noopener">http://zengrong.net/post/1915.htm</a><br> <a href="http://zengrong.net/post/1911.htm" target="_blank" rel="noopener">http://zengrong.net/post/1911.htm</a></p>
]]></content>
      
        <categories>
            
            <category> cocos2d-x </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[抓抓包]]></title>
      <url>http://www.farwmarth.com/%E6%8A%93%E6%8A%93%E5%8C%85/</url>
      <content type="html"><![CDATA[<h2 id="WPE-PRO"><a href="#WPE-PRO" class="headerlink" title="WPE PRO"></a><a href="http://wpepro.net/" target="_blank" rel="noopener">WPE PRO</a></h2><p>基于进程的抓包工具.强大的网络封包编辑器，wpe可以截取网络上的信息，修改封包数据，是外挂制作的常用工具</p>
<p>还没研究怎么弄外挂，先拿来看看软件的get,post数据.如七色追剧助手。<br><a id="more"></a><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image13.png" alt="image"></p>
<p>Target program : 选择要抓的进程,然后点黑色箭头就可以启动抓包了。</p>
<p>软件发送网络请求后，停止抓包，可以看到一些数据:</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image14.png" alt="image"></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image15.png" alt="image"></p>
<p>可以看到请求的资源和参数。以及返回.这样相当我们可以拿到一个api.如下:</p>
<p><a href="http://www.7se.com/sp?username=dd&amp;keyWord=%E6%81%A9%E8%B5%90%E4%B9%8B%E5%9C%B0" target="_blank" rel="noopener">http://www.7se.com/sp?username=dd&amp;keyWord=%E6%81%A9%E8%B5%90%E4%B9%8B%E5%9C%B0</a></p>
<h2 id="WSExplorer"><a href="#WSExplorer" class="headerlink" title="WSExplorer"></a>WSExplorer</h2><h2 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a><a href="http://www.wireshark.org/download.html" target="_blank" rel="noopener">Wireshark</a></h2><p>基于网卡的封包工具.是一个网络封包分析软件,winreshark并非一个入侵软件.wireshark的开发简史也有点意思,原名为Ethereal,他妈人为GeraldCombs,97年开始开发，中断过几次开发后，在98年发了每一版本，然后combs收到世界各地的修补程式和建议，陆续有很多人参与开发，包括教师等超过千人参与过开发，后因商标问题更名为wireshark.从图标可以看出是一只鲨鱼的背鳍。呃，废话太多了。。</p>
<h3 id="先来看看过滤器-过滤器分两种"><a href="#先来看看过滤器-过滤器分两种" class="headerlink" title="先来看看过滤器,过滤器分两种"></a>先来看看过滤器,过滤器分两种</h3><ul>
<li><strong>捕捉过滤器(CaptureFilter):控制捕捉的数据大小</strong></li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image16.png" alt="image"></p>
<ul>
<li>Protocol(协议): 可能的值ether, fddi, ip, arp, rarp, decnet, lat, sca, moprc, mopdl, tcp ,udp</li>
<li>Direction(方向):可能的值: src(源), dst(目的), src and dst, src or dst</li>
<li>Host(s):可能的值:net, port(端口), host(ip), portrange</li>
<li>Logical Operations(逻辑运算):not ,and,or</li>
</ul>
<p>例子:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tcp dst port 8080 目的tcp端口为8080的封包</span><br><span class="line">dst host 42.121.110.83 目的ip为42.121.110.83的封包</span><br><span class="line">ether host e0-05-c5-44-b1-3c 捕捉此mac地址的封包</span><br><span class="line">src portrange 2000-2500 来源在此端口范围的封包</span><br><span class="line">dst host 42.121.110.83 and dst port 8080 目的ip为42.121.110.83,端口为8080的封包</span><br><span class="line">http &amp;&amp; ip.dst == 45.32.254.126</span><br></pre></td></tr></table></figure></p>
<ul>
<li>显示过滤器(DisplayFilter): 定位和缩小数据</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image17.png" alt="image"></p>
<p>Comparison operators （比较运算符）:</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image18.png" alt="image"></p>
<p>例子:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip.addr == 10.1.1.1 //显示来源或目的IP地址为10.1.1.1的封包。</span><br><span class="line">ip.src != 10.1.2.3 or ip.dst != 10.4.5.6 //显示来源不为10.1.2.3或者目的不为10.4.5.6的封包。</span><br><span class="line">tcp.port == 25 //显示来源或目的TCP端口号为25的封包。</span><br><span class="line">tcp.dstport == 25 //显示目的TCP端口号为25的封包。</span><br></pre></td></tr></table></figure></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image19.png" alt="image"></p>
<p>表达式正确背景为绿色，错误会为红色.</p>
<h4 id="开始抓包"><a href="#开始抓包" class="headerlink" title="开始抓包"></a>开始抓包</h4><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image20.png" alt="image"></p>
<p>捕捉时要选择指定的网上，可以指定捕捉过滤器，我这里还是拿七色追剧助手为便，这个过滤器的意思是目的地址ip为112.82.244.196的封包. 如果要把抓取的包数据保存成文件，可以填写caputure files. 点击start开始抓包。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image21.png" alt="image"></p>
<p>tcp的三次握手</p>
<p><strong>1. (Client) –&gt; [SYN] –&gt; (Server)</strong></p>
<p>假如Client和Server通讯. 当Client要和Server通信时，Client首先向Server发一个SYN (Synchronize) 标记的包，告诉Server请求建立连接.</p>
<p>注意: 一个 SYN包就是仅SYN标记设为1的TCP包(参见TCP包头Resources). 认识到这点很重要，只有当Server收到Client发来的SYN包，才可建立连接，除此之外别无他法。因此，如果你的防火墙丢弃所有的发往外网接口的SYN包，那么你将不 能让外部任何主机主动建立连接。</p>
<p><strong>2. (Client) &lt;– [SYN/ACK] &lt;–(Server)</strong></p>
<p>接着，Server收到来自Client发来的SYN包后，会发一个对SYN包的确认包(SYN/ACK)给Client，表示对第一个SYN包的确认，并继续握手操作.</p>
<p>注意: SYN/ACK包是仅SYN 和 ACK 标记为1的包.</p>
<p><strong>3. (Client) –&gt; [ACK] –&gt; (Server)</strong></p>
<p>Client收到来自Server的SYN/ACK 包,Client会再向Server发一个确认包(ACK)，通知Server连接已建立。至此，三次握手完成，一个TCP连接完成。</p>
<p>Note: ACK包就是仅ACK 标记设为1的TCP包. 需要注意的是当三此握手完成、连接建立以后，TCP连接的每个包都会设置ACK位</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image22.png" alt="image"></p>
<p>和WPE PRO，get数据差不多。包数据更详细，有载入的时间等等。</p>
<h2 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h2><ul>
<li><a href="http://freecap.ru/eng/" target="_blank" rel="noopener">http://freecap.ru/eng/</a> :可以把不支持socks代理的软件通过freecap设置的socks代理连接到外网</li>
<li>httptunnel<br>HttpTuunnel(也叫Http隧道，Http穿梭），是这样一种技术:它用HTTP协议在要通信的Client和Server建立起一条”Tunnel”，然后Client和Server之间的通信，都是在这条Tunnel的基础之上。</li>
</ul>
<p>HttpTunnel通常被用在受限的网络环境中，比如在NAT环境中的Client，受防火墙限制的环境中的Client等，在这样的环境中，Client不能直接连接到公网(WAN)的Server，这时候就可以通过HttpTunnel技术，来解决上述问题。<br><a href="http://www.wuzesheng.com/?p=2168" target="_blank" rel="noopener">http://www.wuzesheng.com/?p=2168</a></p>
<ul>
<li>WinPcap</li>
</ul>
<h2 id="android-抓包"><a href="#android-抓包" class="headerlink" title="android 抓包"></a>android 抓包</h2><p>工具:android内核基于linux,linux包分析工具<a href="http://www.strazzere.com/android/tcpdump" target="_blank" rel="noopener">tcpdump</a>.<br>前提条件:手机已root.</p>
<ol>
<li>复制tcpdump到手机: adb push C:/tcpdump /data/local/tcpdump</li>
<li>修改tcpdump权限: chmod 777 /data/local/tcpdump</li>
<li>进入shell: adb shell</li>
<li>进入root: su</li>
<li>运行抓包到存储卡: /data/local/tcpdump -i any -p -s 0 -w /sdcard/capture.pcap</li>
<li>运行应用后按ctrl+c中断抓包.</li>
<li>将抓包结果复制到本地: adb pull /sdcard/capture.pcap c:/</li>
<li>使用Wireshark等工具查看抓包文件capture.pcap<br>例: /data/local/tcpdump -w /sdcard/target.pcap host 192.169.1.1 and port 10000 ip 为192.169.1.1端口为10000的数据包保存到文件target.pcap.<br><p> /data/local/tcpdump -X -nn host 10.1.1.253</p></li>
</ol>
<p>##Charles</p>
<p>##Http Analyzer</p>
<p>##Fiddler</p>
<p>##Network Monitor</p>
<p>##Packet Capture</p>
<p>##bitshark</p>
<p>##网络嗅探Wi.cap</p>
]]></content>
      
        <categories>
            
            <category> 破解 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[a* 初探]]></title>
      <url>http://www.farwmarth.com/a%E6%98%9F%E5%88%9D%E6%8E%A2/</url>
      <content type="html"><![CDATA[<p>以前面试被问到过一次，后来没去做这一块的东西就没去理会了。准备辞职找下一个工作，捡起来看了下。<br>   A*算法是一种在多节点网络上寻求最短路径的方法.属于启发式搜索的一种。</p>
<p><strong>先描述一下a星的几个基本概念.</strong></p>
<ul>
<li>节点:A星寻路中会将搜索区域划分为一个个小单元。每个单元即一个节点，一般为方格.</li>
<li>开启列表:还未展开的节点列表</li>
<li>关闭列表:已经遍历过的节点列表</li>
</ul>
<a id="more"></a>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image5.png" alt="image">   </p>
<ul>
<li><strong>A*算法的公式为：f(n)=g(n)+h(n)</strong>   </li>
<li><strong>G </strong>表示从起点 A 移动到网格上指定方格的移动耗费 (可沿斜方向移动). 一般将普通移动耗费设为值10,斜角移动耗费为14    </li>
<li><strong>H </strong>表示从指定的方格移动到终点 B 的预计耗费 (H 有很多计算方法, 这里我们设定只可以上下左右移动).<br><code>曼哈顿式为h(n) =dx(到终点的水平距离) + dy(到终点的竖直距离)</code> ,本文使用为此计算方法.<br><code>欧几里得式:h(n) = sqrt(dx^2 + dy^2)</code></li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image6.png" alt="image"> <img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image7.png" alt="image"></p>
<p>欧几里得式在对角线上有更低的启发值，产生的路径更符合人的习惯，但曼哈顿式数学运算功率更低。所以一般采用曼哈顿式</p>
<p><strong>寻路步骤</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">把起始节点加进open list</span><br><span class="line"><span class="keyword">while</span> (open list 不空) &#123;</span><br><span class="line">	 当前节点 = open list中F值最低的节点</span><br><span class="line">	<span class="keyword">if</span> (当前节点 == 目标节点) &#123;</span><br><span class="line">	       路径完成</span><br><span class="line">	       从目标节点开始寻找其母节点，直到母节点是起始节点位置，得到路径</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		把当前节点移入到close list</span><br><span class="line">	      	检视当前节点的每个相邻节点</span><br><span class="line">	       	<span class="keyword">for</span> (每个相邻节点)&#123;</span><br><span class="line">	         		<span class="keyword">if</span> (该节点不在closed list中 and 该节点不是障碍物)&#123;</span><br><span class="line">			                   <span class="keyword">if</span> (该节点不在open list中  )&#123;</span><br><span class="line">				                  把该节点移进open list</span><br><span class="line">				                  计算其F值</span><br><span class="line">				                  记录该节点的母节点为当前节点</span><br><span class="line">			                   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				               <span class="keyword">if</span>(G值更低)&#123;</span><br><span class="line">				                   该节点的父节点改成当前节点并且重新计算该节点的G和F值</span><br><span class="line">				              &#125;</span><br><span class="line">			                  &#125;</span><br><span class="line">			 &#125;</span><br><span class="line">	 	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (还没有找到路径) &#123;</span><br><span class="line">  无法从起始点到达目的地</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image8.png" alt="image"></p>
<p><strong>actionscript实现</strong>:<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> <span class="title">astar</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.display.Sprite;</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.events.Event;</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.events.MouseEvent;</span></span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">AStarTest</span> <span class="keyword">extends</span> <span class="title">Sprite</span></span></span><br><span class="line"><span class="class">	</span>&#123;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">const</span> SIZE:int = <span class="number">40</span>;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">const</span> DIAGONAL:int = <span class="number">14</span>; <span class="comment">//对角线</span></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">const</span> PARALLEL:int = <span class="number">10</span>; <span class="comment">//非对角线</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _map:Array = [[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]];</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _nodeSprite:Array = [];</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _clickCout:int;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _fristNodeSp:Rect;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _secondNodeSp:Rect;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _firstPoint:Point = <span class="keyword">new</span> Point();</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _sencondPoint:Point = <span class="keyword">new</span> Point();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _openList:Array = [];</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _closeList:Array = [];</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _path:Array = [];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">AStarTest</span><span class="params">()</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (stage)</span><br><span class="line">				init(<span class="literal">null</span>);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				addEventListener(Event.ADDED_TO_STAGE, init);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">(e:Event)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			removeEventListener(Event.ADDED_TO_STAGE, init);</span><br><span class="line">			initMap();</span><br><span class="line">			initEventListener();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">initEventListener</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			stage.addEventListener(MouseEvent.CLICK, clickHandler);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span><span class="params">(e:MouseEvent)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (_clickCout &amp;gt;= <span class="number">2</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				_clickCout = <span class="number">0</span>;</span><br><span class="line">				clear();</span><br><span class="line">			&#125;</span><br><span class="line">			turnNode(e.stageX, e.stageY, _clickCout);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">clear</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (_fristNodeSp)</span><br><span class="line">				_fristNodeSp.create();</span><br><span class="line">			<span class="keyword">if</span> (_secondNodeSp)</span><br><span class="line">				_secondNodeSp.create();</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i:int = <span class="number">0</span>; i &lt; _path.length; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				_nodeSprite[_path[i].x][_path[i].y].create();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">initMap</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i:int = <span class="number">0</span>; i &lt; _map.length; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">var</span> rol:Array = _map[i];</span><br><span class="line">				<span class="keyword">var</span> node:Array = [];</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">var</span> j:int = <span class="number">0</span>; j &lt; rol.length; j++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">var</span> rect:Rect = <span class="keyword">new</span> Rect(rol[j]);</span><br><span class="line">					rect.x = j * SIZE;</span><br><span class="line">					rect.y = i * SIZE;</span><br><span class="line">					addChild(rect);</span><br><span class="line">					node.push(rect);</span><br><span class="line">				&#125;</span><br><span class="line">				_nodeSprite.push(node);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">turnNode</span><span class="params">(x:Number, y:Number, nodeSite:int)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> col:int = x / SIZE;</span><br><span class="line">			<span class="keyword">var</span> row:int = y / SIZE;</span><br><span class="line">			<span class="keyword">var</span> len:int = (col + <span class="number">1</span>) * (row + <span class="number">1</span>);</span><br><span class="line">			<span class="keyword">if</span> (_nodeSprite[row] &amp;&amp; _nodeSprite[row][col])</span><br><span class="line">			&#123;</span><br><span class="line">				_clickCout++;</span><br><span class="line">				<span class="keyword">var</span> rect:Rect = _nodeSprite[row][col];</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (nodeSite == <span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					_firstPoint.x = row;</span><br><span class="line">					_firstPoint.y = col;</span><br><span class="line">					_fristNodeSp = rect;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (nodeSite == <span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					_sencondPoint.x = row;</span><br><span class="line">					_sencondPoint.y = col;</span><br><span class="line">					_secondNodeSp = rect;</span><br><span class="line">					<span class="keyword">var</span> endPoint:Point = findPath(_firstPoint, _sencondPoint);</span><br><span class="line">					<span class="keyword">if</span> (endPoint != <span class="literal">null</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">while</span> (endPoint != <span class="literal">null</span>)</span><br><span class="line">						&#123;</span><br><span class="line">							_path.unshift(endPoint);</span><br><span class="line">							endPoint = endPoint.parent;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">for</span> (<span class="keyword">var</span> i:int = <span class="number">0</span>; i &lt; _path.length; i++)</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">var</span> po:Point = _path[i];</span><br><span class="line">							<span class="keyword">var</span> poNode:Rect = _nodeSprite[po.x][po.y];</span><br><span class="line">							poNode.turn();</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">				rect.turn();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">findPath</span><span class="params">(first:Point, second:Point)</span>:Point</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			_openList = [];</span><br><span class="line">			_closeList = [];</span><br><span class="line">			_path = [];</span><br><span class="line">			trace();</span><br><span class="line">			trace(first, second);</span><br><span class="line"></span><br><span class="line">			_openList.push(first);</span><br><span class="line">			<span class="keyword">while</span> (_openList.length != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">var</span> po:Point = inList(_openList, second);</span><br><span class="line">				<span class="keyword">if</span> (po)</span><br><span class="line">					<span class="keyword">return</span> po;</span><br><span class="line">				_openList.sortOn([<span class="string">"f"</span>]);</span><br><span class="line">				<span class="keyword">var</span> curr:Point = _openList.shift();</span><br><span class="line">				_closeList.push(curr);</span><br><span class="line">				<span class="comment">//得到邻近的点</span></span><br><span class="line">				<span class="keyword">var</span> sorround:Array = getSorround(curr);</span><br><span class="line">				trace(curr);</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">var</span> i:int = <span class="number">0</span>; i &lt; sorround.length; i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">var</span> sorroundPoint:Point = sorround[i];</span><br><span class="line">					<span class="keyword">if</span> (inList(_openList, sorroundPoint))</span><br><span class="line">					&#123;</span><br><span class="line">						FoundPoint(curr, sorroundPoint);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						NotFoundPoint(curr, second, sorroundPoint);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">NotFoundPoint</span><span class="params">(curr:Point, second:Point, point:Point)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			point.parent = curr;</span><br><span class="line">			point.g = cacG(curr, point);</span><br><span class="line">			point.h = cacH(second, point);</span><br><span class="line">			point.cacF();</span><br><span class="line">			_openList.push(point);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//计算G值, 如果比原来的大, 就什么都不做, 否则设置它的父节点为当前点,并更新G和F</span></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">FoundPoint</span><span class="params">(curr:Point, point:Point)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> g:int = cacG(curr, point);</span><br><span class="line">			<span class="keyword">if</span> (g &lt; point.g)</span><br><span class="line">			&#123;</span><br><span class="line">				point.parent = curr;</span><br><span class="line">				point.g = g;</span><br><span class="line">				point.cacF();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cacG</span><span class="params">(curr:Point, point:Point)</span>:int</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> diff:int = Math.abs(curr.x - point.x) + Math.abs(curr.y - point.y);</span><br><span class="line">			<span class="keyword">var</span> g:int = (diff == <span class="number">2</span>) ? DIAGONAL : PARALLEL;</span><br><span class="line">			<span class="keyword">var</span> parentG:int = (curr.parent != <span class="literal">null</span>) ? curr.parent.g : <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">return</span> g + parentG;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//H值不计算折点</span></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cacH</span><span class="params">(second:Point, point:Point)</span>:int</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> step:int = Math.abs(second.x - point.x) + Math.abs(second.y - point.y);</span><br><span class="line">			<span class="keyword">return</span> step * PARALLEL;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getSorround</span><span class="params">(curr:Point)</span>:Array</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> surroundPoints:Array = [];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i:int = curr.x - <span class="number">1</span>; i &lt;= curr.x + <span class="number">1</span>; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">var</span> j:int = curr.y - <span class="number">1</span>; j &lt;= curr.y + <span class="number">1</span>; j++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">var</span> point:Point = <span class="keyword">new</span> Point();</span><br><span class="line">					point.x = i;</span><br><span class="line">					point.y = j;</span><br><span class="line">					<span class="keyword">if</span> (canReach(curr, point))</span><br><span class="line">					&#123;</span><br><span class="line">						surroundPoints.push(point);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> surroundPoints;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">canReach</span><span class="params">(curr:Point, point:Point)</span>:Boolean</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!inMap(point.x, point.y) || inList(_closeList, point))</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">inMap</span><span class="params">(x:int, y:int)</span>:Boolean</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (_map[x] &amp;&amp; _map[x][y] &amp;&amp; _map[x][y] == <span class="number">1</span>)</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">inList</span><span class="params">(_list:Array, point:Point)</span>:Point</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!_list || _list.length == <span class="number">0</span>)</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i:int = <span class="number">0</span>; i &lt; _list.length; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">var</span> po:Point = _list[i];</span><br><span class="line">				<span class="keyword">if</span> (po.x == point.x &amp;&amp; po.y == point.y)</span><br><span class="line">					<span class="keyword">return</span> po;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.display.Sprite;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span> <span class="keyword">extends</span> <span class="title">Sprite</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _enable:int;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Rect</span><span class="params">(enable:int)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>._enable = enable;</span><br><span class="line">		create();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.graphics.clear();</span><br><span class="line">		<span class="keyword">if</span> (_enable)</span><br><span class="line">			<span class="keyword">this</span>.graphics.lineStyle(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">this</span>.graphics.beginFill(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">this</span>.graphics.drawRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>);</span><br><span class="line">		<span class="keyword">this</span>.graphics.endFill();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">turn</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.graphics.clear();</span><br><span class="line">		<span class="keyword">this</span>.graphics.beginFill(<span class="number">0x00ff00</span>, <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">this</span>.graphics.drawRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>);</span><br><span class="line">		<span class="keyword">this</span>.graphics.endFill();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _x:int;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _y:int;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _g:int;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _h:int;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _f:int;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">var</span> _parent:Point;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">x</span><span class="params">()</span>:int</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _x;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">x</span><span class="params">(value:int)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_x = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">y</span><span class="params">()</span>:int</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _y;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">y</span><span class="params">(value:int)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_y = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">g</span><span class="params">()</span>:int</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _g;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">g</span><span class="params">(value:int)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_g = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">h</span><span class="params">()</span>:int</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _h;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">h</span><span class="params">(value:int)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_h = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">f</span><span class="params">()</span>:int</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _f;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">f</span><span class="params">(f:int)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>._f = f;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">parent</span><span class="params">()</span>:Point</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _parent;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">parent</span><span class="params">(value:Point)</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_parent = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cacF</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		_f = _g + _h;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toString</span><span class="params">()</span>:String </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"[Point x="</span> + x + <span class="string">" y="</span> + y + <span class="string">" g="</span> + g + <span class="string">" h="</span> + h + <span class="string">" f="</span> + f + <span class="string">"]"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>参考 :</p>
<p><a href="http://www.lihuasoft.net/article/show.php?id=3523" target="_blank" rel="noopener">http://www.lihuasoft.net/article/show.php?id=3523</a></p>
<p><a href="http://www.cnblogs.com/technology/archive/2011/05/26/2058842.html" target="_blank" rel="noopener">http://www.cnblogs.com/technology/archive/2011/05/26/2058842.html</a></p>
]]></content>
      
        <categories>
            
            <category> 算法 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一次失败的逆向工程]]></title>
      <url>http://www.farwmarth.com/%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>源起是要拿一下一个韩国游戏的图片资源,本以为挺容易的,google了一下, ipa也是压缩包格式,改成zip解压.然后把png图片拿出来，发现有一部分图片在windows上无法解析.继续google.原来是在编译打包到app的过程中，原有的png都被在最后加上了特定都数据段，这样从app里直接取出来图片既不能看，也不能用，所以需要工具来进行还原.网上python脚本一大堆，down下来还原了一下图片，确实可以恢复正常。但是这堆图片里面都是无关紧要的素材，想了想，应该是把图片弄成了自定义格式。在目录下果然发现了一个spr的目录，里面有一堆自定义扩展名叫f3spr的文件，用文本编辑器打开发现是个xml.有一段数据结构如下.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image.png" alt="image"><br><a id="more"></a></p>
<p>呃，这段数据像是被加密的png图片，再google还真发现可以将图片压缩成base64字符串。c#代码如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Xml;</span><br><span class="line"></span><br><span class="line">namespace WindowsFormsApplication1</span><br><span class="line">&#123;</span><br><span class="line">    public partial class Form1 : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public Form1()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button1_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                int readbyte = 0;</span><br><span class="line">                int bytestoread = 1044;</span><br><span class="line">                XmlTextReader xmltxtrd = new XmlTextReader(&quot;C:/11.xml&quot;);</span><br><span class="line">                FileStream fs = new FileStream(&quot;C:/002.png&quot;, FileMode.Create);</span><br><span class="line">                BinaryWriter bw = new BinaryWriter(fs);</span><br><span class="line">                byte[] base64buffer = new byte[bytestoread];</span><br><span class="line">                while (xmltxtrd.Read())</span><br><span class="line">                &#123;</span><br><span class="line">                    if (xmltxtrd.NodeType == XmlNodeType.Element &amp;&amp; xmltxtrd.Name == &quot;_data_ImageData&quot;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(&quot;_data_ImageData&quot;);</span><br><span class="line">                        do</span><br><span class="line">                        &#123;</span><br><span class="line">                            Console.WriteLine(&quot;cout............&quot;);</span><br><span class="line">                           //readbyte = xmltxtrd.ReadBase64(base64buffer, 0, bytestoread);</span><br><span class="line">                            readbyte = xmltxtrd.ReadElementContentAsBase64(base64buffer, 0, bytestoread);</span><br><span class="line">                            bw.Write(base64buffer, 0, readbyte);</span><br><span class="line">                        &#125;</span><br><span class="line">                        while (bytestoread &amp;lt;= readbyte);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                bw.Flush();</span><br><span class="line">                bw.Close();</span><br><span class="line">                fs.Close();</span><br><span class="line">                xmltxtrd.Close();</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(&quot;读写结束！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(ex.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button2_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                XmlDocument myxmldoc = new XmlDocument();</span><br><span class="line">                myxmldoc.Load(&quot;C:/11.xml&quot;);</span><br><span class="line">                XmlElement elem = myxmldoc.CreateElement(&quot;_data_ImageData&quot;);</span><br><span class="line">                FileStream fs = new FileStream(&quot;C:/001.png&quot;, FileMode.Open);</span><br><span class="line">                BinaryReader br = new BinaryReader(fs);</span><br><span class="line">                byte[] imagebuffer = new byte[br.BaseStream.Length];</span><br><span class="line">                br.Read(imagebuffer, 0, Convert.ToInt32(br.BaseStream.Length));</span><br><span class="line">                string textstring = System.Convert.ToBase64String(imagebuffer);</span><br><span class="line">                fs.Close();</span><br><span class="line">                br.Close();</span><br><span class="line">                XmlText text = myxmldoc.CreateTextNode(textstring);</span><br><span class="line">                myxmldoc.DocumentElement.AppendChild(elem);</span><br><span class="line">                myxmldoc.DocumentElement.LastChild.AppendChild(text);</span><br><span class="line"></span><br><span class="line">                myxmldoc.Save(&quot;C:/11.xml&quot;);</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(&quot;读写结束！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(ex.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image1.png" alt="image"> </p>
<p>加密后数据格式和f3spr的格式近似,本以为可以还原这个图片资源，然后写个批处理就搞定了。结果还原的png无法显示。用winHex看了下。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/winhex.png" alt="winhex"> </p>
<p>上图依次是png,rar和f3spr还原图片在winhex下的数据.正常图片和压缩文件都要数据段标识.而我还原的png图片却是一堆乱码。未果。在f3spr里看到一个数据段</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image2.png" alt="image"> </p>
<p>这个看起来有点像texturepacker打包的plist文件。之前的是图片数据是无疑的,可能是在转成base64之前用byte数组错位加密了一下。</p>
<p>应该有android版本.搜索了一下果然有.又有了一丝希望的小火花。破解apk还是熟悉一些。逆向了一下导成android工程.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image3.png" alt="image"> </p>
<p>果然是cocos2dx又一作品。从包结构名可以看出公司域名:<a href="http://www.n2play.co.kr/" target="_blank" rel="noopener">http://www.n2play.co.kr/</a>.一堆韩语看不懂.google了一翻这引擎，在github找了一下看是否源了这类库。还是没有结果。看了下代码结构，</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/08/image4.png" alt="image"> </p>
<p>发现那f3spr文件解析是用调的c++代码。so文件怎么破啊。。只能反汇编没法还原。。卡住了。功力不够了。</p>
]]></content>
      
        <categories>
            
            <category> 破解 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[android 删除未引用资源,优化字节码]]></title>
      <url>http://www.farwmarth.com/android%20%E5%88%A0%E9%99%A4%E6%9C%AA%E5%BC%95%E7%94%A8%E8%B5%84%E6%BA%90,%E4%BC%98%E5%8C%96%E5%AD%97%E8%8A%82%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="一-资源文件"><a href="#一-资源文件" class="headerlink" title="一 资源文件"></a>一 资源文件</h2><p>删除未使用图片资源 .</p>
<p>adt  的 android tool有一个检测app潜在问题的选项叫Run Lint.检测之后有各种各种检测的信息,包括px单位，资源未使用等等。在android sdk里也有这个工具Lint.</p>
<a id="more"></a>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/2000.jpg" alt="2000"></p>
<p>但这个并不能直接将未使用的资源删除。于是想着把这个log信息导成txt然后用脚本去删除未使用资源。</p>
<p>linux 平台 用sdk :<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Run lint under &apos;/SDK/tools/lint&apos;,  save the output to file.</span><br><span class="line">lint . |grep &apos;to be unused&apos; &amp;gt; /tmp/unused.txt</span><br><span class="line">Remove all unused resouces.</span><br><span class="line">rm `cat /tmp/unused.txt | gawk -F: &apos;&#123;print $1&#125;&apos; |sed -e &apos;s/  *$//&apos;|grep png`</span><br><span class="line">Rebuild the project with &apos;ant release&apos;.</span><br></pre></td></tr></table></figure></p>
<p>windows 平台可以用adt生成的log保存为txt.</p>
<p><strong>bat脚本:</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">Setlocal ENABLEDELAYEDEXPANSION</span><br><span class="line">set dirpath="res\drawable"</span><br><span class="line">lint .| find %dirpath%|find "UnusedResources" &amp;gt;a.txt</span><br><span class="line">for /f   %%i in (a.txt) do (</span><br><span class="line">set tempstr=%%i</span><br><span class="line">del  !tempstr:~0,-1!</span><br><span class="line">)</span><br><span class="line">del a.txt</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></p>
<h2 id="二-优化字节码"><a href="#二-优化字节码" class="headerlink" title="二  优化字节码"></a>二  优化字节码</h2><p>ProGuard是一个压缩、优化和混淆Java字节码文件的免费的工具，它可以删除无用的类、字段、方法和属性。可以删除没用的注释，最大限度地优化字节码文件。它还可以使用简短的无意义的名称来重命名已经存在的类、字段、方法和属性</p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[JAVA内存分配]]></title>
      <url>http://www.farwmarth.com/JAVA%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</url>
      <content type="html"><![CDATA[<ul>
<li>寄存器：我们在程序中无法控制</li>
<li>栈：存放基本类型的数据和对象的引用，但对象本身不存放在栈中，而是存放在堆中</li>
<li>堆：存放用new产生的数据</li>
<li>静态域：存放在对象中用static定义的静态成员</li>
<li>常量池：存放常量</li>
<li>非RAM存储：硬盘等永久存储空间</li>
</ul>
<h2 id="Java内存分配中的栈"><a href="#Java内存分配中的栈" class="headerlink" title="Java内存分配中的栈"></a>Java内存分配中的栈</h2><p>在函数中定义的一些基本类型的变量数据和对象的引用变量都在函数的栈内存中分配。</p>
<p>当在一段代码块定义一个变量时，Java就在栈中 为这个变量分配内存空间，当该变量退出该作用域后，Java会自动释放掉为该变量所分配的内存空间，该内存空间可以立即被另作他用。</p>
<a id="more"></a>
<h2 id="Java内存分配中的堆"><a href="#Java内存分配中的堆" class="headerlink" title="Java内存分配中的堆"></a>Java内存分配中的堆</h2><p>堆内存用来存放由new创建的对象和数组。 在堆中分配的内存，由Java虚拟机的自动垃圾回收器来管理。</p>
<p>在堆中产生了一个数组或对象后，还可以 在栈中定义一个特殊的变量，让栈中这个变量的取值等于数组或对象在堆内存中的首地址，栈中的这个变量就成了数组或对象的引用变量。  引用变量就相当于是 为数组或对象起的一个名称，以后就可以在程序中使用栈中的引用变量来访问堆中的数组或对象。引用变量就相当于是为数组或者对象起的一个名称。</p>
<p>引用变量是普通的变量，定义时在栈中分配，引用变量在程序运行到其作用域之外后被释放。而数组和对象本身在堆中分配，即使程序 运行到使用 new 产生数组或者对象的语句所在的代码块之外，数组和对象本身占据的内存不会被释放，数组和对象在没有引用变量指向它的时候，才变为垃圾，不能在被使用，但仍 然占据内存空间不放，在随后的一个不确定的时间被垃圾回收器收走（释放掉）。这也是 Java 比较占内存的原因。</p>
<p>实际上，栈中的变量指向堆内存中的变量，这就是Java中的指针！</p>
<p>常量池 (constant pool)</p>
<p>常量池指的是在编译期被确定，并被保存在已编译的.class文件中的一些数据。除了包含代码中所定义的各种基本类型（如int、long等等）和对象型（如String及数组）的常量值(final)还包含一些以文本形式出现的符号引用，比如：</p>
<ul>
<li>类和接口的全限定名;</li>
<li>字段的名称和描述符;</li>
<li>方法和名称和描述符。</li>
</ul>
<p>虚拟机必须为每个被装载的类型维护一个常量池。常量池就是该类型所用到常量的一个有序集和，包括直接常量（string,integer和 floating point常量）和对其他类型，字段和方法的符号引用。</p>
<p>对于String常量，它的值是在常量池中的。而JVM中的常量池在内存当中是以表的形式存在的， 对于String类型，有一张固定长度的CONSTANT_String_info表用来存储文字字符串值，注意：该表只存储文字字符串值，不存储符号引 用。说到这里，对常量池中的字符串值的存储位置应该有一个比较明了的理解了。<br>在程序执行的时候,常量池 会储存在Method Area,而不是堆中。</p>
<p>堆与栈</p>
<p>Java的堆是一个运行时数据区,类的(对象从中分配空间。这些对象通过new、newarray、 anewarray和multianewarray等指令建立，它们不需要程序代码来显式的释放。堆是由垃圾回收来负责的，堆的优势是可以动态地分配内存 大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。但缺点是，由于要在运行时动态 分配内存，存取速度较慢。</p>
<p>栈的优势是，存取速度比堆要快，仅次于寄存器，栈数据可以共享。但缺点是，存在栈中的数据大小与生存期必须是 确定的，缺乏灵活性。栈中主要存放一些基本类型的变量数据（int, short, long, byte, float, double, boolean, char）和对象句柄(引用)。</p>
<p>栈有一个很重要的特殊性，就是存在栈中的数据可以共享。假设我们同时定义：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">3</span>;</span><br></pre></td></tr></table></figure></p>
<p>编译器先处理inta=3;首先它会在栈中创建一个变量为a的引用，然后查找栈中是否有3这个值，如果没找到，就将3存放进来，然后将a指向3。接着处理int b = 3;在创建完b的引用变量后，因为在栈中已经有3这个值，便将b直接指向3。这样，就出现了a与b同时均指向3的情况。</p>
<p>这时，如果再令 a=4;那么编译器会重新搜索栈中是否有4值，如果没有，则将4存放进来，并令a指向4;如果已经有了，则直接将a指向这个地址。因此a值的改变不会影响 到b的值。</p>
<p>要注意这种数据的共享与两个对象的引用同时指向一个对象的这种共享是不同的，因为这种情况a的修改并不会影响到b, 它是由编译器完成的，它有利于节省空间。而一个对象引用变量修改了这个对象的内部状态，会影响到另一个对象引用变量。</p>
<p>String是一个特殊的包装类数据。可以用：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="keyword">new</span> String(<span class="string">"abc"</span>);</span><br><span class="line">String str = <span class="string">"abc"</span>;</span><br></pre></td></tr></table></figure></p>
<p>两种的形式来创建，第一种是用new()来新建对象的，它会在存放于堆中。每调用一次就会创建一个新的对象。而第二种是先在栈中创建一个对String类的对象引用变量str，然后通过符号引用去字符串常量池 里找有没有”abc”,如果没有，则将”abc”存放进字符串常量池 ，并令str指向”abc”，如果已经有”abc” 则直接令str指向“abc”。</p>
<p>比较类里面的数值是否相等时，用equals()方法;当测试两个包装类的引用是否指向同一个对象时，用==，下面用例子说明上面的理论。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str1 = <span class="string">"abc"</span>;</span><br><span class="line">String str2 = <span class="string">"abc"</span>;</span><br><span class="line">System.out.println(str1==str2); <span class="comment">//true</span></span><br></pre></td></tr></table></figure></p>
<p>可以看出str1和str2是指向同一个对象的。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str1 =<span class="keyword">new</span> String (<span class="string">"abc"</span>);</span><br><span class="line">String str2 =<span class="keyword">new</span> String (<span class="string">"abc"</span>);</span><br><span class="line">System.out.println(str1==str2); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p>
<p>用new的方式是生成不同的对象。每一次生成一个。</p>
<p>因此用第二种方式创建多个”abc”字符串,在内存中 其实只存在一个对象而已. 这种写法有利与节省内存空间. 同时它可以在一定程度上提高程序的运行速度，因为JVM会自动根据栈中数据的实际情况来决定是否有必要创建新对象。而对于String str = new String(“abc”);的代码，则一概在堆中创建新对象，而不管其字符串值是否相等，是否有必要创建新对象，从而加重了程序的负担。</p>
<p>另 一方面, 要注意: 我们在使用诸如String str = “abc”;的格式定义类时，总是想当然地认为，创建了String类的对象str。担心陷阱！对象可能并没有被创建！而可能只是指向一个先前已经创建的 对象。只有通过new()方法才能保证每次都创建一个新的对象。</p>
<p>由于String类的immutable性质，当String变量需要经常变换 其值时，应该考虑使用StringBuffer类，以提高程序效率。</p>
<ul>
<li><strong>首先String不属于8种基本数据类型，String是一个对象。因为对象的默认值是null，所以String的默认值也是null;但它又是一种特殊的对象，有其它对象没有的一些特性。</strong><br>+<strong> new String()和new String(””)都是申明一个新的空字符串，是空串不是null;</strong></li>
<li><strong>String str=”kvill”;String str=new String (”kvill”)的区别</strong></li>
</ul>
<p>示例：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s0=<span class="string">"kvill"</span>;</span><br><span class="line">String s1=<span class="string">"kvill"</span>;</span><br><span class="line">String s2=<span class="string">"kv"</span> + <span class="string">"ill"</span>;</span><br><span class="line">System.out.println( s0==s1 );</span><br><span class="line">System.out.println( s0==s2 );</span><br></pre></td></tr></table></figure></p>
<p>结果为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">true</span><br><span class="line">true</span><br></pre></td></tr></table></figure></p>
<p>首先，我们要知结果为道Java 会确保一个字符串常量只有一个拷贝。</p>
<p>因为例子中的 s0和s1中的”kvill”都是字符串常量，它们在编译期就被确定了，所以s0==s1为true;而”kv”和”ill”也都是字符串常量，当一个字 符串由多个字符串常量连接而成时，它自己肯定也是字符串常量，所以s2也同样在编译期就被解析为一个字符串常量，所以s2也是常量池中” kvill”的一个引用。所以我们得出s0==s1==s2;用new String() 创建的字符串不是常量，不能在编译期就确定，所以new String() 创建的字符串不放入常量池中，它们有自己的地址空间。</p>
<p>示例：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s0=<span class="string">"kvill"</span>;</span><br><span class="line">String s1=<span class="keyword">new</span> String(<span class="string">"kvill"</span>);</span><br><span class="line">String s2=<span class="string">"kv"</span> + <span class="keyword">new</span> String(<span class="string">"ill"</span>);</span><br><span class="line">System.out.println( s0==s1 );</span><br><span class="line">System.out.println( s0==s2 );</span><br><span class="line">System.out.println( s1==s2 );</span><br></pre></td></tr></table></figure></p>
<p>结果为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">false</span><br><span class="line">false</span><br><span class="line">false</span><br></pre></td></tr></table></figure></p>
<p>例2中s0还是常量池 中”kvill”的应用，s1因为无法在编译期确定，所以是运行时创建的新对象”kvill”的引用，s2因为有后半部分 new String(”ill”)所以也无法在编译期确定，所以也是一个新创建对象”kvill”的应用;明白了这些也就知道为何得出此结果了。</p>
<ul>
<li><strong>String.intern()：</strong></li>
</ul>
<p>再补充介绍一点：存在于.class文件中的常量池，在运行期被JVM装载，并且可以扩充。String的 intern()方法就是扩充常量池的 一个方法;当一个String实例str调用intern()方法时，Java 查找常量池中 是否有相同Unicode的字符串常量，如果有，则返回其的引用，如果没有，则在常 量池中增加一个Unicode等于str的字符串并返回它的引用;看示例就清楚了</p>
<p>示例：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s0= <span class="string">"kvill"</span>;</span><br><span class="line">String s1=<span class="keyword">new</span> String(<span class="string">"kvill"</span>);</span><br><span class="line">String s2=<span class="keyword">new</span> String(<span class="string">"kvill"</span>);</span><br><span class="line">System.out.println( s0==s1 );</span><br><span class="line">System.out.println( <span class="string">"**********"</span> );</span><br><span class="line">s1.intern();</span><br><span class="line">s2=s2.intern(); <span class="comment">//把常量池中"kvill"的引用赋给s2</span></span><br><span class="line">System.out.println( s0==s1);</span><br><span class="line">System.out.println( s0==s1.intern() );</span><br><span class="line">System.out.println( s0==s2 );</span><br></pre></td></tr></table></figure></p>
<p>结果为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">false</span><br><span class="line">false //虽然执行了s1.intern(),但它的返回值没有赋给s1</span><br><span class="line">true //说明s1.intern()返回的是常量池中&quot;kvill&quot;的引用</span><br><span class="line">true</span><br></pre></td></tr></table></figure></p>
<p>最后我再破除一个错误的理解：有人说，“使用 String.intern() 方法则可以将一个 String 类的保存到一个全局 String 表中 ，如果具有相同值的 Unicode 字符串已经在这个表中，那么该方法返回表中已有字符串的地址，如果在表中没有相同值的字符串，则将自己的地址注册到表中”如果我把他说的这个全局的 String 表理解为常量池的话，他的最后一句话，”如果在表中没有相同值的字符串，则将自己的地址注册到表中”是错的：</p>
<p>示例：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s1=<span class="keyword">new</span> String(<span class="string">"kvill"</span>);</span><br><span class="line">String s2=s1.intern();</span><br><span class="line">System.out.println( s1==s1.intern() );</span><br><span class="line">System.out.println( s1+<span class="string">" "</span>+s2 );</span><br><span class="line">System.out.println( s2==s1.intern() );</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">false</span><br><span class="line">kvill kvill</span><br><span class="line">true</span><br></pre></td></tr></table></figure></p>
<p>在这个类中我们没有声名一个”kvill”常量，所以常量池中一开始是没有”kvill”的，当我们调用s1.intern()后就在常量池中新添加了一 个”kvill”常量，原来的不在常量池中的”kvill”仍然存在，也就不是“将自己的地址注册到常量池中”了。</p>
<p><code>s1==s1.intern()</code>为<code>false</code>说明原来的”kvill”仍然存在;s2现在为常量池中”kvill”的地址，所以有<code>s2==s1.intern()</code>为<code>true</code>。</p>
<ul>
<li><strong>关于equals()和==:</strong></li>
</ul>
<p>这个对于String简单来说就是比较两字符串的Unicode序列是否相当，如果相等返回true;而==是 比较两字符串的地址是否相同，也就是是否是同一个字符串的引用。</p>
<ul>
<li><strong>关于String是不可变的</strong></li>
</ul>
<p>这一说又要说很多，大家只 要知道String的实例一旦生成就不会再改变了，比如说：String str=”kv”+”ill”+” “+”ans”; 就是有4个字符串常量，首先”kv”和”ill”生成了”kvill”存在内存中，然后”kvill”又和” ” 生成 “kvill “存在内存中，最后又和生成了”kvill ans”;并把这个字符串的地址赋给了str,就是因为String的”不可变”产生了很多临时变量，这也就是为什么建议用StringBuffer的原 因了，因为StringBuffer是可改变的。</p>
<p>下面是一些String相关的常见问题：</p>
<p>String中的final用法和理解<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> StringBuffer a = <span class="keyword">new</span> StringBuffer(<span class="string">"111"</span>);</span><br><span class="line"><span class="keyword">final</span> StringBuffer b = <span class="keyword">new</span> StringBuffer(<span class="string">"222"</span>);</span><br><span class="line">a=b;<span class="comment">//此句编译不通过</span></span><br><span class="line"><span class="keyword">final</span> StringBuffer a = <span class="keyword">new</span> StringBuffer(<span class="string">"111"</span>);</span><br><span class="line">a.append(<span class="string">"222"</span>);<span class="comment">// 编译通过</span></span><br></pre></td></tr></table></figure></p>
<p>可见，final只对引用的”值”(即内存地址)有效，它迫使引用只能指向初始指向的那个对象，改变它的指向会导致编译期错误。至于它所指向的对象 的变化，final是不负责的。</p>
<p>String常量池问题的几个例子</p>
<p>下面是几个常见例子的比较分析和理解：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">"a1"</span>;</span><br><span class="line">String b = <span class="string">"a"</span> + <span class="number">1</span>;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = true</span></span><br><span class="line">String a = <span class="string">"atrue"</span>;</span><br><span class="line">String b = <span class="string">"a"</span> + <span class="string">"true"</span>;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = true</span></span><br><span class="line">String a = <span class="string">"a3.4"</span>;</span><br><span class="line">String b = <span class="string">"a"</span> + <span class="number">3.4</span>;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = true</span></span><br></pre></td></tr></table></figure></p>
<p>分析：JVM对于字符串常量的”+”号连接，将程序编译期，JVM就将常量字符串的”+”连接优化为连接后的值，拿”a” + 1来说，经编译器优化后在class中就已经是a1。在编译期其字符串常量的值就确定下来，故上面程序最终的结果都为true。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">"ab"</span>;</span><br><span class="line">String bb = <span class="string">"b"</span>;</span><br><span class="line">String b = <span class="string">"a"</span> + bb;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = false</span></span><br></pre></td></tr></table></figure></p>
<p>分析：JVM对于字符串引用，由于在字符串的”+”连接中，有字符串引用存在，而引用的值在程序编译期是无法确定的，即”a” + bb无法被编译器优化，只有在程序运行期来动态分配并将连接后的新地址赋给b。所以上面程序的结果也就为false。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">"ab"</span>;</span><br><span class="line"><span class="keyword">final</span> String bb = <span class="string">"b"</span>;</span><br><span class="line">String b = <span class="string">"a"</span> + bb;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = true</span></span><br></pre></td></tr></table></figure></p>
<p>分析：和[3]中唯一不同的是bb字符串加了final修饰，对于final修饰的变量，它在编译时被解析为常量值的一个本地拷贝存储到自己的常量 池中或嵌入到它的字节码流中。所以此时的”a” + bb和”a” + “b”效果是一样的。故上面程序的结果为true。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">"ab"</span>;</span><br><span class="line"><span class="keyword">final</span> String bb = getBB();</span><br><span class="line">String b = <span class="string">"a"</span> + bb;</span><br><span class="line">System.out.println((a == b)); <span class="comment">//result = false</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getBB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"b"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>分析：JVM对于字符串引用bb，它的值在编译期无法确定，只有在程序运行期调用方法后，将方法的返回值和”a”来动态连接并分配地址为b，故上面 程序的结果为false。</p>
<p>通过上面4个例子可以得出得知：</p>
<p><code>String  s  =  &quot;a&quot; + &quot;b&quot; + &quot;c&quot;;</code>就等价于<code>String s = &quot;abc&quot;</code>;<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String  a  =  <span class="string">"a"</span>;</span><br><span class="line">String  b  =  <span class="string">"b"</span>;</span><br><span class="line">String  c  =  <span class="string">"c"</span>;</span><br><span class="line">String  s  =   a  +  b  +  c;</span><br></pre></td></tr></table></figure></p>
<p>这个就不一样了，最终结果等于：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringBuffer temp = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">temp.append(a).append(b).append(c);</span><br><span class="line">String s = temp.toString();</span><br></pre></td></tr></table></figure></p>
<p>由上面的分析结果，可就不难推断出String 采用连接运算符（+）效率低下原因分析，形如这样的代码：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">                    String s = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &amp;lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                               s += <span class="string">"a"</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">           &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>每做一次 + 就产生个StringBuilder对象，然后append后就扔掉。下次循环再到达时重新产生个StringBuilder对象，然后 append 字符串，如此循环直至结束。如果我们直接采用 StringBuilder 对象进行 append 的话，我们可以节省 N - 1 次创建和销毁对象的时间。所以对于在循环中要进行字符串连接的应用，一般都是用StringBuffer或StringBulider对象来进行 append操作。</p>
<p>String对象的intern方法理解和分析：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test4</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">private</span> <span class="keyword">static</span> String a = <span class="string">"ab"</span>;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">                                String s1 = <span class="string">"a"</span>;</span><br><span class="line">                                String s2 = <span class="string">"b"</span>;</span><br><span class="line">                                String s = s1 + s2;</span><br><span class="line">                                System.out.println(s == a);<span class="comment">//false</span></span><br><span class="line">                                System.out.println(s.intern() == a);<span class="comment">//true</span></span><br><span class="line">                    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>这里用到Java里面是一个常量池的问题。对于s1+s2操作，其实是在堆里面重新创建了一个新的对象,s保存的是这个新对象在堆空间的的内容，所 以s与a的值是不相等的。而当调用s.intern()方法，却可以返回s在常量池中的地址值，因为a的值存储在常量池中，故s.intern和a的值相等。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>栈中用来存放一些原始数据类型的局部变量数据和对象的引用(String,数组.对象等等)但不存放对象内容</p>
<p>堆中存放使用new关键字创建的对象.</p>
<p>字符串是一个特殊包装类,其引用是存放在栈里的,而对象内容必须根据创建方式不同定(常量池和堆).有的是编译期就已经创建好，存放在字符串常 量池中，而有的是运行时才被创建.使用new关键字，存放在堆中</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[cocos2d-x vs开发]]></title>
      <url>http://www.farwmarth.com/cocos2d-x%20vs%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<h2 id="一-vs环境配置"><a href="#一-vs环境配置" class="headerlink" title="一  vs环境配置"></a>一  <strong>vs环境配置</strong></h2><p>android环境配置不累赘了:<a href="http://farwmarth.com/?p=657" target="_blank" rel="noopener">http://farwmarth.com/?p=657</a></p>
<p>vs配置：下载cocos2d-x 2.1.4  , install-templates-msvc.<br>bat是安装vs模板的，安装的时候发现2.1.4里竟然没有msv目录，下了2.1.3将msv目录复制到2.1.4重新运行，模板就安装成功了   </p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image2.png" alt="image"></p>
<a id="more"></a>
<h4 id="没有文件扩展”-js”的脚本引擎-解决办法"><a href="#没有文件扩展”-js”的脚本引擎-解决办法" class="headerlink" title="没有文件扩展”.js”的脚本引擎 解决办法"></a>没有文件扩展”.js”的脚本引擎 解决办法</h4><p>在命令行运行JScript脚本时，遇到如下的错误提示：  “输入错误: 没有文件扩展“.js”的脚本引擎。”<br>这样的错误,原因是因为JS扩展名的文件被其他软件关联了，需要取消关联。<br>  如系统中安装了ULTRAEDIT或者E钻加密软件等，就需要去掉关联；  或者如下解决方法：  在运行中输入“regedit”进入注册表，  只需要把[HKEY_CLASSES_ROOT.js] 项下的那个默认值改成 “JSFile” 就可以正常运行JS 文件了。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image3.png" alt="image"></p>
<p>还有一种创建项目的方式就是用tools目录下带的python脚本.<font color="#ff0000">注意python版本要为2.7,</font><font color="#000000">执行 python create_project.py -project BiuBiuSecondDemo -package com.jingui.BiuBiuSecondDemo -language cpp</font></p>
<p>然后会生成projects目录下会生成一个工程</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image4.png" alt="image"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image5.png" alt="image"></p>
<p>导入vs,就可以开始coding了。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image6.png" alt="image"></p>
<h2 id="二-cocos2d-x基本概念"><a href="#二-cocos2d-x基本概念" class="headerlink" title="二  cocos2d-x基本概念"></a><strong>二  cocos2d-x基本概念</strong></h2><p>下面这张图很生动地描述了cocos2d-x的舞台基本构成.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/1352707127_9847.jpg" alt="1352707127_9847"></p>
<ul>
<li>CCDirector 导演，负责场景之间的导航</li>
<li>CCScene   类似flash中的场景，用Transition在场景之间跳转</li>
<li>CCLayer    层,表现各种元素的层级关系,接受触控反馈.</li>
<li>CCSprite   精灵,如flash中Sprite,元素容器.</li>
<li>CCAction  节点的动作</li>
</ul>
<h4 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h4><p>在移动游戏开发过程中，有三种类型的坐标系你可能遇到：</p>
<p><strong>UI坐标系:</strong>  iOS/Android/Windows SDK/Flash中的通用UI坐标系: 起点坐标(x=0, y=0)位于左上角  · X轴从屏幕最左边开始，由左向右渐增  · Y轴坐标从屏幕最上方开始，由上向下渐增  详见下图</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/clip_image001.jpg" alt="clip_image001"></p>
<p> <strong>Direct3D坐标系:</strong>  DirectX 使用Left-handed Cartesian Coordinate</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/clip_image003.jpg" alt="clip_image003"></p>
<p> <strong>OpenGL**</strong>和Cocos2d坐标系:**  Cocos2d-x/-html5/-iphone使用的坐标系和OpenGL的坐标系一样，名为“Right-handed Cartesian Coordinate Syste”。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/clip_image005.jpg" alt="clip_image005"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/clip_image007.jpg" alt="clip_image007"></p>
<p>下面这张图片有助于更好的阐述Cocos2d-x坐标：</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/clip_image009.jpg" alt="clip_image009"></p>
<p>AnchorPoint :锚点,单位为精灵的宽度百分比，而不是像素.默认为0.5,0.5位于精灵的中心,所以,当我们设置坐标为0,0时,精灵只有一半显示</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image7.png" alt="image"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image8.png" alt="image"></p>
<h2 id="三-notices"><a href="#三-notices" class="headerlink" title="三 notices"></a><strong>三 notices</strong></h2><p>打开输出到控制台:<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COCOS2D_DEBUG 1</span></span><br><span class="line">CCLog(<span class="string">"%f"</span>,visibleSize.width);</span><br></pre></td></tr></table></figure></p>
<p>关闭fps显示:<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CCDirector::sharedDirector()-&amp;gt;setDisplayStats(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> cocos2d-x </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[visual studio 2012 备忘]]></title>
      <url>http://www.farwmarth.com/%20visual%20studio%202012%20%E5%A4%87%E5%BF%98/</url>
      <content type="html"><![CDATA[<h2 id="一-插件"><a href="#一-插件" class="headerlink" title="一 插件:"></a><strong>一 插件:</strong></h2><ul>
<li><p><strong>Productivity Power Tools</strong><br>最近发现神器Productivity Power Tools也更新了支持VS2012的版本（之前只有适用于VS2008/2010的）,和上面的VS Commands不太相同，这个插件更倾向于补足VS本身的功能。比如Ctrl+点击转到定义、一键整理C#的using和VB的Imports、括号自动补 全、标签栏按颜色分组、代码着色拷贝到HTML格式等.</p>
</li>
<li><p><strong>Visual Assist X Options 代码助手</strong><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image.png" alt="image"></p>
</li>
</ul>
<a id="more"></a>
<h2 id="二-Tips"><a href="#二-Tips" class="headerlink" title="二  Tips"></a>二 <strong> Tips</strong></h2><ul>
<li><p><strong>在VS工程中，添加c/c++工程中外部头文件及库的基本步骤：</strong></p>
<ul>
<li>添加工程的头文件目录：工程—属性—配置属性—c/c++—常规—附加包含目录：加上头文件存放目录。</li>
<li>添加文件引用的lib静态库路径：工程—属性—配置属性—链接器—常规—附加库目录：加上lib文件存放目录。</li>
<li>添加工程引用的lib动态文件名：工程—属性—配置属性—链接器—输入—附加依赖项：加上lib文件名。</li>
<li>添加工程引用的dll动态库：把引用的dll放到工程的可执行文件所在的目录下。  <p></p></li>
</ul>
</li>
<li><p><strong>VC/VS调试时按Alt+8就可以看到相应的汇编代码。</strong></p>
</li>
<li><strong>显示代码行号:工具/选项/文本编辑器/c/c++/常规/行号</strong></li>
<li><strong>项目依赖性配置</strong> : 解决方案—属性</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/07/image1.png" alt="image"></p>
<h2 id="三-快捷键"><a href="#三-快捷键" class="headerlink" title="三 快捷键"></a>三 <strong>快捷键</strong></h2><ul>
<li>格式化代码:Ctrl+K+D</li>
<li>检查括号匹配(在左右括号间切换): Ctrl +]</li>
<li>全屏编辑：Alt+Shift+Enter</li>
<li>注释选定块：Control+K,Control+C</li>
<li>转跳到定义，很有用的快捷键：F12</li>
<li>删除整行：Control+L</li>
<li>查看上次阅读处\反上次查看处：Control+”-“\Control+Shift+”-“</li>
<li>转到行: CTRL + G</li>
<li>设置断点：F9</li>
<li>运行不调试:Ctrl +F5</li>
<li>调试：F5</li>
<li>生成解决方案: F7</li>
</ul>
<h2 id="四-Problem"><a href="#四-Problem" class="headerlink" title="四   Problem"></a>四  <strong> Problem</strong></h2><ul>
<li>因为计算机中丢失MSVCP120D.dll<br>使用vs2013编译的vc代码，在其他机器上运行时需要安装vc2013运行库。如果没有vc运行库，<br>需要将 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\redist\Debug_NonRedist\x86\Microsoft.VC120.DebugCRT(Debug)<br>或者<br>C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\redist\x86\Microsoft.VC120.CRT(Release)下的三个支持库文件拷到system32下。<br>或模拟器下面<br>（msvcp120.dll, msvcr120.dll, vccorlib120.dll）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> c++ </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[svn 常用命令和服务器配置]]></title>
      <url>http://www.farwmarth.com/%20svn%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="Subversion-与版本控制"><a href="#Subversion-与版本控制" class="headerlink" title="Subversion 与版本控制"></a>Subversion 与版本控制</h2><p><a href="http://svnbook.red-bean.com/nightly/en/index.html" target="_blank" rel="noopener">http://svnbook.red-bean.com/nightly/en/index.html</a><br><a href="http://svnbook.red-bean.com/nightly/zh/svn-book.html" target="_blank" rel="noopener">http://svnbook.red-bean.com/nightly/zh/svn-book.html</a></p>
<h2 id="SVN-操作"><a href="#SVN-操作" class="headerlink" title="SVN 操作"></a>SVN 操作</h2><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><ul>
<li><code>svn propset svn:ignore &#39;test&#39; .</code>    添加到忽略目录</li>
<li><code>svn update</code> 更新</li>
<li><code>svn update -r</code>  更新到一个指定版本</li>
<li><code>svn checkout</code>     检出svn</li>
<li><code>svn checkout --depth=empty</code> 检出为空文件夹</li>
<li><code>svn revert -R .</code>  递归还原当前目录</li>
<li><code>svn commit -m &#39;&#39;</code> 提交</li>
<li><code>svn add * --force</code> 强制提交所有<br>+<code>svn diff filename</code>  比较文件</li>
<li><code>svn status</code>  查看库文件状态</li>
<li><code>svn relocate svn switch --relocate   源地址  新地址</code>     切换svn地址</li>
<li><code>svn info</code>   查看目录信息</li>
<li><code>svn cleanup</code>  清理文件</li>
<li><code>svn (del, remove, rm)</code>  从svn中移除文件</li>
<li><code>svn export  -r</code> 导出一个没有svn文件夹的目录</li>
<li><code>svn merge -r 28:25</code>  从28到25回滚</li>
<li><code>svn resolved  filename</code>  解决冲突</li>
<li><code>svn rm  filename</code>   从svn中删除</li>
<li><code>svn rm   --keep-local  filename</code>  从svn中删除并保留本地文件</li>
</ul>
<a id="more"></a>
<h3 id="清除svn缓存的密码"><a href="#清除svn缓存的密码" class="headerlink" title="清除svn缓存的密码"></a>清除svn缓存的密码</h3><figure class="highlight plain"><figcaption><span>-rf ~/.subversion/auth```</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">###  svn的working copy locked并且cleanup不能恢复</span><br></pre></td></tr></table></figure>
<p>产生这种情况大多是因为上次svn命令执行失败且被锁定了。<br>如果cleanup没有效果的话只好手动删除锁定文件。<br>cd 到svn项目目录下，然后执行如下命令<br>del lock /q/s<br>就把锁删掉了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">###  设置svn 默认编辑器</span><br><span class="line">```shell</span><br><span class="line">export SVN_EDITOR=vim</span><br></pre></td></tr></table></figure></p>
<h3 id="svn-ignore"><a href="#svn-ignore" class="headerlink" title="svn ignore"></a>svn ignore</h3><ul>
<li><p>若想创建一个文件夹，但不加入版本控制，即忽略这个文件夹：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>多行</span><br><span class="line">svn propset svn:ignore "cache\</span><br><span class="line">tmp\</span><br><span class="line">null\</span><br><span class="line">and_so_on" .</span><br><span class="line"><span class="meta">#</span>或者手动编辑</span><br><span class="line"> svn propedit svn:ignore .</span><br></pre></td></tr></table></figure>
</li>
<li><p>若已经创建了文件夹，并加入了版本控制，现在想忽略这个文件夹，但要保持文件夹的内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">svn rm --keep-local path/directory_to_keep/*</span><br><span class="line">svn propset svn:ignore 'path/directory_to_keep/*' .</span><br></pre></td></tr></table></figure>
</li>
<li><p>未加入版本控制,要忽略子目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">svn add -N dir</span><br><span class="line">cd dir</span><br><span class="line">svn propset svn:ignore "igdir"</span><br><span class="line">svn add .</span><br><span class="line">svn st</span><br></pre></td></tr></table></figure>
</li>
<li><p>检查设置的忽略属性在哪个地方</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">svn proplist</span><br><span class="line"><span class="meta">#</span>查看设置的忽略详情</span><br><span class="line">svn propget svn:ignore</span><br><span class="line"><span class="meta">#</span>  删除设置的忽略目录</span><br><span class="line">svn propdel svn:ignore</span><br></pre></td></tr></table></figure>
</li>
<li><p>svn-ignore-all :设置所有状态带<code>?</code>的资源ignore.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line"><span class="meta">#</span> svn-ignore-all</span><br><span class="line"><span class="meta">#</span> usage:</span><br><span class="line"><span class="meta">#</span>   1. run svn status to see what is going on at each step</span><br><span class="line"><span class="meta">#</span>   2. add or commit all files that you DO want to have in svn</span><br><span class="line"><span class="meta">#</span>   3. remove any random files that you don't want to svn:ignore</span><br><span class="line"><span class="meta">#</span>   4. run this script to svn:ignore everything marked '?' in output of `svn status`</span><br><span class="line"></span><br><span class="line">svn status |</span><br><span class="line">grep '^?' |</span><br><span class="line">sed 's/^? *//' |</span><br><span class="line">while read f; do</span><br><span class="line">    d=`dirname "$f"`</span><br><span class="line">    b=`basename "$f"`</span><br><span class="line">    ignore=`svn propget svn:ignore "$d"`</span><br><span class="line">    if [ -n "$ignore" ]; then</span><br><span class="line">        ignore="$ignore</span><br><span class="line">"</span><br><span class="line">    fi</span><br><span class="line">    ignore="$ignore$b"</span><br><span class="line">    svn propset svn:ignore "$ignore" "$d"</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
</li>
<li><p>svn-ignore目录 .输入目录加入忽略</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line"><span class="meta">#</span> svn-ignore</span><br><span class="line"><span class="meta">#</span> usage:</span><br><span class="line"><span class="meta">#</span>   svn-ignore file/to/ignore ...</span><br><span class="line"></span><br><span class="line">for f; do</span><br><span class="line">    d=`dirname "$f"`</span><br><span class="line">    b=`basename "$f"`</span><br><span class="line">    ignore=`svn propget svn:ignore "$d"`</span><br><span class="line">    if [ -n "$ignore" ]; then</span><br><span class="line">        ignore="$ignore</span><br><span class="line">"</span><br><span class="line">    fi</span><br><span class="line">    ignore="$ignore$b"</span><br><span class="line">    svn propset svn:ignore "$ignore" "$d"</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="svn代码回滚改动已经被提交"><a href="#svn代码回滚改动已经被提交" class="headerlink" title="svn代码回滚改动已经被提交"></a>svn代码回滚改动已经被提交</h3><p>这种情况下，用<code>svn merge</code>命令来进行回滚。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>假设最新版本号是28。</span><br><span class="line">svn update</span><br><span class="line"><span class="meta">#</span> 然后找出要回滚的确切版本号：</span><br><span class="line"> svn log [something]</span><br><span class="line"><span class="meta">#</span>回滚到版本号25：</span><br><span class="line">svn merge -r 28:25 something</span><br><span class="line"><span class="meta">#</span>为了保险起见，再次确认回滚的结果：</span><br><span class="line">svn diff -r 28:25 [something]</span><br><span class="line"><span class="meta">#</span>提交回滚：</span><br><span class="line">svn commit -m "Revert revision from r28 to r25,because of ..."</span><br><span class="line"><span class="meta">#</span>提交后版本变成了29。</span><br></pre></td></tr></table></figure></p>
<h3 id="svn-删除带-的文件"><a href="#svn-删除带-的文件" class="headerlink" title="svn 删除带!的文件"></a>svn 删除带<code>!</code>的文件</h3><p>linux(支持带空格的文件)<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">svn st | grep ^! | awk '&#123;$1=""; print " --force \""substr($0,2)"@\"" &#125;' | xargs svn rm</span><br></pre></td></tr></table></figure></p>
<p>win<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>## svndel.bat</span><br><span class="line">svn status | findstr /R "^!" &gt; missing.list</span><br><span class="line">for /F "tokens=* delims=! " %%A in (missing.list) do (svn delete "%%A")</span><br><span class="line">del missing.list 2&gt;NUL</span><br></pre></td></tr></table></figure></p>
<h2 id="svn-server-配置"><a href="#svn-server-配置" class="headerlink" title="svn server 配置"></a>svn server 配置</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image16.png" alt="image"></p>
<h3 id="svnserve-conf"><a href="#svnserve-conf" class="headerlink" title="svnserve.conf"></a>svnserve.conf</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[general]</span></span><br><span class="line"><span class="string">password-db</span> <span class="string">=</span> <span class="string">passwd</span></span><br><span class="line"><span class="string">authz-db</span> <span class="string">=</span> <span class="string">authz</span></span><br></pre></td></tr></table></figure>
<p>passwd<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[users]</span></span><br><span class="line"><span class="string">wujiyu</span> <span class="string">=</span> <span class="string">wujiyu</span></span><br><span class="line"><span class="string">chenshu</span> <span class="string">=</span> <span class="string">chenshu</span></span><br><span class="line"><span class="string">huangjunhai</span> <span class="string">=</span> <span class="string">huangjunhai</span></span><br><span class="line"><span class="string">liujiefeng</span> <span class="string">=</span> <span class="string">liujiefeng</span></span><br></pre></td></tr></table></figure></p>
<p>authz<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[groups]</span></span><br><span class="line"><span class="string">client</span> <span class="string">=</span> <span class="string">wujiyu,chenshu</span></span><br><span class="line"><span class="string">server</span> <span class="string">=</span> <span class="string">liujiefeng</span></span><br><span class="line"><span class="string">doc</span> <span class="string">=</span> <span class="string">huangjunhai</span></span><br><span class="line"></span><br><span class="line"><span class="string">[/]</span></span><br><span class="line"><span class="string">wujiyu</span> <span class="string">=</span> <span class="string">rw</span></span><br><span class="line"><span class="string">[/client]</span></span><br><span class="line"><span class="string">@client</span> <span class="string">=</span> <span class="string">rw</span></span><br><span class="line"><span class="string">[/server]</span></span><br><span class="line"><span class="string">@server</span> <span class="string">=</span> <span class="string">rw</span></span><br><span class="line"><span class="string">[/doc]</span></span><br><span class="line"><span class="string">@doc</span> <span class="string">=</span> <span class="string">rw</span></span><br><span class="line"><span class="string">@client</span> <span class="string">=</span> <span class="string">r</span></span><br><span class="line"><span class="string">@server</span> <span class="string">=</span> <span class="string">r</span></span><br><span class="line"><span class="string">[/&lt;span</span> <span class="string">style="color:</span> <span class="comment">#0000ff"&gt;public&lt;/span&gt;]</span></span><br><span class="line"><span class="string">*=rw</span></span><br></pre></td></tr></table></figure></p>
<p>这样就可以实现目录权限分配了.</p>
<h2 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h2><ul>
<li>scm manager</li>
<li>visual svn</li>
</ul>
]]></content>
      
        <categories>
            
            <category> svn </category>
            
        </categories>
        
        
        <tags>
            
            <tag> svn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[顺丰快递接口]]></title>
      <url>http://www.farwmarth.com/%E9%A1%BA%E4%B8%B0%E5%BF%AB%E9%80%92%E6%8E%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<p>事件起源是:买了某物品,快递公司是顺丰. 手机本是装了快递100来追踪快件的.结果输入单号居然查不到信息.只能抱怨快递100这软件坑爹了.于是度娘一下.找到了顺风的官网查单号</p>
<p><a href="http://kf.sf-express.com/css/myquery/trackSmallTel.action" target="_blank" rel="noopener">http://kf.sf-express.com/css/myquery/trackSmallTel.action</a></p>
<p>查询结果是有的,可能是给快递100的接口有问题吧.</p>
<a id="more"></a>
<p>又突然想起在手机上是否也可以查呢?还真有”顺丰速运通”.也可以查询到详单信息. 只是这UI和体验真蛋疼. </p>
<p>作为一个纯正码农.又无节操地反编了一下顺丰速运通的apk.扒出了手机端的通信接口..居然没有作验证.</p>
<p><a href="http://syt.sf-express.com/css/newmobile/queryBillInfo.action?delivery_id=199120042475" target="_blank" rel="noopener">http://syt.sf-express.com/css/newmobile/queryBillInfo.action?delivery_id=199120042475</a></p>
<p>delivery_id就是快件单号.</p>
<p>返回json格式:<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"message"</span>: <span class="string">"成功"</span>,</span><br><span class="line">	<span class="attr">"result"</span>: &#123;</span><br><span class="line">		<span class="attr">"delivery_id"</span>: <span class="string">"199120042475"</span>,</span><br><span class="line">		<span class="attr">"delivery_message"</span>: <span class="string">"快件在广州集散中心,准备送往下一站"</span>,</span><br><span class="line">		<span class="attr">"delivery_status"</span>: <span class="string">"1"</span>,</span><br><span class="line">		<span class="attr">"router"</span>: [&#123;</span><br><span class="line">				<span class="attr">"address"</span>: <span class="string">"上海市"</span>,</span><br><span class="line">				<span class="attr">"statue_message"</span>: <span class="string">"快件在上海,准备送往下一站&lt;font color='red'&gt;上海集散中心\t"</span>,</span><br><span class="line">				<span class="attr">"time"</span>: <span class="string">"2013-05-21  22:19:38"</span></span><br><span class="line">			&#125;, &#123;</span><br><span class="line">				<span class="attr">"address"</span>: <span class="string">"上海市"</span>,</span><br><span class="line">				<span class="attr">"statue_message"</span>: <span class="string">"快件在上海集散中心\t,准备送往下一站&lt;font color='red'&gt;深圳集散中心\t"</span>,</span><br><span class="line">				<span class="attr">"time"</span>: <span class="string">"2013-05-22  10:24:00"</span></span><br><span class="line">			&#125;, &#123;</span><br><span class="line">				<span class="attr">"address"</span>: <span class="string">"深圳市"</span>,</span><br><span class="line">				<span class="attr">"statue_message"</span>: <span class="string">"快件在深圳集散中心\t,准备送往下一站&lt;font color='red'&gt;广州集散中心"</span>,</span><br><span class="line">				<span class="attr">"time"</span>: <span class="string">"2013-05-22  15:15:45"</span></span><br><span class="line">			&#125;, &#123;</span><br><span class="line">				<span class="attr">"address"</span>: <span class="string">"广州市"</span>,</span><br><span class="line">				<span class="attr">"statue_message"</span>: <span class="string">"快件在广州集散中心,准备送往下一站"</span>,</span><br><span class="line">				<span class="attr">"time"</span>: <span class="string">"2013-05-22  17:15:33"</span></span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">"success"</span>: <span class="string">"0"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 顺丰快递 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[About TexturePacker]]></title>
      <url>http://www.farwmarth.com/about-texturepacker/</url>
      <content type="html"><![CDATA[<p>TexturePacker是一个材质打包工具,最近学习starling的时候需要用到这个工具.先来个图  </p><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image12.png" alt="image">  </p><p>功能很齐全,支持众多语言. <img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image13.png" alt="image">    </p>
<a id="more"></a>
<p>平台支持也齐全,mac,windows,linux都可支持<br>使用也极其简单,将文件夹拖放到中间区域,在左边设置好导出的png,xml等.然后按菜单栏中的publish就ok了.licnese申请的条件是:有独立博客,然后5个月内至少发了5篇文章.还是很好申请的.<br>同类软件对比.<br>之前在微博关注的一个人也写了一个用于starling的.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image14.png" alt="image"><br>功能简单,也够用了.<br>还有一个工具叫shoeBox.这个工具也不错,就不详细介绍了.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image15.png" alt="image"><br>如果只是starling开发,后面两个工具足够了..如果要是平时开发的环境众多,texturepacker是不二的选择.</p>
]]></content>
      
        <categories>
            
            <category> starling </category>
            
        </categories>
        
        
        <tags>
            
            <tag> starling </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 开发调试]]></title>
      <url>http://www.farwmarth.com/Android%20%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<font color="red">update: 2016-1-14 更新模拟器<strong>夜神模拟器</strong></font><br><font color="red">update: 2013-8-13 更新模拟器<strong>Genymotion</strong></font><br><font color="red">update: 2013-5-19 更新wifi调试工具</font>

<h2 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h2><p>android自带模拟器真是龟速,果断放弃</p>
<ul>
<li>夜神模拟器</li>
<li><a href="http://www.bluestacks.net.cn/Download/" target="_blank" rel="noopener">bluestacks</a>: 可以安装软件和调试的模拟器,速度比android的不知道快到哪去了.<br>安装完后,eclipse会把它识别为一台设备 .和真机调试没啥区别.运行界面<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image11.png" alt="image"></li>
<li>Genymotion</li>
<li>逍遥安卓模拟器</li>
<li>靠谱助手安卓模拟器</li>
<li>海马玩模拟器<br>mac下连接: <code>adb connect 192.168.56.101</code></li>
</ul>
<a id="more"></a>
<h2 id="wifi-调试"><a href="#wifi-调试" class="headerlink" title="wifi 调试"></a>wifi 调试</h2><p>今天没带数据线,搜了一下居然可以wifi调试.<br><strong>1. 要求</strong><br>手机必须root过，手机和电脑必须都联网且在同一局域网内。</p>
<p><strong>2. 步骤</strong></p>
<ul>
<li>手机端启动adbd服务<br>在手机端打开终端运行shell命令，终端可使用软件”终端模拟器” 或 “BetterTerminal” ，通过下面命令启动adbd服务<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setprop service.adb.tcp.port 5555</span><br><span class="line">stop adbd</span><br><span class="line">start adbd</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>上面su命令表示切换到root状态，setprop service.adb.tcp.port 5555表示设置adb tcp连接的端口为5555。stop adbd start adbd表示重启adbd服务<br>这时到手机的<strong>设置-&gt;系统-&gt;网络里查看手机ip地址多少</strong>，如为192.168.1.193</p>
<ul>
<li>在PC端打开cmd命令行**，输入<br><code>adb connect 192.168.1.193</code><br>表示adb连接到手机，连接成功会显示connected to 192.168.1.194:5555或already connected to 192.168.1.194:5555。如果adb命令不认识，添加android sdk的tools目录到系统path中。接下来eclipse编译选择相应的AVD即可。要关闭连接可以在pc端输入<br><code>adb disconnect 192.168.1.110</code><br>如果不想在手机中这么麻烦输入命令,可以下现成的工具 adb wireless</li>
</ul>
<h2 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h2><ul>
<li>tempMonitor: cpu温度监控</li>
</ul>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 调试 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[最近迷恋上小霸王游戏:小蜜蜂]]></title>
      <url>http://www.farwmarth.com/%E6%9C%80%E8%BF%91%E8%BF%B7%E6%81%8B%E4%B8%8A%E5%B0%8F%E9%9C%B8%E7%8E%8B%E6%B8%B8%E6%88%8F,%E5%B0%8F%E8%9C%9C%E8%9C%82/</url>
      <content type="html"><![CDATA[<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image8.png" alt="image"> </p>
<p>这个东东是不是勾起了你童年的回忆..是的,80,90都是这么过来的.黑白电视机加小霸王学习机就是那个年代的无敌装备.</p>
<a id="more"></a>
<p>在网上搜索了一下居然原版的没有swf单机版,用4399游戏盒只能下到nes版的.用模拟器才能运行起来.本来还想看下代码ai的部分.百科一下就无语了,红白机开发nes时用的是汇编,我等小白只能望洋兴叹.不甘心啊,还是想找flash版的.搜索半天居然搜索到几个as 的nes开源项目.</p>
<ul>
<li>as3nes</li>
</ul>
<p><a href="https://code.google.com/p/as3nes/" target="_blank" rel="noopener">https://code.google.com/p/as3nes/</a> 项目不知道是韩语还是日语,反正就是看不懂的鸟语.down来下把 小蜜蜂的nes装置…一漆黑.不知道是不支持64位还是什么原因.as代码里有cpu,寄存器代码转换指令..看不懂..</p>
<ul>
<li>aminne</li>
</ul>
<p><a href="https://code.google.com/p/aminnes/" target="_blank" rel="noopener">https://code.google.com/p/aminnes/</a> 国人的项目 天地会帖子地址:<a href="http://bbs.9ria.com/thread-34851-1-1.html" target="_blank" rel="noopener">http://bbs.9ria.com/thread-34851-1-1.html</a> .已开源.装载小蜜蜂.nes. 哈哈,终于出来了.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image9.png" alt="image"> </p>
<p>不过有点缺陷就是:有点掉帧, 还有就是没有声音,不过这个已经相当强大了.只能说作者牛屎.</p>
<ul>
<li>fc64</li>
</ul>
<p><a href="http://codeazur.com.br/stuff/fc64_final/" target="_blank" rel="noopener">http://codeazur.com.br/stuff/fc64_final/</a></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image10.png" alt="image"> </p>
<p>老外的这个写了更全面,在github上开源了:<a href="https://github.com/claus/fc64" target="_blank" rel="noopener">https://github.com/claus/fc64</a> .还支持android. 有意思 ..</p>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nes </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数据结构整理]]></title>
      <url>http://www.farwmarth.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<h5 id="数据结构形式定义"><a href="#数据结构形式定义" class="headerlink" title="数据结构形式定义:"></a>数据结构形式定义:</h5><ul>
<li>逻辑结构<br>集合,线性,树形,图,网状<br>“数据结构”定义中的“关系”指数据间的逻辑关系，故也称数据结构为逻辑结构。</li>
<li>存储结构<br>数据结构在计算机中的表示称为物理结构。又称存储结构。<br>顺序存储结构<br>链式存储结构</li>
</ul>
<a id="more"></a>
<h5 id="数组-Array"><a href="#数组-Array" class="headerlink" title="数组 (Array)"></a>数组 (Array)</h5><p>数组设计之初是在形式上依赖<a href="http://zh.wikipedia.org/w/index.php?title=%E5%85%A7%E5%AD%98%E5%88%86%E9%85%8D&amp;action=edit&amp;redlink=1" title="%E5%85%A7%E5%AD%98%E5%88%86%E9%85%8D&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">內存分配</a>而成的，所以必须在使用前预先请求空间。这使得数组有以下特性：</p>
<ul>
<li>请求空间以后大小固定，不能再改变(<a href="http://zh.wikipedia.org/wiki/%E6%95%B8%E6%93%9A%E6%BA%A2%E5%87%BA" target="_blank" rel="noopener">数据溢出</a>问题)</li>
<li>在內存中有空间连续性的表现，中间不会存在其他程序需要调用的数据，为此数组的专用內存空间；</li>
<li>数组通过索引来访问元素,不用遍历整个数组列表,所以访问速度很快.但是因为数组是存储结构是连续的,在头部删除,中间插入元素时,操作的后半部分项都需要进行移动导致速度慢.所以删除可以从数组的尾部开始.<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image.png" alt="image"></li>
</ul>
<p>AS的数组与java不同,非定长.测试代码<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr:Array = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i:uint= <span class="number">0</span> ;i&lt;<span class="number">1000000</span>;i++)arr[i]=i ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> startT:Number = getTimer();</span><br><span class="line"><span class="keyword">var</span> num:uint = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    arr.shift();</span><br><span class="line">    num--;</span><br><span class="line">&#125;</span><br><span class="line">trace(<span class="string">"time:"</span>,getTimer() - startT);上面消耗 <span class="number">822</span>ms,改为pop.消耗<span class="number">1</span>ms.</span><br><span class="line"><span class="keyword">var</span> arr:Array = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i:uint= <span class="number">0</span> ;i&lt;<span class="number">1000000</span>;i++)arr[i]=i ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> startT:Number = getTimer();</span><br><span class="line"><span class="keyword">var</span> num:uint = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    arr.pop();</span><br><span class="line">    num--;</span><br><span class="line">&#125;</span><br><span class="line">trace(<span class="string">"time:"</span>,getTimer() - startT);</span><br></pre></td></tr></table></figure></p>
<h5 id="栈-Stack"><a href="#栈-Stack" class="headerlink" title="栈 (Stack)"></a>栈 (Stack)</h5><p>是只能在某一端插入和删除的特殊<a href="http://baike.baidu.com/view/178622.htm" target="_blank" rel="noopener">线性表</a>。它按照先进后出的原则存储数据，先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据（最后一个数据被第一个读出来）。<br>as用数组实现的栈<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span></span></span><br><span class="line"><span class="class">	</span>&#123;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _data:Array;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Stack</span><span class="params">()</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			_data = <span class="keyword">new</span> Array();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">push</span><span class="params">(item:Object)</span>:void</span>&#123;</span><br><span class="line">			_data.push(item);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">pop</span><span class="params">()</span>:Object</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> _data.pop();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>java实现<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Object[] obj;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> minSize = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> cursor = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Stack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		obj = <span class="keyword">new</span> Object[minSize];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Object item)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(cursor&gt;=obj.length-<span class="number">1</span>)&#123;</span><br><span class="line">			obj =Arrays.copyOf(obj, obj.length+minSize);</span><br><span class="line">		&#125;</span><br><span class="line">		obj[cursor++]=item;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> obj[--cursor];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="队列-Queue"><a href="#队列-Queue" class="headerlink" title="队列 (Queue)"></a>队列 (Queue)</h5><p>一种特殊的<a href="http://baike.baidu.com/view/178622.htm" target="_blank" rel="noopener">线性表</a>，它只允许在表的<a href="http://baike.baidu.com/view/495145.htm" target="_blank" rel="noopener">前端</a>（front）进行删除操作，而在表的后端（rear）进行插入操作。进行插入操作的端称为队尾，进行删除操作的端称为队头。队列是按照“先进先出”或“后进后出”的原则组织数据的。队列中没有元素时，称为空队列。</p>
<figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Queue</span></span></span><br><span class="line"><span class="class">	</span>&#123;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> _data:Array;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Queue</span><span class="params">()</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			_data = <span class="keyword">new</span> Array();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">push</span><span class="params">(item:Object)</span>:void</span>&#123;</span><br><span class="line">			_data.push(item);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shift</span><span class="params">()</span>:Object</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> _data.shift();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h5 id="优先队列-有优先级别"><a href="#优先队列-有优先级别" class="headerlink" title="优先队列 :有优先级别"></a>优先队列 :有优先级别</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PriorityQ</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">   <span class="comment">// array in sorted order, from max at 0 to min at size-1</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">long</span>[] queArray;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> nItems;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">PriorityQ</span><span class="params">(<span class="keyword">int</span> s)</span>          <span class="comment">// constructor</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">      maxSize = s;</span><br><span class="line">      queArray = <span class="keyword">new</span> <span class="keyword">long</span>[maxSize];</span><br><span class="line">      nItems = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">long</span> item)</span>    <span class="comment">// insert item</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(nItems==<span class="number">0</span>)                         <span class="comment">// if no items,</span></span><br><span class="line">         queArray[nItems++] = item;         <span class="comment">// insert at 0</span></span><br><span class="line">      <span class="keyword">else</span>                                <span class="comment">// if items,</span></span><br><span class="line">         &#123;</span><br><span class="line">         <span class="keyword">for</span>(j=nItems-<span class="number">1</span>; j&gt;=<span class="number">0</span>; j--)         <span class="comment">// start at end,</span></span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">if</span>( item &gt; queArray[j] )      <span class="comment">// if new item larger,</span></span><br><span class="line">               queArray[j+<span class="number">1</span>] = queArray[j]; <span class="comment">// shift upward</span></span><br><span class="line">            <span class="keyword">else</span>                          <span class="comment">// if smaller,</span></span><br><span class="line">               <span class="keyword">break</span>;                     <span class="comment">// done shifting</span></span><br><span class="line">            &#125;  <span class="comment">// end for</span></span><br><span class="line">         queArray[j+<span class="number">1</span>] = item;            <span class="comment">// insert it</span></span><br><span class="line">         nItems++;</span><br><span class="line">         &#125;  <span class="comment">// end else (nItems &gt; 0)</span></span><br><span class="line">      &#125;  <span class="comment">// end insert()</span></span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">remove</span><span class="params">()</span>             <span class="comment">// remove minimum item</span></span></span><br><span class="line"><span class="function">      </span>&#123; <span class="keyword">return</span> queArray[--nItems]; &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">peekMin</span><span class="params">()</span>            <span class="comment">// peek at minimum item</span></span></span><br><span class="line"><span class="function">      </span>&#123; <span class="keyword">return</span> queArray[nItems-<span class="number">1</span>]; &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span>         <span class="comment">// true if queue is empty</span></span></span><br><span class="line"><span class="function">      </span>&#123; <span class="keyword">return</span> (nItems==<span class="number">0</span>); &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span>          <span class="comment">// true if queue is full</span></span></span><br><span class="line"><span class="function">      </span>&#123; <span class="keyword">return</span> (nItems == maxSize); &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line">   &#125;  <span class="comment">// end class PriorityQ</span></span><br></pre></td></tr></table></figure>
<h5 id="链表-Linked-List"><a href="#链表-Linked-List" class="headerlink" title="链表 (Linked List)"></a>链表 (Linked List)</h5><p>是一种物理存储单元上非连续、非顺序的存储结构，它既可以表示线性结构，也可以用于表示非线性结构，数据元素的<a href="http://baike.baidu.com/view/869200.htm" target="_blank" rel="noopener">逻辑顺序</a>是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时<a href="http://baike.baidu.com/view/31294.htm" target="_blank" rel="noopener">动态</a>生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。</p>
<ul>
<li><p><strong>单向链表</strong>: 从头部插入节点.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image1.png" alt="image"> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkList</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Node first;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">LinkList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		first = <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFirst</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">		Node newNode = <span class="keyword">new</span> Node(data);</span><br><span class="line">		newNode.next = first;</span><br><span class="line">		first = newNode;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Node <span class="title">deleteFirst</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Node temp = first;</span><br><span class="line">		first = first.next;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> first == <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Node cu = first;</span><br><span class="line">		<span class="keyword">while</span> (cu != <span class="keyword">null</span>) &#123;</span><br><span class="line">			cu.display();</span><br><span class="line">			cu = cu.next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">		<span class="keyword">private</span> Object data;</span><br><span class="line">		<span class="keyword">private</span> Node next;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="title">Node</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.data = data;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			System.out.println(data);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>双端链表</strong>:不要和双向链表混淆了,双端列表持有了末尾的节点可以方便地在末尾插入节点</p>
</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image2.png" alt="image"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> datastruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstLastList</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Link first; <span class="comment">// ref to first link</span></span><br><span class="line">	<span class="keyword">private</span> Link last; <span class="comment">// ref to last link</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FirstLastList</span><span class="params">()</span> <span class="comment">// constructor</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		first = <span class="keyword">null</span>; <span class="comment">// no links on list yet</span></span><br><span class="line">		last = <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> <span class="comment">// true if no links</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> first == <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFirst</span><span class="params">(<span class="keyword">long</span> dd)</span> <span class="comment">// insert at front of list</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		Link newLink = <span class="keyword">new</span> Link(dd); <span class="comment">// make new link</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (isEmpty()) <span class="comment">// if empty list,</span></span><br><span class="line">			last = newLink; <span class="comment">// newLink &lt;-- last</span></span><br><span class="line">		newLink.next = first; <span class="comment">// newLink --&gt; old first</span></span><br><span class="line">		first = newLink; <span class="comment">// first --&gt; newLink</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// -------------------------------------------------------------</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertLast</span><span class="params">(<span class="keyword">long</span> dd)</span> <span class="comment">// insert at end of list</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		Link newLink = <span class="keyword">new</span> Link(dd); <span class="comment">// make new link</span></span><br><span class="line">		<span class="keyword">if</span> (isEmpty()) <span class="comment">// if empty list,</span></span><br><span class="line">			first = newLink; <span class="comment">// first --&gt; newLink</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			last.next = newLink; <span class="comment">// old last --&gt; newLink</span></span><br><span class="line">		last = newLink; <span class="comment">// newLink &lt;-- last</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// -------------------------------------------------------------</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">deleteFirst</span><span class="params">()</span> <span class="comment">// delete first link</span></span></span><br><span class="line"><span class="function">	</span>&#123; <span class="comment">// (assumes non-empty list)</span></span><br><span class="line">		<span class="keyword">long</span> temp = first.dData;</span><br><span class="line">		<span class="keyword">if</span> (first.next == <span class="keyword">null</span>) <span class="comment">// if only one item</span></span><br><span class="line">			last = <span class="keyword">null</span>; <span class="comment">// null &lt;-- last</span></span><br><span class="line">		first = first.next; <span class="comment">// first --&gt; old next</span></span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// -------------------------------------------------------------</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">"List (first--&gt;last): "</span>);</span><br><span class="line">		Link current = first; <span class="comment">// start at beginning</span></span><br><span class="line">		<span class="keyword">while</span> (current != <span class="keyword">null</span>) <span class="comment">// until end of list,</span></span><br><span class="line">		&#123;</span><br><span class="line">			current.displayLink(); <span class="comment">// print data</span></span><br><span class="line">			current = current.next; <span class="comment">// move to next link</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">""</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">long</span> dData; <span class="comment">// data item</span></span><br><span class="line">		<span class="keyword">public</span> Link next; <span class="comment">// next link in list</span></span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Link</span><span class="params">(<span class="keyword">long</span> d)</span> <span class="comment">// constructor</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			dData = d;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayLink</span><span class="params">()</span> <span class="comment">// display this link</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			System.out.print(dData + <span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>双向链表:</strong> </li>
</ul>
<p>双向链表的缺点是每一个插入删除操作,都要处理四个链节点的引用,因为持有前后结点的引用,内存占用也相应增加.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image3.png" alt="image"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> datastruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleLinkedList</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Link first;</span><br><span class="line">	<span class="keyword">private</span> Link last;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> first == <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insrtFirst</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">		Link newData = <span class="keyword">new</span> Link(data);</span><br><span class="line">		<span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">			last = newData;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			first.pre = newData;</span><br><span class="line">		&#125;</span><br><span class="line">		newData.next = first;</span><br><span class="line">		first = newData;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertLast</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">		Link newData = <span class="keyword">new</span> Link(data);</span><br><span class="line">		<span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">			first = newData;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			last.next = newData;</span><br><span class="line">			newData.pre = last;</span><br><span class="line">		&#125;</span><br><span class="line">		last = newData;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayPre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Link cu=first;</span><br><span class="line">		<span class="keyword">while</span> (cu != <span class="keyword">null</span>) &#123;</span><br><span class="line">			cu.displayLink();</span><br><span class="line">			cu = cu.next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayLast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Link cu=last;</span><br><span class="line">		<span class="keyword">while</span> (cu != <span class="keyword">null</span>) &#123;</span><br><span class="line">			cu.displayLink();</span><br><span class="line">			cu = cu.pre;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line">		<span class="keyword">public</span> Object dData;</span><br><span class="line">		<span class="keyword">public</span> Link next;</span><br><span class="line">		<span class="keyword">public</span> Link pre;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Link</span><span class="params">(Object d)</span> </span>&#123;</span><br><span class="line">			dData = d;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayLink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			System.out.print(dData + <span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="树-Tree"><a href="#树-Tree" class="headerlink" title="树 (Tree)"></a>树 (Tree)</h5><p>是包含n（n&gt;0）个结点的有穷集合K，且在K中定义了一个关系N，N满足 以下条件：<br>（1）有且仅有一个结点 K0，他对于关系N来说没有前驱，称K0为树的根结点。简称为根（root）。　<br>（2）除K0外，K中的每个结点，对于关系N来说有且仅有一个前驱。<br>（3）K中各结点，对关系N来说可以有m个后继（m&gt;=0）。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image4.png" alt="image"><br> <strong>二叉搜索树</strong> :一个节点的左子节点的关键字值小于这个节点,右子节点的关键字值大于或等于这个节点.(可以快速地插入和删除数据项)<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/05/image5.png" alt="image"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> datastruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryFindTree</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">int</span> data;</span><br><span class="line">		<span class="keyword">public</span> Node leftChild;</span><br><span class="line">		<span class="keyword">public</span> Node rightChild;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.data = data;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Node root;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BinaryFindTree</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		root = <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">		Node newNode = <span class="keyword">new</span> Node(data);</span><br><span class="line">		<span class="keyword">if</span> (root == <span class="keyword">null</span>)</span><br><span class="line">			root = newNode;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			Node current = root; <span class="comment">// start at root</span></span><br><span class="line">			Node parent;</span><br><span class="line">			<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">				parent = current;</span><br><span class="line">				<span class="keyword">if</span> (data &lt; current.data) &#123;</span><br><span class="line">					current = current.leftChild;</span><br><span class="line">					<span class="keyword">if</span> (current == <span class="keyword">null</span>) &#123;</span><br><span class="line">						parent.leftChild = newNode;</span><br><span class="line">						<span class="keyword">return</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					current = current.rightChild;</span><br><span class="line">					<span class="keyword">if</span> (current == <span class="keyword">null</span>) &#123;</span><br><span class="line">						parent.rightChild = newNode;</span><br><span class="line">						<span class="keyword">return</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayTree</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Stack globalStack = <span class="keyword">new</span> Stack();</span><br><span class="line">		globalStack.push(root);</span><br><span class="line">		<span class="keyword">int</span> nBlanks = <span class="number">32</span>;</span><br><span class="line">		<span class="keyword">boolean</span> isRowEmpty = <span class="keyword">false</span>;</span><br><span class="line">		System.out</span><br><span class="line">				.println(<span class="string">"......................................................"</span>);</span><br><span class="line">		<span class="keyword">while</span> (isRowEmpty == <span class="keyword">false</span>) &#123;</span><br><span class="line">			Stack localStack = <span class="keyword">new</span> Stack();</span><br><span class="line">			isRowEmpty = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; nBlanks; j++)</span><br><span class="line">				System.out.print(<span class="string">' '</span>);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">while</span> (globalStack.isEmpty() == <span class="keyword">false</span>) &#123;</span><br><span class="line">				Node temp = (Node) globalStack.pop();</span><br><span class="line">				<span class="keyword">if</span> (temp != <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.print(temp.data);</span><br><span class="line">					localStack.push(temp.leftChild);</span><br><span class="line">					localStack.push(temp.rightChild);</span><br><span class="line"></span><br><span class="line">					<span class="keyword">if</span> (temp.leftChild != <span class="keyword">null</span> || temp.rightChild != <span class="keyword">null</span>)</span><br><span class="line">						isRowEmpty = <span class="keyword">false</span>;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					System.out.print(<span class="string">"--"</span>);</span><br><span class="line">					localStack.push(<span class="keyword">null</span>);</span><br><span class="line">					localStack.push(<span class="keyword">null</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; nBlanks * <span class="number">2</span> - <span class="number">2</span>; j++)</span><br><span class="line">					System.out.print(<span class="string">' '</span>);</span><br><span class="line">			&#125; <span class="comment">// end while globalStack not empty</span></span><br><span class="line">			System.out.println();</span><br><span class="line">			nBlanks /= <span class="number">2</span>;</span><br><span class="line">			<span class="keyword">while</span> (localStack.isEmpty() == <span class="keyword">false</span>)</span><br><span class="line">				globalStack.push(localStack.pop());</span><br><span class="line">		&#125; <span class="comment">// end while isRowEmpty is false</span></span><br><span class="line">		System.out</span><br><span class="line">				.println(<span class="string">"......................................................"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="四叉树-四叉树通常用于2d游戏碰撞检测-ghostcat版as实现"><a href="#四叉树-四叉树通常用于2d游戏碰撞检测-ghostcat版as实现" class="headerlink" title="四叉树:四叉树通常用于2d游戏碰撞检测.ghostcat版as实现:"></a><strong>四叉树</strong>:四叉树通常用于2d游戏碰撞检测.ghostcat版as实现:</h5><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> <span class="title">ghostcat</span>.<span class="title">algorithm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.geom.Rectangle;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 图形筛选4叉树</span></span><br><span class="line"><span class="comment">	 * @author flashyiyi</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuadTree</span></span></span><br><span class="line"><span class="class">	</span>&#123;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 第1象限</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> q1:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 第2象限</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> q2:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 第3象限</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> q3:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 第4象限</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> q4:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 父节点</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> parent:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 起始节点</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> root:QuadTree;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 图形范围</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> rect:Rectangle;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 数据</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">var</span> data:Array = [];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">QuadTree</span><span class="params">(rect:Rectangle)</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.rect = rect;</span><br><span class="line">			<span class="keyword">this</span>.root = <span class="keyword">this</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 创建树结构</span></span><br><span class="line"><span class="comment">		 * @param deep</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createChildren</span><span class="params">(deep:int)</span>:void</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (deep == <span class="number">0</span>)</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">const</span> hw:Number = rect.width / <span class="number">2</span>;</span><br><span class="line">			<span class="keyword">const</span> hh:Number = rect.height / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">			q1 = <span class="keyword">new</span> QuadTree(<span class="keyword">new</span> Rectangle(rect.x + hw, rect.y, hw, hh));</span><br><span class="line">			q2 = <span class="keyword">new</span> QuadTree(<span class="keyword">new</span> Rectangle(rect.x + hw, rect.y + hh, hw, hh));</span><br><span class="line">			q3 = <span class="keyword">new</span> QuadTree(<span class="keyword">new</span> Rectangle(rect.x, rect.y + hh, hw, hh));</span><br><span class="line">			q4 = <span class="keyword">new</span> QuadTree(<span class="keyword">new</span> Rectangle(rect.x, rect.y, hw, hh));</span><br><span class="line"></span><br><span class="line">			q1.parent = q2.parent = q3.parent = q4.parent = <span class="keyword">this</span>;</span><br><span class="line">			q1.root = q2.root = q3.root = q4.root = <span class="keyword">this</span>.root;</span><br><span class="line"></span><br><span class="line">			q1.createChildren(deep - <span class="number">1</span>);</span><br><span class="line">			q2.createChildren(deep - <span class="number">1</span>);</span><br><span class="line">			q3.createChildren(deep - <span class="number">1</span>);</span><br><span class="line">			q4.createChildren(deep - <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 是否有子树</span></span><br><span class="line"><span class="comment">		 * @return</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">hasChildren</span><span class="params">()</span>:Boolean</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> q1 &amp;&amp; q2 &amp;&amp; q3 &amp;&amp; q4;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 添加一个数据</span></span><br><span class="line"><span class="comment">		 * @param v</span></span><br><span class="line"><span class="comment">		 * @param x</span></span><br><span class="line"><span class="comment">		 * @param y</span></span><br><span class="line"><span class="comment">		 * @return</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(v:*, x:Number, y:Number)</span>:QuadTree</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!isIn(x,y))</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (hasChildren)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> q1.add(v,x,y) || q2.add(v,x,y) || q3.add(v,x,y) || q4.add(v,x,y);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				data.push(v);</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 删除一个数据，坐标为NaN则会进行遍历查找</span></span><br><span class="line"><span class="comment">		 * @param v</span></span><br><span class="line"><span class="comment">		 * @param x</span></span><br><span class="line"><span class="comment">		 * @param y</span></span><br><span class="line"><span class="comment">		 * @return</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span><span class="params">(v:*, x:Number = NaN, y:Number = NaN)</span>:QuadTree</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!isIn(x,y))</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (hasChildren)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> q1.remove(v,x,y) || q2.remove(v,x,y) || q3.remove(v,x,y) || q4.remove(v,x,y);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">var</span> index:int = data.indexOf(v);</span><br><span class="line">				<span class="keyword">if</span> (index!=<span class="number">-1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					data.splice(index, <span class="number">1</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 检测是否还在当前区间内，并返回新的区间</span></span><br><span class="line"><span class="comment">		 * @param v</span></span><br><span class="line"><span class="comment">		 * @param x</span></span><br><span class="line"><span class="comment">		 * @param y</span></span><br><span class="line"><span class="comment">		 * @return</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">reinsert</span><span class="params">(v:*, x:Number, y:Number)</span>:QuadTree</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!isIn(x,y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">var</span> result:QuadTree = root.add(v,x,y);</span><br><span class="line">				<span class="keyword">if</span> (result)</span><br><span class="line">				&#123;</span><br><span class="line">					remove(v);</span><br><span class="line">					<span class="keyword">return</span> result;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 判断坐标是否在界限内，设为NaN则不做限制</span></span><br><span class="line"><span class="comment">		 * @param x</span></span><br><span class="line"><span class="comment">		 * @param y</span></span><br><span class="line"><span class="comment">		 * @return</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isIn</span><span class="params">(x:Number, y:Number)</span>:Boolean</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> (isNaN(x) || x &gt;= rect.x &amp;&amp; x &lt; rect.right) &amp;&amp; (isNaN(y) || y &gt;= rect.y &amp;&amp; y &lt; rect.bottom);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 获得一个范围内的所有数据</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 * @param rect</span></span><br><span class="line"><span class="comment">		 *</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDataInRect</span><span class="params">(rect:Rectangle)</span>:Array</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!<span class="keyword">this</span>.rect.intersects(rect))</span><br><span class="line">				<span class="keyword">return</span> [];</span><br><span class="line"></span><br><span class="line">			<span class="keyword">var</span> result:Array = data.concat();</span><br><span class="line">			<span class="keyword">if</span> (hasChildren)</span><br><span class="line">			&#123;</span><br><span class="line">				result.push.apply(<span class="literal">null</span>,q1.getDataInRect(rect));</span><br><span class="line">				result.push.apply(<span class="literal">null</span>,q2.getDataInRect(rect));</span><br><span class="line">				result.push.apply(<span class="literal">null</span>,q3.getDataInRect(rect));</span><br><span class="line">				result.push.apply(<span class="literal">null</span>,q4.getDataInRect(rect));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="图-Graph"><a href="#图-Graph" class="headerlink" title="图 (Graph)"></a>图 (Graph)</h5><p>图是由结点的有穷集合V和边的集合E组成。其中，为了与树形结构加以<a href="http://baike.baidu.com/view/367270.htm" target="_blank" rel="noopener">区别</a>，在图结构中常常将结点称为顶点，边是顶点的有序偶对，若两个顶点之间存在一条边，就表示这两个顶点具有相邻关系。</p>
<h5 id="堆-Heap"><a href="#堆-Heap" class="headerlink" title="堆 (Heap)"></a>堆 (Heap)</h5><p>在计算机科学中，堆是一种特殊的树形数据结构，每个结点都有一个值。通常我们所说的堆的数据结构，是指二叉堆。堆的特点是根结点的值最小（或最大），且根结点的两个子树也是一个堆。</p>
<p> 二叉堆 :特殊结构的二叉树,比优先队列效率更高<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ds</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Heap是一种特殊的二叉树，它的每个节点都比它的子节点大。内部实现是用数组存储的。</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;</span></span><br><span class="line"><span class="comment">	 * 比如原树状结构为：</span></span><br><span class="line"><span class="comment">	 *    2</span></span><br><span class="line"><span class="comment">	 *   / \</span></span><br><span class="line"><span class="comment">	 *  1   0</span></span><br><span class="line"><span class="comment">	 * 则存储成数组为：</span></span><br><span class="line"><span class="comment">	 * [2,1,0]</span></span><br><span class="line"><span class="comment">	 * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Heap</span></span></span><br><span class="line"><span class="class">	</span>&#123;</span><br><span class="line">		<span class="keyword">private</span> var _heap:Array</span><br><span class="line">		<span class="keyword">private</span> var _compare:Function</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> compare  返回正数，则a排在b前边,如果不指定，默认为 function (a:int,b:int):int&#123;return a-b&#125;;</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function <span class="title">Heap</span><span class="params">(compare:Function = <span class="keyword">null</span>)</span>:<span class="keyword">void</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			_heap = [];</span><br><span class="line">			<span class="keyword">if</span>(compare==<span class="keyword">null</span>)</span><br><span class="line">				_compare =  function (a:<span class="keyword">int</span>,b:<span class="keyword">int</span>):<span class="keyword">int</span>&#123;<span class="keyword">return</span> a-b&#125;;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				_compare =compare;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function get <span class="title">length</span><span class="params">()</span>:uint</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> _heap.length</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function <span class="title">modify</span><span class="params">(obj:*,newObj:*)</span>:Boolean</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			 var objIndex:<span class="keyword">int</span> = <span class="keyword">this</span>._heap.indexOf(obj);</span><br><span class="line">			 <span class="keyword">if</span>(objIndex&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">false</span></span><br><span class="line">			 _heap[objIndex]= newObj</span><br><span class="line">		     var parentIndex:<span class="keyword">int</span> = (objIndex-<span class="number">1</span>)&gt;&gt;<span class="number">1</span></span><br><span class="line">			 var temp:* =  _heap[objIndex]</span><br><span class="line">			 <span class="keyword">while</span>(objIndex&gt;<span class="number">0</span>) <span class="comment">//只有objIndex&gt;0才有可能有parent</span></span><br><span class="line">			 &#123;</span><br><span class="line">				 <span class="comment">//如果新插入的数据大于parent的数据，则应不断上移与parent交换位置</span></span><br><span class="line">				 <span class="keyword">if</span>(_compare(temp,<span class="keyword">this</span>._heap[parentIndex])&gt;<span class="number">0</span>)</span><br><span class="line">				 &#123;</span><br><span class="line">					 <span class="keyword">this</span>._heap[objIndex] = <span class="keyword">this</span>._heap[parentIndex]</span><br><span class="line">					 objIndex = parentIndex</span><br><span class="line">					 parentIndex = (parentIndex-<span class="number">1</span>)&gt;&gt;<span class="number">1</span> <span class="comment">//parent索引的算法</span></span><br><span class="line">				 &#125;<span class="keyword">else</span></span><br><span class="line">				 &#123;</span><br><span class="line">					 <span class="keyword">break</span>;</span><br><span class="line">				 &#125;</span><br><span class="line">			 &#125;</span><br><span class="line">			 _heap[objIndex] = temp</span><br><span class="line">		     <span class="keyword">return</span> <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//入队</span></span><br><span class="line">		<span class="comment">//parentIndex = (childindex -1)/2</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function <span class="title">enqueue</span><span class="params">(obj:*)</span>:<span class="keyword">void</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">this</span>._heap.push(obj)</span><br><span class="line"></span><br><span class="line">			var parentIndex:<span class="keyword">int</span> = (<span class="keyword">this</span>._heap.length-<span class="number">2</span>)&gt;&gt; <span class="number">1</span></span><br><span class="line">			var objIndex:<span class="keyword">int</span> = <span class="keyword">this</span>._heap.length -<span class="number">1</span></span><br><span class="line">			var temp:* = <span class="keyword">this</span>._heap[objIndex]</span><br><span class="line"></span><br><span class="line">			<span class="keyword">while</span>(objIndex&gt;<span class="number">0</span>) <span class="comment">//只有objIndex&gt;0才有可能有parent</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="comment">//如果新插入的数据大于parent的数据，则应不断上移与parent交换位置</span></span><br><span class="line">				<span class="keyword">if</span>(_compare(temp,<span class="keyword">this</span>._heap[parentIndex])&gt;<span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">this</span>._heap[objIndex] = <span class="keyword">this</span>._heap[parentIndex]</span><br><span class="line">					objIndex = parentIndex</span><br><span class="line">					parentIndex = (parentIndex-<span class="number">1</span>)&gt;&gt;<span class="number">1</span> <span class="comment">//parent索引的算法</span></span><br><span class="line">				&#125;<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			_heap[objIndex] = temp</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//出队</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function <span class="title">dequeue</span><span class="params">()</span>:*</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(_heap.length&gt;<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				var r:* = _heap[<span class="number">0</span>]</span><br><span class="line">				_heap[<span class="number">0</span>] = _heap.pop()</span><br><span class="line">				var parentIndex:<span class="keyword">int</span> = <span class="number">0</span></span><br><span class="line">				var childIndex:<span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line">				var temp:* = _heap[parentIndex]</span><br><span class="line">				<span class="keyword">while</span>(childIndex &lt;= _heap.length-<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">						<span class="keyword">if</span>(_heap[childIndex+<span class="number">1</span>] &amp;&amp; <span class="keyword">this</span>._compare(_heap[childIndex],_heap[childIndex+<span class="number">1</span>])&lt;<span class="number">0</span>)</span><br><span class="line">						&#123;</span><br><span class="line">						 childIndex++</span><br><span class="line">						&#125;</span><br><span class="line">					<span class="keyword">if</span>(<span class="keyword">this</span>._compare(temp,<span class="keyword">this</span>._heap[childIndex])&lt;<span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						  <span class="keyword">this</span>._heap[parentIndex] = _heap[childIndex]</span><br><span class="line">						  parentIndex = childIndex;</span><br><span class="line">						  childIndex = (childIndex &lt;&lt;<span class="number">1</span>)+<span class="number">1</span></span><br><span class="line">					&#125;<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">break</span></span><br><span class="line">					&#125;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">				_heap[parentIndex] = temp</span><br><span class="line">				<span class="keyword">return</span> r</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> _heap.pop()</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> function <span class="title">toString</span><span class="params">()</span>:String</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>._heap.toString()</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> function get <span class="title">heap</span><span class="params">()</span>:Array</span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> _heap;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="散列表-Hash"><a href="#散列表-Hash" class="headerlink" title="散列表 (Hash)"></a>散列表 (Hash)</h5><p>若结构中存在关键字和K相等的记录，则必定在f(K)的存储位置上。由此，不需比较便可直接取得所查记录。称这个对应关系f为散列函数(Hash function)，按这个思想建立的表为<a href="http://baike.baidu.com/view/1320746.htm" target="_blank" rel="noopener">散列表</a>。</p>
<p><a href="http://www.nshen.net/dataStructure/2011/08/25/AS3-DataStructure.html" target="_blank" rel="noopener">http://www.nshen.net/dataStructure/2011/08/25/AS3-DataStructure.html</a></p>
<p><a href="http://blog.csdn.net/zhanxinhang/article/details/6706217" target="_blank" rel="noopener">http://blog.csdn.net/zhanxinhang/article/details/6706217</a></p>
]]></content>
      
        <categories>
            
            <category> base </category>
            
        </categories>
        
        
        <tags>
            
            <tag> base </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[斗地主结构分析]]></title>
      <url>http://www.farwmarth.com/%E6%96%97%E5%9C%B0%E4%B8%BB%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>这段时间在反编别人的代码,基本了解了android的游戏开发过程.在这里总结一下蛙蛙斗地主的体系结构.</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/04/7a52e3c36bb3.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/thumb1.jpg" alt="蛙蛙斗地主结构" title="蛙蛙斗地主结构"></a></p>
<p>activity管理:</p>
<p>注意在activity的回调中资源的创建及销毁.管理好activity的生命周期.</p>
<a id="more"></a>
<p>资源管理:</p>
<p>手机和pc不一样,在内存和运行性能上还有一定差距.所以资源的释放非常重要,在pc页游项目中,经常采用缓存图片资源的做法来提高程序的流畅性,手机项目最好在activity切换时如果内存达到一个上限时释放掉.可以把资源集中管理.</p>
<p>耗时操作</p>
<p>flash11.4之前不提供多线程api,用分帧来处理耗时操作,11.4后有了work线程. android里耗时操作可以另劈线程,防止阻塞UI.</p>
<p>蛙蛙结构:</p>
<p> <strong>图片资源管理器</strong>: 分为单张图片和多个资源合成的图片.在管理器内切割.部分动画也打包成一张图片. 程序初始化的时候将图片加载好变成Bitmap,加载完所有资源后通知activity初始化界面.在退出程序之前销毁所有图片资源.</p>
<p> <strong>游戏桌</strong>:分为了两层. 底层是GameScene,继承了SurfaceView,用于绘制牌和一些动画. 上层放android其他常规组件,如聊天,表情按钮什么的. 绘制对象上图已经描述清楚了. 蛙蛙的性能有待考究.绘制频率太快.屏幕元素太多时消耗太大.在mx上玩了一会就开始发热了 .draw的面积越大消耗越大.SurfaceView采用了双缓冲机制,图片是静态的不做动作的话,其实只要绘制二帧就可以了.可以将背景图这些少更改面积大的单独只绘制两帧.</p>
<p> <strong>位图文字</strong>: 为了美化可能要显示一些样式特别的字体.就可以用Canvas.drawText方法将文字绘制成位图,当然要传入文字样式的笔刷.</p>
<p> <strong> 扑克规则</strong>: 这个属于玩牌的规则了.牌型有:单张,对子,三张,三张一/二,炸弹等等. 基础功能点还包括:牌型大小比较,提示功能. 如果单纯的斗地主这里的代码量并不多.但是加上癞子斗地主,四人斗地主.复杂度也就增加不了.现在做的是把他的牌型分析抽离出来.判断规则和提示重写了.</p>
<p> <strong>通信</strong>: 这块要分几种情况.是wap连接的时候要设置代理用HttpUrlConnection来操作.wifi和net直接用Socket就可以了.Socket连接时最好是单独开辟读写流线程.</p>
<p> <strong>第三方接口</strong>:第三方接入其实是比较容易的.一般第三方都会提供demo.主要是要注册签约及与php调试要花一些时间 .蛙蛙的充值里包括了移动短信充值,支付宝. 看到的代码里还有google,lephone的一些东西 . 之前反编了博雅斗地主稍微看了一下.他们的充值接入更丰富.支付宝,移动短信,充值卡.等等. 登录接入包括了qq,sina,人人 一些平台.</p>
<p> 核心代码并不很多,就通信,规则,游戏桌渲染.抛却那些附加的功能点界面也不多,就首页,登录,注册,大厅. 但是如果想做成一个好的完备的产品.还是需要发一些时间来优化.以下是博雅的基本功能点.<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/04/6c96ae7bc56e.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/thumb2.jpg" alt="功能点" title="功能点"></a></p>
<p>我这前一直纳闷的是为什么公司会选择这样一款产品.个人感觉斗地主这块市场是比较饱和.有联众,qq斗地主,博雅,蛙蛙.等等.后来boss给了一些数据.蛙蛙的月流水是500万的样子.我只能说.cao.</p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android 支付宝 快捷支付 接入]]></title>
      <url>http://www.farwmarth.com/android%20%E6%94%AF%E4%BB%98%E5%AE%9D%20%E5%BF%AB%E6%8D%B7%E6%94%AF%E4%BB%98%20%E6%8E%A5%E5%85%A5/</url>
      <content type="html"><![CDATA[<font color="red">update: 2013-4-28 私钥安全性修正</font>


<h2 id="一-sdk下载"><a href="#一-sdk下载" class="headerlink" title="一 sdk下载"></a>一 sdk下载</h2><p><a href="https://b.alipay.com/order/techService.htm" target="_blank" rel="noopener">https://b.alipay.com/order/techService.htm</a>.最下面有快捷支付(无线)zip包,包含了教程,开发指南和demo.</p>
<a id="more"></a>
<h2 id="二-状态图"><a href="#二-状态图" class="headerlink" title="二 状态图"></a>二 状态图</h2><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image15.png" alt="image"> </p>
<p>基本流程: 客户端签名发送订单信息—–支付宝支付—–支付宝主动通知服务器验证数据及加上逻辑,如将充值成功的钱转换成虚拟货币(这个主动通知地址在客户端发送订单时的notice_url指定,可以不指定)—服务器返回success状态—支付宝返回结果给客户端.</p>
<p>在游戏中的图例</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image23.png" alt="image"> </p>
<h2 id="三-分析demo结构如下"><a href="#三-分析demo结构如下" class="headerlink" title="三 分析demo结构如下"></a>三 分析demo结构如下</h2><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image16.png" alt="image"> </p>
<p>AlixDemo为入口.onItemClick这里为支付调用的api</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">int</span> position,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// check to see if the MobileSecurePay is already installed.</span></span><br><span class="line">        <span class="comment">// 检测安全支付服务是否安装</span></span><br><span class="line">        MobileSecurePayHelper mspHelper = <span class="keyword">new</span> MobileSecurePayHelper(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">boolean</span> isMobile_spExist = mspHelper.detectMobile_sp();</span><br><span class="line">        <span class="keyword">if</span> (!isMobile_spExist)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// check some info.</span></span><br><span class="line">        <span class="comment">// 检测配置信息</span></span><br><span class="line">        <span class="keyword">if</span> (!checkInfo()) &#123;</span><br><span class="line">            BaseHelper</span><br><span class="line">                    .showDialog(</span><br><span class="line">                            AlixDemo.<span class="keyword">this</span>,</span><br><span class="line">                            <span class="string">"提示"</span>,</span><br><span class="line">                            <span class="string">"缺少partner或者seller，请在src/com/alipay/android/appDemo4/PartnerConfig.java中增加。"</span>,</span><br><span class="line">                            R.drawable.infoicon);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// start pay for this order.</span></span><br><span class="line">        <span class="comment">// 根据订单信息开始进行支付</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// prepare the order info.</span></span><br><span class="line">            <span class="comment">// 准备订单信息</span></span><br><span class="line">            String orderInfo = getOrderInfo(position);</span><br><span class="line">            <span class="comment">// 这里根据签名方式对订单信息进行签名</span></span><br><span class="line">            String signType = getSignType();</span><br><span class="line">            String strsign = sign(signType, orderInfo);</span><br><span class="line">            Log.v(<span class="string">"sign:"</span>, strsign);</span><br><span class="line">            <span class="comment">// 对签名进行编码</span></span><br><span class="line">            strsign = URLEncoder.encode(strsign);</span><br><span class="line">            <span class="comment">// 组装好参数</span></span><br><span class="line">            String info = orderInfo + <span class="string">"&amp;sign="</span> + <span class="string">"\""</span> + strsign + <span class="string">"\""</span> + <span class="string">"&amp;"</span></span><br><span class="line">                    + getSignType();</span><br><span class="line">            Log.v(<span class="string">"orderInfo:"</span>, info);</span><br><span class="line">            <span class="comment">// start the pay.</span></span><br><span class="line">            <span class="comment">// 调用pay方法进行支付</span></span><br><span class="line">            MobileSecurePayer msp = <span class="keyword">new</span> MobileSecurePayer();</span><br><span class="line">            <span class="keyword">boolean</span> bRet = msp.pay(info, mHandler, AlixId.RQF_PAY, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (bRet) &#123;</span><br><span class="line">                <span class="comment">// show the progress bar to indicate that we have started</span></span><br><span class="line">                <span class="comment">// paying.</span></span><br><span class="line">                <span class="comment">// 显示“正在支付”进度条</span></span><br><span class="line">                closeProgress();</span><br><span class="line">                mProgress = BaseHelper.showProgress(<span class="keyword">this</span>, <span class="keyword">null</span>, <span class="string">"正在支付"</span>, <span class="keyword">false</span>,</span><br><span class="line">                        <span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            Toast.makeText(AlixDemo.<span class="keyword">this</span>, R.string.remote_call_failed,</span><br><span class="line">                    Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>先判断安全支付服务是否安装,如果没有会提示安装.然后对订单数据进行签名<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOrderInfo</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        String strOrderInfo = <span class="string">"partner="</span> + <span class="string">"\""</span> + PartnerConfig.PARTNER + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"seller="</span> + <span class="string">"\""</span> + PartnerConfig.SELLER + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"out_trade_no="</span> + <span class="string">"\""</span> + getOutTradeNo() + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"subject="</span> + <span class="string">"\""</span> + mproductlist.get(position).subject</span><br><span class="line">                + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"body="</span> + <span class="string">"\""</span> + mproductlist.get(position).body + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"total_fee="</span> + <span class="string">"\""</span></span><br><span class="line">                + mproductlist.get(position).price.replace(<span class="string">"一口价:"</span>, <span class="string">""</span>) + <span class="string">"\""</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"&amp;"</span>;</span><br><span class="line">        strOrderInfo += <span class="string">"notify_url="</span> + <span class="string">"\""</span></span><br><span class="line">                + <span class="string">"http://notify.java.jpxx.org/index.jsp"</span> + <span class="string">"\""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> strOrderInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>要签名的数据为partner(合作者身份ID),seller(商户收款支付宝账号),subject(商品名称),body(商品描述),total_fee(总价),<span style="color: #8b0000">notify_url</span> 支付宝主动通知的服务器url.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image17.png" alt="image"> </p>
<p>调用MobileSecurePayer 的pay方法进行支付 <span style="color: #0000ff">boolean</span> bRet = msp.pay(info, mHandler, AlixId.RQF_PAY, <span style="color: #0000ff">this</span>); info为发送的参数,mhandler为回调,AlixId.RQF_PAY为回调消息头.<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image18.png" alt="image"> </p>
<p>这里是判断返回状态.交易成功还是失败.集成还是比较容易的.关键还是要注册企业账户,准备资料审核.然后将合作id和key配置好.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image19.png" alt="image"> </p>
<p>&nbsp;</p>
<p>—————————————————–更新———————————————</p>
<p>之前拿的是博雅的账号,他的原始 商户rsa私钥暴露在客户端.这样是不安全的.所以改进了一下,客户端对订单数据签名过程放在服务器端.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image24.png" alt="image"> </p>
<p>更改的代码只有签名部分.</p>
<p>&nbsp; 4.0上访问网络另开线程.将结果用handler发送.</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image26.png" alt="image"> </p>
<p>php返回</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image27.png" alt="image"> </p>
<p> 接收到返回处理签名</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image28.png" alt="image"> </p>
<p>&nbsp;</p>
<p>三&nbsp; 服务器注意事项</p>
<p>&nbsp; 在服务器demo中找到AppBackDemo这个项目的RSANotifyReceiver类.这个就是接收支付宝通知的.</p>
<p>支付宝以post请求notify_url.数据样例</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image20.png" alt="image"> </p>
<p>处理</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image21.png" alt="image"> </p>
<p>验证方法</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image22.png" alt="image"> </p>
<p>和客户端的验证是一样的.</p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 支付宝 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android 反编译和代码解读]]></title>
      <url>http://www.farwmarth.com/android%20%E5%8F%8D%E7%BC%96%E8%AF%91%E5%92%8C%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB/</url>
      <content type="html"><![CDATA[<p><font color="red">update :2013-5-18</font></p>
<p><font color="red">反编译工具小米人改之理:&nbsp; </font><a href="http://www.xiaomiren.net/apkmodifier/" target="_blank" rel="noopener">http://www.xiaomiren.net/apkmodifier/</a></p>
<h2 id="一-apk反编译"><a href="#一-apk反编译" class="headerlink" title="一 apk反编译"></a>一 apk反编译</h2><p>将apk文件解压后有两部分文件需要处理，一种是xml文件，另一种一个dex文件（.dex）</p>
<a id="more"></a>
<ol>
<li>对xml文件进行包的解析，一般有两种方式:<a href="https://code.google.com/p/android-apktool/" target="_blank" rel="noopener">apktool</a>（推荐）和AXMLPrinter2.jar;</li>
<li>从dex到class公认<a href="https://code.google.com/p/dex2jar/" target="_blank" rel="noopener">dex2jar</a>.bat，实现反编译；公认的强者；</li>
<li>而class到java的方式要更多样化一些,因为只是查看反编译后的代码：<a href="http://java.decompiler.free.fr/?q=jdgui" target="_blank" rel="noopener">jd-gui</a>（推荐），<a href="http://sourceforge.net/projects/jadclipse/" target="_blank" rel="noopener">Jodeclipse</a>（Jode的Eclipse插件），<a href="http://sourceforge.net/projects/jadclipse/" target="_blank" rel="noopener">JadClipse</a>（Jad的Eclipse插件）。 <p>dex解包</p></li>
</ol>
<ul>
<li>首先把apk文件改名为.zip，然后解压缩其中的class.dex文件，它就是java文件编译再通过dx工具打包成的。</li>
<li>把class.dex拷贝到dex2jar.bat所在目录。运行dex2jar.bat class.dex，生成classes.dex.dex2jar.jar。</li>
<li>运行JD-GUI工具（绿色软件，好用的软件！），打开上面的jar文件，即可看到java源代码。</li>
<li>file-saveall将java源码保存为zip文件 </li>
<li>资源文件解包<br>1 安装apktool,将apk反编译<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image6.png" alt="image"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image7.png" alt="image"><br>将smali文件包删除.<br>2 将上一步保存的源码解压,在此建立一个src目录.将源码放入src下,导入到eclipse中.结构如下.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image8.png" alt="image"> <img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image9.png" alt="image"><br>反编译完成.错误会很多..可以选择不同的工具来反编译,然后交叉对比.我一般使用jd-ui和jad-eclipse插件来编译. <p>jad-eclipse配置<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image10.png" alt="image"><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image11.png" alt="image"> </p><p>二 错误代码还原规则</p></li>
</ul>
<h6 id="if…else-语句"><a href="#if…else-语句" class="headerlink" title="if…else 语句:"></a>if…else 语句:</h6><p>反编译代码<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (paramBoolean)</span><br><span class="line">        paramTextView.setTextColor(-<span class="number">16727809</span>);</span><br><span class="line">       <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">         paramTextView.setTextColor(-<span class="number">1315861</span>);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p>
<p> 还原后<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (paramBoolean)</span><br><span class="line">   &#123;</span><br><span class="line">     paramTextView.setTextColor(-<span class="number">16727809</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      paramTextView.setTextColor(-<span class="number">1315861</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p>会把if ..esle 反编译成 if …while(true)结构.<br>反编译代码<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (paramInt1 != <span class="number">1</span>)</span><br><span class="line">       <span class="keyword">break</span> label185;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.countChild_1 == <span class="keyword">null</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">this</span>.countChild_1 = <span class="keyword">new</span> PokerCountChild(<span class="keyword">this</span>.mContext);</span><br><span class="line">       <span class="keyword">this</span>.countChild_1 = <span class="keyword">new</span> PokerCountChild(<span class="keyword">this</span>.mContext);</span><br><span class="line">       <span class="keyword">this</span>.countChild_1.setPosition((<span class="keyword">int</span>)(<span class="number">0.83</span>D * BaseGameActivity.screenWidth</span><br><span class="line">- <span class="keyword">this</span>.countChild_1.getWidth()), (<span class="keyword">int</span>)(<span class="number">0.2</span>D * BaseGameActivity.screenHeight));</span><br><span class="line">       <span class="keyword">this</span>.countChild_1.setCount(paramInt2);</span><br><span class="line">       addOneChild(<span class="keyword">this</span>.countChild_1);</span><br><span class="line">       <span class="keyword">if</span> (paramInt2 == <span class="number">0</span>)</span><br><span class="line">         <span class="keyword">this</span>.countChild_1.setAlpha(<span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">this</span>.countChild_1.setCount(paramInt2);</span><br><span class="line">   &#125;</span><br><span class="line">   label185: </span><br><span class="line">   <span class="keyword">do</span></span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">   <span class="keyword">while</span> (paramInt1 != <span class="number">2</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.countChild_2 == <span class="keyword">null</span>)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">this</span>.countChild_2 = <span class="keyword">new</span> PokerCountChild(<span class="keyword">this</span>.mContext);</span><br><span class="line">     <span class="keyword">this</span>.countChild_2 = <span class="keyword">new</span> PokerCountChild(<span class="keyword">this</span>.mContext);</span><br><span class="line">     <span class="keyword">this</span>.countChild_2.setPosition((<span class="keyword">int</span>)(<span class="number">0.17</span>D * BaseGameActivity.screenWidth),</span><br><span class="line">(<span class="keyword">int</span>)(<span class="number">0.2</span>D * BaseGameActivity.screenHeight));</span><br><span class="line">     <span class="keyword">this</span>.countChild_2.setCount(paramInt2);</span><br><span class="line">     addOneChild(<span class="keyword">this</span>.countChild_2);</span><br><span class="line">     <span class="keyword">if</span> (paramInt2 == <span class="number">0</span>)</span><br><span class="line">       <span class="keyword">this</span>.countChild_2.setAlpha(<span class="number">0</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">this</span>.countChild_2.setCount(paramInt2);</span><br></pre></td></tr></table></figure></p>
<p>还原<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">if</span>(i == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(countChild_1 == <span class="keyword">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    countChild_1 = <span class="keyword">new</span> PokerCountChild(mContext);</span><br><span class="line">                    countChild_1 = <span class="keyword">new</span> PokerCountChild(mContext);</span><br><span class="line">                    countChild_1.setPosition((<span class="keyword">int</span>)(<span class="number">0.83</span>D * </span><br><span class="line">(<span class="keyword">double</span>)BaseGameActivity.screenWidth - (<span class="keyword">double</span>)countChild_1.getWidth()), </span><br><span class="line">(<span class="keyword">int</span>)(<span class="number">0.2</span>D * (<span class="keyword">double</span>)BaseGameActivity.screenHeight));</span><br><span class="line">                    countChild_1.setCount(j);</span><br><span class="line">                    addOneChild(countChild_1);</span><br><span class="line">                    <span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line">                        countChild_1.setAlpha(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                countChild_1.setCount(j);</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(countChild_2 == <span class="keyword">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    countChild_2 = <span class="keyword">new</span> PokerCountChild(mContext);</span><br><span class="line">                    countChild_2 = <span class="keyword">new</span> PokerCountChild(mContext);</span><br><span class="line">                    countChild_2.setPosition((<span class="keyword">int</span>)(<span class="number">0.17</span>D * </span><br><span class="line">(<span class="keyword">double</span>)BaseGameActivity.screenWidth), (<span class="keyword">int</span>)(<span class="number">0.2</span>D *</span><br><span class="line"> (<span class="keyword">double</span>)BaseGameActivity.screenHeight));</span><br><span class="line">                    countChild_2.setCount(j);</span><br><span class="line">                    addOneChild(countChild_2);</span><br><span class="line">                    <span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line">                        countChild_2.setAlpha(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                countChild_2.setCount(j);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></p>
<p>会将语句倒序,出现break label结构<br>反编译代码<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image12.png" target="_blank" rel="noopener">image</a><br>jd-gui有时会将whilei语句翻译成if,此处要将if改成while</p>
<h6 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h6><p>反编译代码<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (<span class="keyword">this</span>.mBand)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">default</span>:</span><br><span class="line">     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">this</span>.mBand.setText(<span class="string">"FM1"</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">this</span>.mBand.setText(<span class="string">"FM2"</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">this</span>.mBand.setText(<span class="string">"AM"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>还原<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (mBand)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      mBand.setText(<span class="string">"FM1"</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">       mBand.setText(<span class="string">"FM2"</span>);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">       mBand.setText(<span class="string">"AM"</span>);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>switch规则就是一个continue对应一个case.要注意是是要外层的continue才算数,在if里的continue不算</p>
<h6 id="enum枚举"><a href="#enum枚举" class="headerlink" title="enum枚举"></a>enum枚举</h6><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image13.png" alt="image"><br>还原<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image14.png" alt="image"> </p>
<p>jd-gui<br><a href="http://www.qiaodiqiu.com/how-to-read-java-confusion-after-the-anti-compiled-code.html" target="_blank" rel="noopener">http://www.qiaodiqiu.com/how-to-read-java-confusion-after-the-anti-compiled-code.html</a><br><a href="http://blog.csdn.net/xyz_fly/article/details/8014455" target="_blank" rel="noopener">http://blog.csdn.net/xyz_fly/article/details/8014455</a><br><a href="http://blog.csdn.net/hp_2008/article/details/8626010" target="_blank" rel="noopener">http://blog.csdn.net/hp_2008/article/details/8626010</a></p>
<p>jad<br><a href="http://blog.csdn.net/z3h/article/details/2515287" target="_blank" rel="noopener">http://blog.csdn.net/z3h/article/details/2515287</a><br><a href="http://blog.csdn.net/z3h/article/details/2640522" target="_blank" rel="noopener">http://blog.csdn.net/z3h/article/details/2640522</a></p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android 组件Activity]]></title>
      <url>http://www.farwmarth.com/android%20%E7%BB%84%E4%BB%B6Activity/</url>
      <content type="html"><![CDATA[<p>Android开发四大组件分别是：</p>
<ul>
<li>活动（Activity)： 用于表现功能。</li>
<li>服务（Service)： 后台运行服务，不提供界面呈现。</li>
<li>广播接收器（BroadcastReceiver)：用于接收广播。</li>
<li>数据实体（Content Provider）： 支持在多个应用中存储和读取数据，相当于数据库</li>
</ul>
<a id="more"></a>
<h2 id="一-Acvitivity"><a href="#一-Acvitivity" class="headerlink" title="一 Acvitivity"></a>一 Acvitivity</h2><p>Activity 是用户唯一可以看得到的东西。Activity主要负责的就是创建显示窗口，你可以在这些窗口里使用setContentView(View)来显示你自己的UI。activity展现在用户面前的经常是全屏窗口，你也可以将activity作为浮动窗口来使用（使用设置了windowIsFloating的主题），或者嵌入到其他的activity（使用ActivityGroup）中。<br>**Activity的四种状态:</p>
<ul>
<li><strong>Active/Runing</strong>: 一个新 Activity 启动入栈后，它在屏幕最前端，处于栈的最顶端，此时它处于可见并可和用户交互的激活状态。</li>
<li><strong>Paused</strong>: 当 Activity 被另一个透明或者 Dialog 样式的 Activity 覆盖时的状态。此时它依然与窗口管理器保持连接，系统继续维护其内部状态，所以它仍然可见，但它已经失去了焦点故不可与用户交互。</li>
<li><strong>Stoped</strong>: 当 Activity 被另外一个 Activity 覆盖、失去焦点并不可见时处于 Stoped 状态。</li>
<li><strong>Destroyed</strong>: Activity 被系统杀死回收或者没有被启动时处于 Killed 状态。<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/04/201104291036314498.png" target="_blank" rel="noopener">201104291036314498</a><br>官方给的生命周期图，意思差不多:<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/activity_lifecycle.png" alt="activity_lifecycle"></li>
</ul>
<p><strong>方法何时被调用:</strong></p>
<ul>
<li><strong>onCreate ：</strong>当活动第一次启动的时候，触发该方法，<font color="#ff0000">可以在此时完成活动的初始化工作.</font><br>onCreate 方法有一个参数，该参数可以为空（ null ），也可以是之前调用 onSaveInstanceState （）方法保存的状态信息。</li>
<li><strong>onStart ：</strong> 在启动或从stoped状态重新启动时调用，所以初始化工作不应该放在这里，比如socket连接之类的。</li>
<li><strong>onResume</strong> : 启动,paused到running状态，stoped到running状态.</li>
<li><strong>onPause ：</strong>当一个正在前台运行的活动因为其他的活动需要前台运行而转入后台运行的时候，触发该方法。这时候需要<font color="#ff0000">将活动的状态持久化</font>，比如正在编辑的数据库记录等。</li>
<li><strong>onStop ：</strong>当一个活动不再需要展示给用户的时候，触发该方法。如果内存紧张，系统会直接结束这个活动，而不会触发 onStop 方法。 所以保存状态信息是应该在onPause时做，而不是onStop时做。活动如果没有在前台运行，都将被停止或者Linux管理进程为了给新的活动预留足够的存储空间而随时结束这些活动。因此对于开发者来说，在设计应用程序的时候，必须时刻牢记这一原则。在一些情况下，onPause方法或许是活动触发的最后的方法，因此开发者需要在这个时候保存需要保存的信息。</li>
<li><strong>onRestart ：</strong>stoped到running状态，触发该方法。</li>
<li><strong>onDestroy ：</strong>当活动销毁的时候，触发该方法。和 onStop 方法一样，如果内存紧张，系统会直接结束这个活动而不会触发该方法。</li>
<li><strong>onSaveInstanceState ：</strong>系统调用该方法，允许活动保存之前的状态，比如说在一串字符串中的光标所处的位置等。通常情况下，开发者不需要重写覆盖该方法，在默认的实现中，已经提供了自动保存活动所涉及到的用户界面组件的所有状态信息。</li>
</ul>
<p><strong>Activity栈:</strong></p>
<p>Android 是通过一种 Activity 栈的方式来管理 Activity 的，一个 Activity 的实例的状态决定它在栈中的位置。处于前台的 Activity 总是在栈的顶端，当前台的 Activity 因为异常或其它原因被销毁时，处于栈第二层的 Activity 将被激活，上浮到栈顶。当新的 Activity 启动入栈时，原 Activity 会被压入到栈的第二层。一个 Activity 在栈中的位置变化反映了它在不同状态间的转换。Activity 的状态与它在栈中的位置关系如下图所示：<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image002.jpg" alt="image002"></p>
<p>除了最顶层即处在 Active 状态的 Activity 外，其它的 Activity 都有可能在系统内存不足时被回收，一个 Activity 的实例越是处在栈的底层，它被系统回收的可能性越大。系统负责管理栈中 Activity 的实例，它根据 Activity 所处的状态来改变其在栈中的位置。</p>
<p><strong>Activity 之间通信</strong></p>
<ol>
<li><p><strong> 使用Intent通信 </strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 发送</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(EX06.<span class="keyword">this</span>, OtherActivity.class);</span><br><span class="line">intent.putExtra(<span class="string">"boolean_key"</span>, <span class="keyword">true</span>);</span><br><span class="line">intent.putExtra(<span class="string">"string_key"</span>, <span class="string">"string_value"</span>);</span><br><span class="line">startActivity(intent);</span><br><span class="line"><span class="comment">// 接收</span></span><br><span class="line">Intent intent = getIntent();</span><br><span class="line">intent.getBooleanExtra(<span class="string">"boolean_key"</span>, <span class="keyword">false</span>);</span><br><span class="line">intent.getStringExtra(<span class="string">"string_key"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 SharedPreferences<br>SharedPreferences 使用 xml 格式为 Android 应用提供一种永久的数据存贮方式。对于一个 Android 应用，它存贮在文件系统的 /data/ data/your_app_package_name/shared_prefs/目录下，可以被处在同一个应用中的所有 Activity 访问。Android 提供了相关的 API 来处理这些数据而不需要程序员直接操作这些文件或者考虑数据同步问题。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="number">2</span>:           SharedPreferences preferences = getSharedPreferences(<span class="string">"name"</span>, MODE_PRIVATE); </span><br><span class="line"> <span class="number">3</span>:           Editor editor = preferences.edit(); </span><br><span class="line"> <span class="number">4</span>:           editor.putBoolean(<span class="string">"boolean_key"</span>, <span class="keyword">true</span>); </span><br><span class="line"> <span class="number">5</span>:           editor.putString(<span class="string">"string_key"</span>, <span class="string">"string_value"</span>); </span><br><span class="line"> <span class="number">6</span>:           editor.commit(); </span><br><span class="line"> <span class="number">8</span>:           <span class="comment">// 读取 SharedPreferences </span></span><br><span class="line"> <span class="number">9</span>:           SharedPreferences preferences = getSharedPreferences(<span class="string">"name"</span>, MODE_PRIVATE); </span><br><span class="line"><span class="number">10</span>:           preferences.getBoolean(<span class="string">"boolean_key"</span>, <span class="keyword">false</span>); </span><br><span class="line"><span class="number">11</span>:           preferences.getString(<span class="string">"string_key"</span>, <span class="string">"default_value"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>其它方式<br>Android 提供了包括 SharedPreferences 在内的很多种数据存贮方式，比如 SQLite，文件等，程序员可以通过这些 API 实现 Activity 之间的数据交换。如果必要，我们还可以使用 IPC 方式。</p>
</li>
</ol>
<p><strong>Activity启动模式</strong>：</p>
<ul>
<li>Application、task、Activity三者之间的关系:<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/201104290925106332.png" alt="201104290925106332"></li>
</ul>
<p>Android为了使我们能够打破默认的堆栈的先后出的模式，提供了两个种方式：一种是在AndroidManifest.xml定义Activity时指定它的加载模式，另一种是在用Intent开启一个Activity时，在Intent中加入标志。如果两种方式都用了，则后者的优先级更高</p>
<ol>
<li>standard<br>“拿来主义”standard模式。哪里需要调用我我就去哪里，可以多次实例化，可以几个相同的Activity重叠。(系统默认)</li>
<li>singleTop<br>“拒绝堆叠”singleTop模式。可以多次实例化，但是不可以多个相同的Activity重叠，当堆栈的顶部为相同的Activity时，会调用onNewIntent函数。</li>
<li>singleTask<br>独立门户”singleTask模式。同一个应用中调用该Activity时，如果该Activity没有被实例化，会在本应用程序的Task内实例化，如果已经实例化，会将Task中其上的Activity销毁后，调用onNewIntent；其它应用程序调用该Activity时，如果该Activity没有被实例化，会创建新的Task并实例化后入栈，如果已经实例化，会销毁其上的Activity，并调用onNewIntent。一句话，singleTask就是“独立门户”，在自己的Task里，并且启动时不允许其他Activity凌驾于自己之上。 </li>
<li><p>singleInstance<br>孤独寂寞”singleInstance模式。加载该Activity时如果没有实例化，他会创建新的Task后，实例化入栈，如果已经存在，直接调用onNewIntent，该Activity的Task中不允许启动其它的Activity，任何从该Activity启动的其他Activity都将被放到其他task中，先检查是否有本应用的task，没有的话就创建。</p>
<p>在androidmainfest.xml中设置：android:launchMode=”standard”</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">"com.example.studyandroidcode.MainActivity"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:launchMode</span>=<span class="string">"standard"</span> &gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>参考</p>
</li>
</ol>
<p><a href="http://www.cnblogs.com/ghj1976/archive/2011/04/29/2032495.html" target="_blank" rel="noopener">http://www.cnblogs.com/ghj1976/archive/2011/04/29/2032495.html</a><br><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-android-actvt/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/opensource/os-cn-android-actvt/</a><br><a href="http://winuxxan.blog.51cto.com/2779763/504047" target="_blank" rel="noopener">http://winuxxan.blog.51cto.com/2779763/504047</a><br><a href="http://www.blogjava.net/marshal-hird/archive/2008/07/25/217389.html" target="_blank" rel="noopener">http://www.blogjava.net/marshal-hird/archive/2008/07/25/217389.html</a></p>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android　框架结构]]></title>
      <url>http://www.farwmarth.com/android%E6%A1%86%E6%9E%B6%E7%BB%93%E6%9E%84/</url>
      <content type="html"><![CDATA[<h2 id="一-Android平台结构-SDK目录结构-目录结构"><a href="#一-Android平台结构-SDK目录结构-目录结构" class="headerlink" title="一 Android平台结构,SDK目录结构,目录结构"></a>一 Android平台结构,SDK目录结构,目录结构</h2><p>　android是一个linux内核的操作系统，常规编程语言是java,不过也推出了NDK,可以用c++来访问部分接口。这篇就略去环境搭建和hello world了。</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/2010100721194321.jpg" alt="2010100721194321"></p>
<a id="more"></a>
<p><strong>1. 平台整体架构</strong></p>
<ul>
<li>Applications： 应用程序层(自带的短信一些功能)</li>
<li>Application Framework： 应用程序框架层(<font color="#ff0000">主要关注点</font>)</li>
<li>Library &amp;&amp; Android Runtime： 底层功能库以及Android运行时</li>
<li>Linux Kernel： Linux 内核</li>
</ul>
<p><strong>2. SDK目录:</strong></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/QQ20130404114155_MarkMan.png" alt="QQ截图20130404114155_MarkMan"></p>
<p><strong>3. 项目目录详解</strong></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/0_1323176185TK99.gif" alt="0_1323176185TK99"></p>
<ul>
<li>src: 专门存放我们编写的java源代码的包。<br>gen: 该目录不用我们开发人员维护，但又非常重要的目录。该目录用来存放由Android开发工具所生成的目录。该目录下的所有文件都不是我们创建的，而是由ADT自动生成的。该目录下的R.java文件非常重要。</li>
<li>android 2.1: 存放Android自身的jar包。</li>
<li>assets：该目录用来存放应用中用到的类似于视频文件、Mp3一些媒体文件。</li>
<li>res：res是resource的缩写，我们称该目录为资源目录。该目录可以存放一些图标、界面文件、应用到的文字信息。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">res下有三个dawable文件夹：</span><br><span class="line">drawable-hdpi：用来存放高分辨率的图标；</span><br><span class="line">drawable-mdpi:用来存放中等分辨路的图标；</span><br><span class="line">drawable-ldpi:用来存放低分辨率的图标。</span><br><span class="line">程序运行时可以根据手机分辨率的高低选取相应的目录下的图标。</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>res下还有一个layout文件夹，里面是ADT默认自动创建的main.xml文件，在mian.xml中存放的是布局文件,下面是mian.xml中的部分代码：</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/0_1323176233eelO.gif" alt="0_1323176233eelO"></p>
<p>res下的values中的strings.xml用来定义字符串和数值，在Activity中使用getResources().getString(resourceId)或getResources().getText(resourceId)取得资源。<code>strings.xml中的部分代码:</code><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/0_1323176257RHi0.gif" alt="0_1323176257RHi0"></p>
<ul>
<li>AndroidManifest.xml:该文件是功能清单文件，该文件列出了应用中所使用的所有组件，如“activity”。</li>
<li>proguard.cfg：混淆脚本文件。</li>
<li>project.properties:该文件存放了项目的一些环境配置，根据需要可以手工改动。<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/0_1323176269i9u9.gif" alt="0_1323176269i9u9"></p></li>
</ul>
<p>可以将7改为3,4，7,8,10,11,12,13,14中的任意数值。<br>res下的文件在R.java中生成唯一id，layout和Activity也通过id关联<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image3.png" alt="image"><br><strong>程序入口:</strong><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/04/image4.png" alt="image"><br>AndroidManifest.xml中intent-filter为上图配置的Activity即为程序入口.</p>
<h2 id="三-签名apk"><a href="#三-签名apk" class="headerlink" title="三　签名apk"></a>三　签名apk</h2><p><strong>1.签名的意义</strong><br>　　为了保证每个应用程序开发商合法ID，防止部分开放商可能通过使用相同的Package Name来混淆替换已经安装的程序，我们需要对我们发布的APK文件进行唯一签名，保证我们每次发布的版本的一致性(如自动更新不会因为版本不一致而无法安装)。</p>
<p><strong>2.签名的步骤</strong></p>
<ul>
<li><p>创建key<br>创建key，需要用到keytool.exe (位于jdk1.6.0_24\jre\bin目录下)，使用产生的key对apk签名用到的是jarsigner.exe (位于jdk1.6.0_24\bin目录下)，把上两个软件所在的目录添加到环境变量path后，打开cmd输入<br><code>D:\&gt;keytool -genkey -alias demo.keystore -keyalg RSA -validity 40000 -keystore demo.keystore</code><br>说明：-genkey 产生密钥<br>-alias demo.keystore 别名 demo.keystore<br>-keyalg RSA 使用RSA算法对签名加密<br>-validity 40000 有效期限4000天<br>-keystore demo.keystore </p>
</li>
<li><p>使用key对apk签名<br><code>D:\&gt;jarsigner -verbose -keystore demo.keystore -signedjar demo_signed.apk demo.apk demo.keystore</code><br>说明：-verbose 输出签名的详细信息<br>-keystore demo.keystore 密钥库位置<br>-signedjar demor_signed.apk demo.apk demo.keystore 正式签名，三个参数中依次为签名后产生的文件demo_signed，要签名的文件demo.apk和密钥库demo.keystore.<br>注意事项：android工程的bin目录下的demo.apk默认是已经使用debug用户签名的，所以不能使用上述步骤对此文件再次签名。正确步骤应该是:在工程点击右键-&gt;Anroid Tools-Export Unsigned Application Package导出的apk采用上述步骤签名。</p>
</li>
</ul>
<p><strong>3.签名之后,用zipalign(压缩对齐)优化你的APK文件</strong></p>
<p>　未签名的apk不能使用,也不能优化.签名之后的apk使用zipalign.exe(android-sdk-windows\tools目录下)工具对其优化:<code>D:\&gt;zipalign -v 4 demo_signedfinal.apk</code></p>
<p>如上，zipalign能够使apk文件中未压缩的数据在4个字节边界上对齐（4个字节是一个性能很好的值），这样android系统就可以使用mmap()(请自行查阅这个函数的用途)函数读取文件，可以在读取资源上获得较高的性能.</p>
<ul>
<li>在4个字节边界上对齐的意思就是，一般来说，是指编译器吧4个字节作为一个单位来进行读取的结果，这样的话，CPU能够对变量进行高效,快速的访问（较之前不对齐）。</li>
<li>对齐的根源：android系统中的Davlik虚拟机使用自己专有的格式DEX，DEX的结构是紧凑的，为了让运行时的性能更好，可以进一步用”对齐”进一步优化，但是大小一般会有所增加。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos 命令，基本设置]]></title>
      <url>http://www.farwmarth.com/centos%20%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<font color="#ff0000"> update 2016-7-21 13:53</font>

<h2 id="CentOS6-4配置163的yum源"><a href="#CentOS6-4配置163的yum源" class="headerlink" title="CentOS6.4配置163的yum源"></a>CentOS6.4配置163的yum源</h2><p>CentOS系统自带的更新源的速度实在是慢，为了让CentOS6使用速度更快的YUM更新源，可以选择163（网易）的更新源。</p>
<ul>
<li>查看版本<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li>查看cpu核数</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 总核数 = 物理CPU个数 X 每颗物理CPU的核数</span><br><span class="line"><span class="meta">#</span> 总逻辑CPU数 = 物理CPU个数 X 每颗物理CPU的核数 X 超线程数</span><br><span class="line"><span class="meta">#</span> 查看物理CPU个数</span><br><span class="line">cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l</span><br><span class="line"><span class="meta">#</span> 查看每个物理CPU中core的个数(即核数)</span><br><span class="line">cat /proc/cpuinfo| grep "cpu cores"| uniq</span><br><span class="line"><span class="meta">#</span> 查看逻辑CPU的个数</span><br><span class="line">cat /proc/cpuinfo| grep "processor"| wc -l</span><br></pre></td></tr></table></figure>
<ul>
<li><p>下载repo文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</span><br></pre></td></tr></table></figure>
</li>
<li><p>备份并替换系统的repo文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@localhost ~]# mv CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">[root@localhost ~]# mv CentOS6-Base-163.repo CentOS-Base.repo</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行yum源更新</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yum clean all</span><br><span class="line">[root@localhost ~]# yum makecache</span><br><span class="line">[root@localhost ~]# yum update</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="YUM"><a href="#YUM" class="headerlink" title="YUM**"></a>YUM**</h2><p>yum: Yellow dog Updater, Modified.<br>主要功能是更方便的添加/删除/更新RPM包.它能自动解决包的倚赖性问题.它能便于管理大量系统的更新问题.</p>
<p><strong>1. yum的使用:</strong><br> 1)<strong>包的更新</strong><br> 1.1)检查可更新包: yum check-update<br> 1.2)更新所有包: yum update<br> 1.3)更新指定包: yum update package_name<br> 1.4)版本升级: yum upgrade<br> 2)<strong>包安装与删除</strong><br> 2.1)yum install package_name<br> 2.2)yum remove package_name<br> 3)<strong>包搜索</strong><br> 3.1)搜索特定包: yum search package_name<br> 3.2)搜索包含特定文件名的包:yum provides name<br> 4)<strong>包列表</strong><br> 4.1)列出所有安装或更新的包: yum list<br> 4.2)列出指定包:yum list name<br> 4.3)列出可更新包:yum list updates<br> 4.4)列出已安装包:yum list installed<br> 4.5)列出已安装但不包含在资源库中的包:yum list extras</p>
<p><strong>2. 自动选择最快的源:</strong></p>
<p>安装yum-fastestmirror插件，它会在下载时自动选择最快的源。<br><code>yum install yum-fastestmirror</code></p>
<p><strong>3. 使用图形化的yum:</strong><br> <code>yum install yumex</code><br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image43.png" alt="image"></p>
<h2 id="二-安装各种包"><a href="#二-安装各种包" class="headerlink" title="二 安装各种包"></a><strong>二 安装各种包</strong></h2><p><strong>安装bin文件</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1:  //授予当前用户执行权限</span><br><span class="line">2:  chmod a+x jdk-6u26-linux-i586.bin</span><br><span class="line">3:  //执行安装文件</span><br><span class="line">4:  ./jdk-6u26-linux-i586.bin</span><br><span class="line">5:   卸载：把安装时中选择的安装目录删除就OK</span><br></pre></td></tr></table></figure></p>
<p>**安装rpm<br><code>rpm -ivh /home/server/bind-9.8.1-6.2.x86_64.rpm</code></p>
<ol>
<li>查询软件包<br>rpm -q [选项] [软件包名称]<br>常用选项：<br>-a ：查询所有安装的软件包。<br>-i ：显示软件包的概要信息。<br>-l ：显示软件包中的文件列表。<br>-c ：显示配置文件列表。<br>-d ：显示文档文件列表。<br>-s ：显示软件包中的文件列表和每个文件状态。<br>-f file ：查询属于哪个软件包。<br>-p file ：查询某个RPM包内含有的文件。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--import ：导入公钥。</span><br><span class="line"># rpm -qa 查询所有的软件包</span><br><span class="line"># rpm -qi make 查询make软件包的概要。</span><br><span class="line"># rpm -ql apache 查询apache软件包的文件列表。</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>2、安装软件包<br>rpm -i [选项] [软件包名称]<br>常用选项：<br>-h ：显示安装进度。<br>-v ：显示详细信息。<br>–force ：忽略冲突强制安装。<br>–nodeps ：不检查依赖关系。<br><code># rpm -ivh /home/server/bind-9.8.1-6.2.x86_64.rpm</code><br>安装一个bind软件包，并显示安装进度。</p>
<p>3、升级软件包<br>rpm -U [选项] [软件包名称]<br>常用选项：<br>-h ：显示安装进度。<br>-v ：显示详细信息。<br>–force ：忽略冲突强制安装。<br>–nodeps ：不检查依赖关系。<br><code># rpm -Uvh /home/vim-7.3.338-1.src.rpm</code><br>升级vim软件包，并显示安装进度。</p>
<p>4、卸载软件包<br>rpm -e [选项] [软件包名称]<br>常用选项：<br>–nodeps ：不检查依赖关系。<br><code># rpm -e vim-common</code> 卸载vim-common软件包。</p><p><br>PS：rpm包的弊端就是它的依赖性。rpm包的依赖性据说是这样的，当要安装软件包A时提示先要安装软件包B，当安装软件包B时又提示先要安装软件包C。当装完软件包C和B后装软件包A又提示C的版本不对。。。所以现在都直接用yum命令了<br><strong>安装tar.gz(bz或bz2等)结尾的源代码包.</strong><br>这种软件包里面都是源程序，没有编译过，需要编译后才能安装，安装方法为:<br>1、用CD 命令进入源代码压缩包所在的目录<br>2、根据压缩包类型解压缩文件(*代表压缩包名称)<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf ****.tar.gz</span><br><span class="line">tar -jxvf ****.tar.bz(或bz2)</span><br></pre></td></tr></table></figure></p>
<p>3、用CD命令进入解压缩后的目录<br>4、输入编译文件命令：./configure(有的压缩包已经编译过，这一步可以省去)<br>5、然后是命令：make<br>6、再是安装文件命令：make install<br>卸载：make uninstall</p>
<h2 id="三-常规设置"><a href="#三-常规设置" class="headerlink" title="三　常规设置"></a><strong>三　常规设置</strong></h2><p>1 安装中文输入法: yum install “@Chinese Support”<br>2 修改hosts : /etc/hosts<br>3 切换权限: su root<br>4 让Centos解压RAR:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1:  //安装</span><br><span class="line">2:  wget http://www.rarsoft.com/rar/rarlinux-3.9.3.tar.gz</span><br><span class="line">3:  tar -xvf rarlinux-3.9.3.tar.gz</span><br><span class="line">4:  cd rar</span><br><span class="line">5:  make</span><br><span class="line">6:  //用法</span><br><span class="line">7:  rar x vpsyou.rar           //解压 vpsyou.rar 到当前目录</span><br><span class="line">8:  rar vpsyou.rar  ./vpsyou.com/        //将 vpsyou.com 目录打包为 vpsyou.rar</span><br></pre></td></tr></table></figure></p>
<p>5 安装字体:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1:  //创建目录YaHei</span><br><span class="line">2:  mkdir -p /usr/share/fonts/YaHei</span><br><span class="line">3:  cp YaHei.Consolas.1.12.ttf /usr/share/fonts/YaHei/YaHei.Consolas.ttf</span><br><span class="line">4:  //安装字体</span><br><span class="line">5:  cd /usr/share/fonts/YaHei/</span><br><span class="line">6:  mkfontscale</span><br><span class="line">7:  mkfontdir</span><br><span class="line">8:  fc-cache -fv</span><br><span class="line">9:  //最后，到系统－首选项－字体里修改字体</span><br></pre></td></tr></table></figure></p>
<p> ６centos设置文件夹打开方式：在同一窗口打开文件夹<br>　　编辑 － 首选项 － 行为，勾选“总是在浏览器窗口打开”，点击关闭</p>
<h2 id="四-开发环境"><a href="#四-开发环境" class="headerlink" title="四　开发环境"></a><strong>四　开发环境</strong></h2><ul>
<li><strong>安装jdk :</strong><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1:  //授予当前用户执行权限</span><br><span class="line">2: chmod a+x jdk-6u26-linux-i586.bin</span><br><span class="line">3:  //执行安装文件</span><br><span class="line">4:  ./jdk-6u26-linux-i586.bin</span><br><span class="line">5:</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>配置环境变量:<br><code>gedit /etc/profile</code><br>打开后加入配置:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.6.0_24</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>立即生效</span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="解决-usr-bin-ld-cannot-find-lmysqlclient错误"><a href="#解决-usr-bin-ld-cannot-find-lmysqlclient错误" class="headerlink" title="解决/usr/bin/ld: cannot find -lmysqlclient错误"></a>解决/usr/bin/ld: cannot find -lmysqlclient错误</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>mysqlclinet地址</span><br><span class="line">/usr/local/mysql/lib/libmysqlclient.so.18</span><br><span class="line">/usr/lib64/mysql/libmysqlclient.so.16</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>查找libmysqlclient的位置</span><br><span class="line">repoquery --whatprovides *libmysqlclient*</span><br><span class="line"><span class="meta">#</span>mysql-libs-0:5.1.71-1.el6.x86_64</span><br><span class="line"></span><br><span class="line">repoquery -l mysql-libs-0:5.1.71-1.el6.x86_64 | head -9</span><br><span class="line"><span class="meta">#</span>/etc/my.cnf</span><br><span class="line"><span class="meta">#</span>/usr/lib64/mysql</span><br><span class="line"><span class="meta">#</span>/usr/lib64/mysql/libmysqlclient.so.16</span><br><span class="line"><span class="meta">#</span>/usr/lib64/mysql/libmysqlclient.so.16.0.0</span><br></pre></td></tr></table></figure>
<h2 id="centos7-最小化安装配置"><a href="#centos7-最小化安装配置" class="headerlink" title="centos7 最小化安装配置"></a>centos7 最小化安装配置</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h3><p>+查看版本<br>cat /etc/redhat-release</p>
<ul>
<li>ifconfig<br>yum provides ifconfig</li>
<li>centos7 failed to start lsb<br>网卡地址被删除或者配置错误<br><a href="http://blog.sina.com.cn/s/blog_4bbf963a0102vnk8.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_4bbf963a0102vnk8.html</a><br>ip addr 查看网卡地址(liner/ether)，填写到配置 HWADDR</li>
<li>编辑ip地址</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#static assignment</span><br><span class="line">ONBOOT=yes #开机启动</span><br><span class="line">BOOTPROTO=static #静态IP</span><br><span class="line">IPADDR=192.168.1.151 #本机地址</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">GATEWAY=192.168.1.1 #默认网关</span><br></pre></td></tr></table></figure>
<p>/etc/sysconfig/network-scripts<br>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install NetworkManager-tui</span><br><span class="line">nmtui edit enp0s3(网络配置文件名)</span><br><span class="line">systemctl enable NetworkManager-wait-online.service</span><br><span class="line">systemctl status NetworkManager.service</span><br><span class="line">systemctl restart network.service 重启网络</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/johnnycode/article/details/50184073" target="_blank" rel="noopener">http://blog.csdn.net/johnnycode/article/details/50184073</a><br>虚拟 机网卡记得改为桥接模式</p>
<h3 id="mysql-安装"><a href="#mysql-安装" class="headerlink" title="mysql 安装"></a>mysql 安装</h3><p><a href="http://www.cnblogs.com/starof/p/4680083.html" target="_blank" rel="noopener">http://www.cnblogs.com/starof/p/4680083.html</a></p>
<h3 id="dns设置"><a href="#dns设置" class="headerlink" title="dns设置"></a>dns设置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure>
<h3 id="dns查询"><a href="#dns查询" class="headerlink" title="dns查询"></a>dns查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nslookup open.huanjia.cc</span><br></pre></td></tr></table></figure>
<h2 id="centos-问题"><a href="#centos-问题" class="headerlink" title="centos 问题"></a>centos 问题</h2><h3 id="centos下出现-lib64-libc-so-6-version-GLIBC-2-17’-not-found问题解决方案"><a href="#centos下出现-lib64-libc-so-6-version-GLIBC-2-17’-not-found问题解决方案" class="headerlink" title="centos下出现/lib64/libc.so.6: version `GLIBC_2.17’ not found问题解决方案"></a>centos下出现/lib64/libc.so.6: version `GLIBC_2.17’ not found问题解决方案</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>查看glibc版本</span><br><span class="line">strings /lib64/libc.so.6 |grep GLIBC</span><br><span class="line">wget http://ftp.gnu.org/gnu/glibc/glibc-2.14.tar.gz</span><br><span class="line">tar xvf glibc-2.14.tar.gz</span><br><span class="line">cd glibc-2.14</span><br><span class="line">mkdir build</span><br><span class="line">cd ./build</span><br><span class="line"> ../configure --prefix=/opt/glibc-2.14</span><br><span class="line">chmod +r ../configure</span><br><span class="line">make -j4</span><br><span class="line">sudo make install</span><br><span class="line">export LD_LIBRARY_PATH=/opt/glibc-2.14/lib:$LD_LIBRARY_PATH</span><br><span class="line"><span class="meta">#</span>解除环境变量 unset LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>
<p>glibc操作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>查看glibc版本引用</span><br><span class="line">objdump -p  skynet</span><br><span class="line"><span class="meta">#</span>查看指定版本引用的函数</span><br><span class="line">nm skynet |grep GLIBC_2.14</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>查看</span><br><span class="line">strings /lib64/libc.so.6 |grep GLIBC_</span><br><span class="line"><span class="meta">#</span>升级</span><br><span class="line">wget http://ftp.gnu.org/gnu/glibc/glibc-2.14.tar.gz</span><br><span class="line">tar xvf glibc-2.14.tar.gz</span><br><span class="line">cd glibc-2.14</span><br><span class="line">mkdir build</span><br><span class="line">cd ./build</span><br><span class="line">../configure --prefix=/opt/glibc-2.14</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br><span class="line"><span class="meta">#</span>备份</span><br><span class="line">rm -rf /lib64/libc.so.6</span><br><span class="line">ln -s /opt/glibc-2.14/lib/libc-2.14.so /lib64/libc.so.6</span><br><span class="line"><span class="meta">#</span>删除libc.so.6之后可能导致系统命令不可用的情况, 可使用如下方法解决:</span><br><span class="line">LD_PRELOAD=/opt/glibc-2.14/lib/libc-2.14.so  ln -s /opt/glibc-2.14/lib/libc-2.14.so /lib64/libc.so.6</span><br><span class="line"><span class="meta">#</span>如果上述更新失败可使用如下命令还原:</span><br><span class="line">LD_PRELOAD=/lib64/libc-2.12.so ln -s /lib64/libc-2.12.so /lib64/libc.so.6    #libc-2.12.so 此项是系统升级前的版本</span><br></pre></td></tr></table></figure>
<h1 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h1><h2 id="升级git"><a href="#升级git" class="headerlink" title="升级git"></a>升级git</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>编译环境</span><br><span class="line">yum install crul curl-devel zlib-devel openssl-devel perl cpio expat-devel gettext-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line"><span class="meta">#</span>下载</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz</span><br><span class="line">tar xzf git-1.9.4.tar.gz</span><br><span class="line"><span class="meta">#</span>编译</span><br><span class="line">cd git-1.9.4</span><br><span class="line">autoconf</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="meta">#</span>指定git版本</span><br><span class="line">echo "export PATH=$PATH:/usr/local/bin/git" &gt;&gt; /etc/bashrc</span><br><span class="line">source /etc/bashrc</span><br><span class="line"><span class="meta">#</span>检查</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>
<h2 id="升级node-npm"><a href="#升级node-npm" class="headerlink" title="升级node,npm"></a>升级node,npm</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install node</span><br><span class="line">yum install npm</span><br><span class="line">npm install -g n</span><br><span class="line">n stable</span><br><span class="line">echo "export PATH=$PATH://usr/local/bin/node" &gt;&gt; /etc/bashrc</span><br><span class="line">source /etc/bashrc</span><br><span class="line"><span class="meta">#</span>延缓npm</span><br><span class="line">npm install npm@latest -g</span><br></pre></td></tr></table></figure>
<h1 id="安装nmon"><a href="#安装nmon" class="headerlink" title="安装nmon"></a>安装nmon</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">wget http://sourceforge.net/projects/nmon/files/nmon16e_mpginc.tar.gz</span><br><span class="line"><span class="meta">#</span> Untar archive</span><br><span class="line">tar -xzvf nmon16e_mpginc.tar.gz</span><br><span class="line"><span class="meta">#</span> Copy nmon file</span><br><span class="line">cp nmon_x86_64_centos7 /usr/local/bin/</span><br><span class="line">chmod a+x /usr/local/bin/nmon_x86_64_centos7</span><br><span class="line"><span class="meta">#</span> Create symbolic link</span><br><span class="line">ln -s /usr/local/bin/nmon_x86_64_centos7 /usr/local/bin/nmon</span><br><span class="line"><span class="meta">#</span> tidy up tmp</span><br><span class="line">rm -f nmon_*</span><br></pre></td></tr></table></figure>
<h1 id="curl-wget下载github-releases"><a href="#curl-wget下载github-releases" class="headerlink" title="curl,wget下载github,releases"></a>curl,wget下载github,releases</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -sL https://github.com/fatedier/frp/releases/download/v0.9.3/frp_0.9.3_linux_amd64.tar.gz | tar xz</span><br><span class="line">wget --no-check-certificate  https://github.com/fatedier/frp/releases/download/v0.9.3/frp_0.9.3_linux_amd64.tar.gz  -O - | tar xz</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows下蛋疼的cocos2d-x，android配置。]]></title>
      <url>http://www.farwmarth.com/windows%E4%B8%8B%E8%9B%8B%E7%96%BC%E7%9A%84cocos2d-x%EF%BC%8Candroid%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="安装android开发环境"><a href="#安装android开发环境" class="headerlink" title="安装android开发环境"></a>安装android开发环境</h2><p>接着上一篇: <a href="http://farwmarth.com/?p=584" title="http://farwmarth.com/?p=584" target="_blank" rel="noopener">http://farwmarth.com/?p=584</a><br>在装了eclipse和cdt的环境下:</p>
<a id="more"></a>
<ul>
<li>安装adt(<a href="http://dl.google.com/android/ADT-21.0.0.zip" title="http://dl.google.com/android/ADT-21.0.0.zip" target="_blank" rel="noopener">http://dl.google.com/android/ADT-21.0.0.zip</a>)和android sdk</li>
<li>配置android sdk<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image21.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image21.png" alt="image" title="image"></a></li>
<li>配置环境变量:<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image22.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image22.png" alt="image" title="image"></a><br>将这两项加入到path中, adb –h 测试环境变量是否配置成功。(ps 发现一个配置环境变量的图形化好工具envman)</li>
<li>下载ndk (<a href="http://developer.android.com.nyud.net/tools/sdk/ndk" title="http://developer.android.com.nyud.net/tools/sdk/ndk" target="_blank" rel="noopener">http://developer.android.com.nyud.net/tools/sdk/ndk</a>) 用于编译c++代码。解压。<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image23.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image23.png" alt="image" title="image"></a><br>配置ndk环境变量:<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image24.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image24.png" alt="image" title="image"></a></li>
</ul>
<h2 id="Cygwin安装-这个很蛋疼"><a href="#Cygwin安装-这个很蛋疼" class="headerlink" title="Cygwin安装(这个很蛋疼):"></a>Cygwin安装(这个很蛋疼):</h2><p>由于NDK开发大都涉及到C/C++在GCC环境下编译、运行，所以在Windows环境下，需要模拟Linux模拟编译环境，下载地址：<br><a href="http://www.cygwin.com/" target="_blank" rel="noopener">http://www.cygwin.com/</a></p>
<p>下载后是个setup.exe文件，使用过程如下：<br>第一步：运行setup程序，第一步图略，直接点击Next进入下一步。<br>第二步：选择安装方式，第一次可以采用Direct Connection在线下载安装，如有现成的离线包，可以选择离线安装（Install from Local Directory）。<br>第三步：选择安装目录，比如C:\Cygwin，注意此目录是指Cygwin最终的安装目录，不是下载文件暂存目录。<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272236565053.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272236565053.png" alt="201206272236565053" title="201206272236565053"></a><br>我们编译NDK，在默认设置下，只需选择Devel（点击列表中Devel，将后面的Default改为Install，图中箭头所示），其它均为默认状态。(其实NDK需要的不多，主要autoconf2.1、automake1.10、binutils、gcc-core、gcc- , g++、gcc4-core、gcc4-g++、gdb、pcre、pcre-devel、gawk、make )</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image25.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image25.png" alt="image" title="image"></a></p>
<p>一定要注意红线部分，之前使用默认设置安装，最后编译android项目时报什么没make.<br>还有一个是报错make与cygwin不兼容，是因为我之前装了migwin .把migwin卸载掉。然后用图上配置重新装了cygwin,   </p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272237413155.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272237413155.png" alt="201206272237413155" title="201206272237413155"></a></p>
<p>一般选163的镜像快一些。下载完成装好后打开cygwin输入cygcheck -c<br>cygwin命令，会打印出当前cygwin的版本和运行状态，如果status是ok的话，则cygwin运行正常。然后依次输入gcc –v，g++ –version，make –version，gdb –version进行测试，(注意空格和-)如果都打印出版本信息和一些描述信息，这说明cygwin安装成功了。</p>
<p>配置cygwin:<br> 在命令行中进入cygwin目录，并执行cygwin.bat，会在cygwin/home/文件夹中生成一个以你的登录名命名的新的文件夹。会有一个“.bash_profile”文件，我运行的时候没有生成这个文件夹，可以从cygwin/etc/skel/下复制.bash_profile文件到cygwin/home/Administrator(用户名)下面。然后在.bask_profile中配置如下:<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image26.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image26.png" alt="image" title="image"></a></p>
<p>配置cygwin环境变量:<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image27.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image27.png" alt="image" title="image"></a></p>
<p>配置到path中，这个是让eclipse来找到cygwin及其库路径的。之前未配置这个，eclipse编译的时候出现:gcc not found in path错误。</p>
<p>编译cocos2d-x 工程:</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image28.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image28.png" alt="image" title="image"></a></p>
<p>解压到这了，编辑create-android-proejct.bat<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image29.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image29.png" alt="image" title="image"></a></p>
<p>_CYGBIN :cygwin的bin目录<br>_ANDROIDTOOLS: android sdk工具<br>_NDKROOT :　ndk路径。<br>配置好后执行此bat.输入包名,工程名,targetid.</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248039735.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248039735.png" alt="201206272248039735" title="201206272248039735"></a><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248048754.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248048754.png" alt="201206272248048754" title="201206272248048754"></a></p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248252080.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248252080.png" alt="201206272248252080" title="201206272248252080"></a></p>
<p>在目录下生成了android工程文件:<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image30.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image30.png" alt="image" title="image"></a></p>
<p>android工程还不能用，还要用cygwin编译。<br>打开cygwin，进入到testandroid/proj.android目录，输入 ./build_native.sh<br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248331825.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248331825.png" alt="201206272248331825" title="201206272248331825"></a><br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248464292.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/201206272248464292.png" alt="201206272248464292" title="201206272248464292"></a></p>
<p>我在win7下倒是没有碰到什么权限不足的情况。编译成功之后把这个导入到eclipse里面联真机调试吧<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image31.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image31.png" alt="image" title="image"></a></p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image32.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image32.png" alt="image" title="image"></a><br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image33.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image33.png" alt="image" title="image"></a></p>
<p>编译的时候出现找不到coco2d的库，我直接将这个路径的源文件拷贝到工程了<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image34.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image34.png" alt="image" title="image"></a><br><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image35.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image35.png" alt="image" title="image"></a></p>
<p>连手机调试的时候要把手机的开发者模式打开。而且要装adb interface驱动。</p>
<p> <a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image36.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image36.png" alt="image" title="image"></a></p>
<p> 在设置管理器看手机驱动是否装好，如果没有则找到android sdk里面的驱动</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image37.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image37.png" alt="image" title="image"></a></p>
<p>运行配置:</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image38.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image38.png" alt="image" title="image"></a></p>
<p>没有在模拟器里跑是因为模拟器不支持openGL.终于搞定了cocos2d-x android demo了。</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/psb.jpg" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/psb.jpg" alt="psb" title="psb"></a></p>
<p>还没结束。。准备跑之前建的c++工程，报错了。找不到gcc,g++库.找了好久才发现</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image39.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image39.png" alt="image" title="image"></a></p>
<p>这里指向的是migwin的库，因为把migwin卸载了所以这个工程库路径找不到了，重新建了一个工程。继续hello,world</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image40.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image40.png" alt="image" title="image"></a></p>
<p>运行没了问题。这个时候调试又出问题了。</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image41.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image41.png" alt="image" title="image"></a></p>
<p>搜索了一下解决方案:配置路径映射，因为cygwin的路径表示为linux的路径。</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image42.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image42.png" alt="image" title="image"></a></p>
<p>再调试就ok了。配置告一段落。折腾了一天。</p>
<p>参考: <a href="http://www.cnblogs.com/lhming/archive/2012/06/27/2566460.html" title="http://www.cnblogs.com/lhming/archive/2012/06/27/2566460.html" target="_blank" rel="noopener">http://www.cnblogs.com/lhming/archive/2012/06/27/2566460.html</a><br> <a href="http://www.cnblogs.com/lhming/archive/2012/06/27/2566467.html" title="http://www.cnblogs.com/lhming/archive/2012/06/27/2566467.html" target="_blank" rel="noopener">http://www.cnblogs.com/lhming/archive/2012/06/27/2566467.html</a></p>
]]></content>
      
        <categories>
            
            <category> c++ </category>
            
            <category> cocos2d-x </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在菲音听的几堂培训课]]></title>
      <url>http://www.farwmarth.com/%E5%9C%A8%E8%8F%B2%E9%9F%B3%E5%90%AC%E7%9A%84%E5%87%A0%E5%A0%82%E5%9F%B9%E8%AE%AD%E8%AF%BE/</url>
      <content type="html"><![CDATA[<p>　在菲音也呆了半年多了，新人培训一次也没去，讲的是什么时间管理，高效XX的东西，技术培训倒是去了不少，每周四的晚上会有项目负责人或者主程宣讲。工作心得，一些问题解答，个人觉得某些课听了还是收获裨益的。当时的ppt没能要过来，时隔几个月才想起来写一篇稿子总结一下。<br>　刚进公司那会听第一堂技术课，有种膜拜大牛的感觉。主讲是一个新项目的主程，讲的是as的基本知识体系和ARPG游戏引擎设计思路.当时还做了大量笔记，现在笔记本都不知道丢哪去了，记得的唯一的一点是。以组件方式编程，将功能点设计成组件，而不是用深层次的继承，这和最近看的robotlegs有异曲同工之妙。每个功能点都分离成组件，这样就代码就可以灵活装配了，(哈，想法是好的，但是将抽象付于实践才是最难的一部分，努力向着这一步迈进)<br>　再有印象点的就是天地会的舵主弃笑天的效率之道讲座。介绍了不少提高效率的途径和方法.</p>
<a id="more"></a>
<ul>
<li>把重复而繁琐的步骤用工具或者脚本化，可以用ant,bat,air,或者自己写些插件工具。核心思想就是以”偷懒”为首要任务。</li>
<li>持续集成 ，大体就是将项目发布流程的自动化和即时化，用持续集成服务器(Jenkins)每日构建出测试版本，这样就能即早地发现问题，对于这点深有体会啊，每周四更新的时候都会各种问题，如果能尽早出功能性的测试版本就不用熬那么晚了。</li>
<li>规划和回顾: 每天晚上或者是是上公交上规划一下一天大概要干什么,可以借助GTD软件，像anydo,或者doit.im,　anydo相对而言更简洁一些，如果是有长期的计划的话，doit.im更加全面，还有回顾功能。</li>
<li>思路整理: 在开始着手一个新的功能时可以用思维导图来整理一下次要点和流程。复习回顾的时候也可以用思维导图,建一张空白的图，然后不断扩充知识点，这样就大概知道了有什么薄弱的地方。</li>
<li>独立思考时间: 这个在夜间比较合适，干扰较少，思绪比较清晰。写周期总结或者博客。<br>　后来腾讯的一个技术总监来讲座，更系统地划分了一下层级。</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image10.png" alt="image"></p>
<p>　程序基础知识和开发效率应该齐头并进。空有一腔理论而无法快速高效地产出，或者只是能快速完成任务而基础知识不牢固都是发育不良的，可以把程序基础看作是树根，而开发效率是上面的树干，根深则叶茂。<br>　不知道是因为长期埋头编码还是个人性情所致，大多数程序员都不善于发言，每次座谈都是主讲一个人在上面滔滔不绝，提问的时候下面一片冷寂。在工作室的每日晨会演讲也是如此，除了老大，没有几个能思路清晰，不慌不忙地表达自己的想法。并不是没有想法，而是没有适应这种场合。每个人不是与生惧来就有这种理智和气场。而是在于勤于锻炼自己。<br>　　总结一下在菲音的这些日子，还是收获颇非的。特别是最近和部门老大的一次谈话又触动了自己的脑神经。不要把自己当作苦逼的程序员看。境界高一点，视野开阔一点，敢于去追求和拼搏。不要只看着眼前的小利益。虽然知道有点忽悠人，是不想加工资的借口。但有些话还是不无道理。除了自身知识结构这一生态系统的完善，还有一套生态系统值得完善，那就是自身经验积累和视野的开阔。多交朋友。多与有益的群体交流,多点兴趣爱好,养成良性的习惯。</p>
<p>Do the best。</p>
]]></content>
      
        <categories>
            
            <category> mind </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mind </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[折腾一下，游戏每周首页]]></title>
      <url>http://www.farwmarth.com/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%EF%BC%8C%E6%B8%B8%E6%88%8F%E6%AF%8F%E5%91%A8%E9%A6%96%E9%A1%B5/</url>
      <content type="html"><![CDATA[<p>　昨天晚上版本更新，又到了难熬的等待时刻了，看完了更新的绿箭侠，邪恶力量，实在是不想干活了，突然想起来最近每周都把游戏更新的首页截图做个纪念，索性把以前的首页也翻出来吧。<br>找了找工程目录，素材是一个叫homePage.tempdata的文件，被加密了的，ok，开始工作.<a id="more"></a></p>
<p>基本思路是把 homePage.tempdata 的每个历史版本都保留副本,然后解密成swf,再用jsfl将swf导成png.</p>
<h3 id="第一步-拿到每个历史版本-首先得拿到版本号"><a href="#第一步-拿到每个历史版本-首先得拿到版本号" class="headerlink" title="第一步: 拿到每个历史版本,首先得拿到版本号"></a>第一步: 拿到每个历史版本,首先得拿到版本号</h3><p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image1.png" alt="image"></p>
<p>这是svn上的版本历史,把版本历史复制用一个文本保存起来如revison.txt,结果如下<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image2.png" alt="image"></p>
<p>版本号在Revison:后面，写段bat,其实一句话就够了:<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image3.png" alt="image"></p>
<p>结果<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image4.png" alt="image"></p>
<p>整理后就可以得到homePage.tempdata的所有历史版本号了，命名为a.txt<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image5.png" alt="image"></p>
<p>再写一段bat，用svn命令来还原到某一版本，再保存复本，以版本号命名<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image6.png" alt="image"></p>
<p>第一步就完成了，得到了homePage.tempdata的所有历史版本.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image7.png" alt="image"></p>
<h3 id="第二步-解密成swf"><a href="#第二步-解密成swf" class="headerlink" title="第二步　解密成swf"></a>第二步　解密成swf</h3><p>这一步可以略过，用air搞成绿色的接受命令行的程序批理解密，得到如下swf.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image8.png" alt="image"></p>
<h3 id="第三步-用jsfl来给swf截图"><a href="#第三步-用jsfl来给swf截图" class="headerlink" title="第三步　用jsfl来给swf截图"></a>第三步　用jsfl来给swf截图</h3><p>jsfl脚本如下:<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> doc=fl.getDocumentDOM();</span><br><span class="line"><span class="keyword">var</span>  path=<span class="string">"file:///C|/home/homepage/"</span>;</span><br><span class="line"><span class="keyword">var</span> files = FLfile.listFolder(path+<span class="string">"*.swf"</span>,<span class="string">"files"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;files.length;i++)&#123;</span><br><span class="line">    doc.importSWF(path+files[i]);</span><br><span class="line">    <span class="keyword">var</span> filename = files[i];</span><br><span class="line">    <span class="keyword">var</span> exportName = filename.substring(<span class="number">0</span>,filename.lastIndexOf(<span class="string">"."</span>))+<span class="string">".png"</span>;</span><br><span class="line">    doc.exportPNG(path+exportName,<span class="literal">true</span>,<span class="literal">true</span>);</span><br><span class="line">    doc.selectAll();</span><br><span class="line">    doc.deleteSelection();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这段脚本就是将路径下所有swf文件依次导入到舞台，然后导出舞台内容为png ,注意的是这里的exportPNG第二个参数是否使用默认的导出设置，我的设置: “包含” 这一项选中的是”完整文档大小”，而不是”最小影像区域”.<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/image9.png" alt="image"></p>
<p>ok，成果如下:<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/03/QQ20130322145541.png" alt="QQ截图20130322145541"></p>
]]></content>
      
        <categories>
            
            <category> bat </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲得蛋疼 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ipad2初级指南]]></title>
      <url>http://www.farwmarth.com/ipad2%E5%88%9D%E7%BA%A7%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<font color="red"><br>update :2014-12-1 19:36 更新神器flex2<br>update :2013-4-28 10:53 视频播放器,阅读,数据传输<br>update :2013-3-12 16:51 evasion 更新到1.5.2,支持中文，据说ios6.1.3修复了漏洞，此工具会失效<br>update :2013-3-11 16:46 零碎<br>update :2013-3-9 10:19 系统增强软件<br>update :2013-3-8 17:16<br></font>

<p>本来是打算买个nexus 7 玩玩的，港版好像没货，叫朋友同事从香港带了个ipad2.</p>
<a id="more"></a>
<h2 id="一-越狱"><a href="#一-越狱" class="headerlink" title="一 越狱"></a>一 越狱</h2><ul>
<li><strong>升级到ios 6.1.2</strong> : 开机设置apple id后, 设置—通用–软件更新 中更新到ios 6.1.2.大概七八分钟的样子。自动重启升级后同步itunes 设置。</li>
<li><strong>越狱</strong> : 下载 evasi0n 1.5.1 <a href="http://www.evasi0n.com/" title="http://www.evasi0n.com/" target="_blank" rel="noopener">http://www.evasi0n.com/</a> ,连接usb ,打开 evasion 点击jailbreak.中途会重启ipad,在ipad桌面上创建jailbreak的图标 ，在第二步它会提示你按ipad上的jailbreak图标 ，基本就完成了。在越狱过程中不要触摸ipad的屏幕。我的在这上面悲剧。重启电脑和ipad后才越狱成功。成功后会在桌面多一个商店 cydia .教程:<a href="http://www.evasi0n-cn.com/6x_jiaocheng" title="http://www.evasi0n-cn.com/6x_jiaocheng" target="_blank" rel="noopener">http://www.evasi0n-cn.com/6x_jiaocheng</a>.</li>
</ul>
<h2 id="二-基本操作"><a href="#二-基本操作" class="headerlink" title="二 基本操作"></a>二 基本操作</h2><ul>
<li><strong>关机</strong>:iPad是不用关机的，待机就够。如果硬是要关机就按住锁屏键，也就是顶部右方的黑键，<br>一直到屏幕出现滑动关键的提示时滑动关机即可。</li>
<li><strong>重启</strong>:同时长按home和power键,直到屏幕黑后,松开两键,按power开机即可.</li>
<li><strong>安装程序</strong>:用同步助手搞定，也可以在appstore中直接下载.</li>
<li><strong>关闭程序</strong>:按home键程序会存留在后台，要彻底关闭双击home键，长按要关闭的图标.</li>
<li><strong>待机</strong>: 按一下关机键就是待机模式</li>
<li><strong>移动和分组</strong>: 和android类似，按住图标过一会图标会晃动就可以操作，取消这种状态按home键</li>
</ul>
<h2 id="三-进阶"><a href="#三-进阶" class="headerlink" title="三 进阶"></a>三 进阶</h2><p>给cydia 添加中文源: cydia 软件源—编辑–添加源.<br>两个中文源: <a href="http://apt.weiphone.com" target="_blank" rel="noopener">http://apt.weiphone.com</a> <a href="http://apt.178.com" target="_blank" rel="noopener">http://apt.178.com</a></p>
<p>用cydia安装ifanbox.下载软件快一些。如果要安装破解软件需要安装appsync补丁，注意对应的固件版本。</p>
<p><code>cydia一些系统增强软件</code> :</p>
<ul>
<li>switcher cleaner : 任务管理器弹出就可以关闭程序，不用长按图标，长按关闭所有打开的程序.</li>
<li>sbsetings : 快捷开关,蓝牙，wifi等</li>
<li>activator :手势增强</li>
<li>icleaner : 清理缓存，包括safari,日志等。</li>
<li>ifile :文件管理器,可以访问系统文件,移动复制.搜索.搜索功能很强大.支持所有层次目录搜索.</li>
<li>百度文库: 这个可以用来看txt,android上的开卷有益,熊猫看书,宜搜都没有ipad版.用android的宜搜下载好txt,用快牙输送到iapd.再用ifile将txt移动到百度文库的目录就可以看了.</li>
<li>rmvb播放: 下个破解版的oPlayer,支持的格式很多.支持wifi传输视频.音乐播放等.界面也比较舒适.</li>
<li>flex2 : ios上的神器,可以篡改应用的任意函数,应用在视频应用去广告,游戏数值修改等.</li>
</ul>
<h2 id="四-吐槽"><a href="#四-吐槽" class="headerlink" title="四 吐槽"></a>四 吐槽</h2><p>也许是还没用习惯，ibook看书好生蛋疼，不支持txt还要转换，换了个goodreader.</p>
<p>appstores 连接很慢，而且下载没有取消选项。。换ifanbox.</p>
<p>不过也有其优势.相对于android, ios更像是一个封闭的黑匣子，简洁操作易上手，软件质量整体上比android好些，体验感和流畅性也更胜一筹。</p>
<h2 id="五-一些零碎的东东"><a href="#五-一些零碎的东东" class="headerlink" title="五 一些零碎的东东"></a>五 一些零碎的东东</h2><ol>
<li>修改hosts<br>有时候想上一下google plus,path ,改下ipad的hosts<br>用<code>ifile</code>打开文件 root—etc—-hosts.</li>
<li>修改dns<br>appstore加载速度太慢，修改dns提高响应<br>设置-wifi–选择连接的wifi–dns. 我改成了 8.8.8.8,114.114.114.114</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 教你瞎折腾 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ipad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Another New Year 2013]]></title>
      <url>http://www.farwmarth.com/another-new-year-2013/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp; 过年在家里的一个星期相对清静，不用整天对着屏幕，不用一坐就一整天，晚上10点就上床睡觉，睡觉前看看以前下的电影。本来还想着放假做点什么小游戏的，又夭折在日程表上，杀鸡宰鱼的事情占满了前几天。还是农村里过年气氛浓郁，团圆饭，一家人看看春晚烤烤火，打打牌，还有一个个人觉得很有意思的保留节目:除夕夜到认识或者不不认识的人家庭高声辞岁，一声呐喊算时辞旧迎新，给人们带来美好的祝愿。我记得小时候老是盼着过年，过年意味着 有新衣服穿，可以拿压岁钱，可以吃好吃的，更好玩的是可以在除夕夜里辞岁，要到很多糖果和零食，还有就是在除夕夜里可以”守岁”,可以通宵达旦地玩。</p>
<a id="more"></a>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 两年没回家过年，家乡也发生了挺大的变化，买车买房的多了，生活水平似乎提高了一个档次。很大部分同学嫁的嫁了，结的结婚了，我哥的孩子都可以在地上爬来爬去。一回家邻里就开始问:女朋友带回家没，果然回家避免不了的三大问题:工资，房子，结婚。老妈也在筹备着:今年带女朋友回家，明年把你妹嫁了，你也把婚给结了。突觉惶恐，正如找第一份工作一样，觉得没有准备好，后来回过头去想，如果不积极地不断面试而是呆在宿舍里复习,那永远也没准备好，敢于去改变，船到桥头自然直.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 出来工作快两年了，这些年感觉爸妈老了很多 ，不再是读书时代那个样子每日叮嘱着好好学习,天天向上。决策权也归还到我手里。买什么样的房子，买什么样的床，甚至是什么颜色的地板, 我爸都会打个电话给我，并不是不知道买什么样的，只是想听听我的意见，我俨然成了家里的主力军。什么样的未来在我手里。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 小锅昨天对我发出了不满,说我变得懒散,没有了追求。着实生了气，怎么能说我没有追求。事后想想也是。在她心里我一直是很厉害，很棒的。现在却整天看看视频，拿着微薄的工资不思进取。我严重忏悔，因为这篇博文拖了快一个月了，每次晚上打开live writer都不知道写些什么，骚年该崛起了。</p>
<p><strong>新年写下新的目标(新年过了好久了)</strong></p>
<ul>
<li>多交朋友</li>
<li>换个工作</li>
<li>晚上早点睡觉，最近没玩游戏了追剧有点厉害。</li>
<li>买个入门的单反,积累一些旅游基金</li>
<li>每周学做菜.</li>
<li>学习一两门新的语言</li>
</ul>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
            <tag> 新目标 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Crocus Modeller 试用无限期]]></title>
      <url>http://www.farwmarth.com/Crocus%20Modeller%20%E8%AF%95%E7%94%A8%E6%97%A0%E9%99%90%E6%9C%9F/</url>
      <content type="html"><![CDATA[<p>想找一个本地的画as的uml图软件，从美观程序和功能性选择了crocus modeller,它提供了试用版和付费版，付费版49美元，用不起，而是试用版只能试用五天.尝试着去破解。</p>
<p>用的是rsa算法 ,类库为 <a href="http://code.google.com/p/as3crypto/" target="_blank" rel="noopener">as3crypto</a>，算法如下:</p>
<a id="more"></a>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/02/image.png" alt="image"> </p>
<p>将输入的key 用公钥解密，与输入的licenseName对比是否相同.相同则注册成功，还原算法后死活验证不成功。。未果突然发现了一段代码:</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/02/image1.png" alt="image"> </p>
<p>验证是否超过试用期竟然是判断安装目录下crocus.swf的创建日期与当前日期对比 。这个创建日期是可以用软件去修改的.就找了个软件改了下这个swf的创建日期:</p>
<p>![image]<a href="http://farwmarth.bestnewbee.com/images/uploads/2013/02/image2.png" target="_blank" rel="noopener">http://farwmarth.bestnewbee.com/images/uploads/2013/02/image2.png</a>) </p>
<p>重新打开后果然可以了<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/02/image3.png" alt="image"> </p>
<p>好吧，就凑合着用吧先</p>
]]></content>
      
        <categories>
            
            <category> 破解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[进制及位运算]]></title>
      <url>http://www.farwmarth.com/%E8%BF%9B%E5%88%B6%E5%8F%8A%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      <content type="html"><![CDATA[<h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h2><ul>
<li>1TB=1024 GB = 1024 M = 1024 KB = 1024 BYTE(字节) = 8 BIT(二进制位)</li>
<li>ASCII码：一个英文字母（不分大小写）占一个字节的空间，一个中文汉字占两个字节的空间。一个二进制数字序列，在计算机中作为一个数字单元，一般为8位二进制数，换算为十进制。最小值0，最大值255。如一个ASCII码就是一个字节。</li>
<li>UTF-8编码:一个英文字符等于一个字节，一个中文（含繁体）等于三个字节。</li>
<li>Unicode编码:一个英文等于两个字节，一个中文（含繁体）等于两个字节。</li>
<li>符号:英文标点占一个字节，中文标点占两个字节。举例：英文句号“.”占1个字节的大小，中文句号“。”占2个字节的大小。</li>
</ul>
<a id="more"></a>
<h2 id="一-进制转换"><a href="#一-进制转换" class="headerlink" title="一 进制转换"></a>一 进制转换</h2><ul>
<li>在2进制中只有2个数字,即1,0</li>
<li>在8进制中只有8个数字,即0,1,2,3,4,5,6,7</li>
<li>在10进制中有10个数字,即0,1,2,3,4,5,6,7,8,9</li>
<li>在16进制中有10个数字和6个字母,即0,1,2,3,4,5,6,7,8,9和A,B,C,D,E,F,</li>
<li>字母A代表数字10,字母B代表数字11,字母C代表数字12,字母D代表数字13,字母E代表数字14,字母F代表数字15</li>
</ul>
<h3 id="1-正数"><a href="#1-正数" class="headerlink" title="1 正数"></a>1 正数</h3><h6 id="1-十进制转二进制"><a href="#1-十进制转二进制" class="headerlink" title="1 十进制转二进制"></a>1 十进制转二进制</h6><p>对于整数部分,用被除数反复除以2,除第一次外,每次除以2均取前一次商的整数部分作被除数并依次记下每次的余数.另外,所得到的商的最后一位余数是所求二进制数的最高位.</p>
<p>对于小数部分,采用连续乘以基数2,并依次取出的整数部分,直至结果的小数部分为0为止.故该法称”乘基取整法”</p>
<p><img src="http://farwmarth.bestnewbee.com/images/728da9773912b31b302371588618367adab4e170.jpg" alt="十转二示意图"></p>
<h6 id="2-十进制转十六进制"><a href="#2-十进制转十六进制" class="headerlink" title="2  十进制转十六进制"></a>2  十进制转十六进制</h6><p>10进制数转换成16进制的方法,和转换为2进制的方法类似,唯一变化:除数由2变成16.</p>
<p>120,转换成16进制则为:</p>
<table>
<thead>
<tr>
<th>被除数</th>
<th style="text-align:center">计算过程</th>
<th style="text-align:right">商</th>
<th style="text-align:right">余数</th>
</tr>
</thead>
<tbody>
<tr>
<td>120</td>
<td style="text-align:center">120/16</td>
<td style="text-align:right">7</td>
<td style="text-align:right">8</td>
</tr>
<tr>
<td>7</td>
<td style="text-align:center">7/16</td>
<td style="text-align:right">0</td>
<td style="text-align:right">7</td>
</tr>
</tbody>
</table>
<p>120转换为16进制,结果为:<code>78</code>.</p>
<h6 id="3-二进制转十进制"><a href="#3-二进制转十进制" class="headerlink" title="3 二进制转十进制"></a>3 二进制转十进制</h6><p>二进制数第0位的权值是2的0次方,第1位的权值是2的1次方,把0110 0100二进制转换为10进制为:</p>
<p><code>0 * 2 ^ 0 + 0 * 2 ^ 1 + 1 * 2 ^ 2 + 0 * 2 ^ 3 + 0 * 2 ^ 4 + 1 * 2 ^ 5 + 1 * 2 ^ 6 + 0 * 2 ^ 7 = 100</code></p>
<h6 id="4-二进制转十六进制"><a href="#4-二进制转十六进制" class="headerlink" title="4 二进制转十六进制"></a>4 二进制转十六进制</h6><p>将二进制分为4位一组<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0000            =          0         =        0</span><br><span class="line">1010            =          10        =        A</span><br><span class="line">1011            =          11        =        B</span><br><span class="line">1100            =          12        =        C</span><br><span class="line">1101            =           13       =        D</span><br><span class="line">1110            =           14       =        E</span><br><span class="line">1111            =           15       =        F</span><br></pre></td></tr></table></figure></p>
<p>由于<code>1111</code>才4位,所以我们必须直接记住它每一位的权值,并且是从高位往低位记:<code>8、4、2、1</code>.即,最高位的权值为<code>2^3 = 8</code>,然后依次是 <code>2^2 = 4,2^1=2, 2^0 = 1</code>.</p>
<p>记住8421,对于任意一个4位的二进制数,我们都可以很快算出它对应的10进制值.</p>
<p>仅4位的2进制数 快速计算方法 十进制值 十六进值<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1111 = 8 + 4 + 2 + 1 = 15 (F)</span><br><span class="line">1110 = 8 + 4 + 2 + 0 = 14 (E)</span><br></pre></td></tr></table></figure></p>
<p>如(上行为二制数,下面为对应的十六进制):</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1111</td>
<td>1101</td>
<td>1010</td>
<td>0101</td>
<td>1001</td>
<td>1011</td>
</tr>
<tr>
<td>F</td>
<td>D</td>
<td>A</td>
<td>5</td>
<td>9</td>
<td>B</td>
</tr>
</tbody>
</table>
<h6 id="5-十六进制转十进制"><a href="#5-十六进制转十进制" class="headerlink" title="5 十六进制转十进制"></a>5 十六进制转十进制</h6><p>十六进制数的第0位的权值为16的0次方,第1位的权值为16的1次方,第2位的权值为16的2次方…</p>
<p>AF5换算成10进制 直接计算就是:</p>
<p><code>5 * 16^0 + F * 16^1 + A * 16^2 + 2 * 16^3 = 10997</code></p>
<h6 id="6-十六进制转二进制"><a href="#6-十六进制转二进制" class="headerlink" title="6 十六进制转二进制"></a>6 十六进制转二进制</h6><p>与二进制转十六进制雷同.</p>
<h3 id="2-负数"><a href="#2-负数" class="headerlink" title="2 负数"></a>2 负数</h3><p><code>负数的补码</code>等于其符号位不变,数值部分的各位取反,然后整个数加1,正数加0.</p>
<blockquote>
<p>-7的原码(10000111)→按位取反(11111000)(负数符号位不变)→加1(11111001)<br>所以-7的补码是11111001.求得二进制,负数的其他进制也可以求出了.</p>
</blockquote>
<h2 id="二-位运算"><a href="#二-位运算" class="headerlink" title="二 位运算"></a>二 位运算</h2><p><code>补码</code>　所有的整数类型(除了char类型之外)都是有符号的整数.这意味着他们既能表示正数,又能表示负数.Java使用补码来表示二进制数,在补码表示中,最高位为符号位,正数的符号位为0,负数为1.补码的规定如下:</p>
<p>对正数来说,最高位为0,其余各位代表数值本身(以二进制表示),如 +42的补码为 00101010.</p>
<p>对负数而言,把该数绝对值的补码按位取反,然后对整个数加1,即得该数的补码.如-42的补码为<code>11010110(00101010按位取反11010101+1=11010110)</code></p>
<p>运算符 含义 描述</p>
<ul>
<li><code>&amp;</code> 按位与 如果两个相应的二进制位都为1,则该位的结果值为1,否则为0</li>
<li><code>|</code> 按位或 两个相应的二进制位中只要有一个为1,该位的结果值为1</li>
<li><code>^</code> 按位异或 若参加运算的两个二进制位值相同则为0,否则为1</li>
<li><code>~</code> 取反 用来对一个二进制数按位取反,即将0变1,将1变0</li>
<li><code>&lt;&lt;</code> 左移 用来将一个数的各二进制位全部左移N位,右补0</li>
<li><code>&gt;&gt;</code> 右移 将一个数的各二进制位右移N位,移到右端的低位被舍弃,对于无符号数,高位补0 <p>详细解释</p></li>
</ul>
<h6 id="1-按位与”运算符-amp"><a href="#1-按位与”运算符-amp" class="headerlink" title="1 按位与”运算符(&amp;)"></a>1 按位与”运算符(&amp;)</h6><p><code>按位与</code>:<font color="red"><strong><code>运算数全真,结果才为真</code></strong></font></p>
<p>按位与运算<code>3&amp;5</code>:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 00000011(2)</span><br><span class="line">&amp;00000101(2)</span><br><span class="line"> 00000001(2)</span><br></pre></td></tr></table></figure></p>
<p>由此可知<code>3&amp;5=1</code></p>
<p><strong>按位与的用途:</strong></p>
<ul>
<li><p>清零<br>若想对一个存储单元清零,即使其全部二进制位为<code>0</code>,只要找一个二进制数,其中各个位符合一下条件:<br>原来的数中为<code>1</code>的位,新数中相应位为<code>0</code>.然后使二者进行<code>&amp;</code>运算,即可达到清零目的.<br>例:原数为<code>43</code>,即<code>00101011(2)</code>,另找一个数,设它为<code>148</code>,即<code>10010100(2)</code>,将两者按位与运算:   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 00101011(2)</span><br><span class="line">&amp;10010100(2)</span><br><span class="line"> 00000000(2)</span><br></pre></td></tr></table></figure>
</li>
<li><p>取一个数中某些指定位<br>若有一个整数<code>a(2byte)</code>,想要取其中的低字节,只需要将<code>a</code>与<code>8</code>个<code>1</code>按位与即可.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a 00101100 10101100</span><br><span class="line">b 00000000 11111111</span><br><span class="line">c 00000000 10101100</span><br></pre></td></tr></table></figure>
</li>
<li><p>保留指定位:<br>与一个数进行”按位与”运算,此数在该位取<code>1</code>.<br>例如:有一数<code>84</code>,即<code>01010100(2)</code>,想把其中从左边算起的第<code>3,4,5,7,8</code>位保留下来,运算如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 01010100(2)</span><br><span class="line">&amp;00111011(2)</span><br><span class="line"> 00010000(2)</span><br><span class="line">----&gt;</span><br><span class="line">a=84,b=59</span><br><span class="line">c=a&amp;b=16</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h6 id="2-“按位或”运算符"><a href="#2-“按位或”运算符" class="headerlink" title="2 “按位或”运算符(|)"></a><strong>2 “按位或”运算符(|)</strong></h6><font color="red"><strong><code>一真为真</code></strong></font>

<p>例如:<code>60(8)|17(8)</code>,将<code>八进制60</code>与<code>八进制17</code>进行按位或运算.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 00110000</span><br><span class="line">|00001111</span><br><span class="line"> 00111111</span><br></pre></td></tr></table></figure></p>
<p>应用:按位或运算常用来对一个数据的某些位定值为<code>1</code>.例如:如果想使一个数<code>a</code>的低<code>4</code>位改为<code>1</code>,则只需要将<code>a</code>与<code>17(8)</code>进行按位或运算即可.</p>
<h6 id="3、”异或”运算符"><a href="#3、”异或”运算符" class="headerlink" title="3、”异或”运算符(^)"></a><strong>3、”异或”运算符(^)</strong></h6><p><font color="red"><strong><code>若参加运算的两个二进制位值相同则为0,否则为1</code></strong></font><br>即<code>0^0=0,0^1=1,1^0=1, 1^1=0</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 00111001</span><br><span class="line">^00101010</span><br><span class="line"> 00010011</span><br></pre></td></tr></table></figure></p>
<p><strong>应用:</strong></p>
<ul>
<li>使特定位翻转<br>设有数01111010(2),想使其低4位翻转,即1变0,0变1.可以将其与<code>00001111(2)</code>进行”异或”运算,即:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 01111010</span><br><span class="line">^00001111</span><br><span class="line"> 01110101</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>运算结果的低4位正好是原数低4位的翻转.可见,要使哪几位翻转就将与其进行^运算的该几位置为1即可.</p>
<ul>
<li>与0相”异或”,保留原值<br>例如:<br><code>012^00=012</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 00001010</span><br><span class="line">^00000000</span><br><span class="line"> 00001010</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>因为原数中的1与0进行异或运算得1,0^0得0,故保留原数.</p>
<ul>
<li>交换两个值,不用临时变量<br>例如:<code>a=3</code>,即<code>11(2);b=4,</code>即<code>100(2)</code>.<br>想将a和b的值互换,可以用以下赋值语句实现:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a=a^b;</span><br><span class="line">b=b^a;</span><br><span class="line">a=a^b;</span><br><span class="line">a=011(2)</span><br><span class="line"> (^)b=100(2)</span><br><span class="line">a=111(2)(a^b的结果,a已变成7)</span><br><span class="line"> (^)b=100(2)</span><br><span class="line">b=011(2)(b^a的结果,b已变成3)</span><br><span class="line"> (^)a=111(2) &lt;p&gt;a=100(2)(a^b的结果,a已变成4)</span><br><span class="line">等效于以下两步:</span><br><span class="line">  执行前两个赋值语句:&quot;a=a^b;&quot;和&quot;b=b^a;&quot;相当于b=b^a^b).</span><br><span class="line">  再执行第三个赋值语句: a=a^b.由于a的值等于(a^b),b的值等于(b^a^b), &lt;p&gt;因此,相当于a=a^b^b^a^b,即a的值等于a^a^b^b^b,等于b.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h6 id="4、”取反”运算符"><a href="#4、”取反”运算符" class="headerlink" title="4、”取反”运算符(~)"></a><strong>4、”取反”运算符(~)</strong></h6><p>他是一元运算符,用于求整数的二进制反码,即分别将操作数各二进制位上的1变为0,0变为1.<br>例如:<code>~77(8)</code><br>源代码:<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">int</span> a=<span class="number">077</span>;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"%d"</span>,~a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h6 id="5、左移运算符-lt-lt"><a href="#5、左移运算符-lt-lt" class="headerlink" title="5、左移运算符(&lt;&lt;)"></a><strong>5、左移运算符(&lt;&lt;)</strong></h6><p>左移运算符是用来将一个数的各二进制位左移若干位,移动的位数由右操作数指定(右操作数必须是非负值),其右边空出的位用<code>0</code>填补,高位左移溢出则舍弃该高位.<br>例如:将a的二进制数左移2位,右边空出的位补<code>0</code>,左边溢出的位舍弃.若<code>a=15</code>,即<code>00001111(2)</code>,左移2位得<code>00111100(2)</code>.<br>源代码:<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">int</span> a=<span class="number">15</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d"</span>,a&lt;&lt;<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>左移1位</code>相当于该数<code>乘以2</code>,<code>左移2位</code>相当于该数<code>乘以2*2=4</code>,<code>15&lt;&lt;2=60</code>,即乘了<code>4</code>.但此结论只适用于该数左移时被溢出舍弃的<code>高位</code>中不包含<code>1</code>的情况.</p>
<p><code>右移运算符:</code>是用来将一个数的各二进制位右移若干位,移动的位数由右操作数指定(右操作数必须是非负值),移到右端的低位被舍弃</p>
<p>对于无符号数,高位补0.对于有符号数,某些机器将对左边空出的部分用符号位填补(即”算术移位”)<br>而另一些机器则对左边空出的部分用0填补(即”逻辑移位”).注意:对无符号数,右移时左边高位移入0;对于有符号的值,如果原来符号位为0(该数为正),则左边也是移入0.如果符号位原来为1(即负数),则左边移入0还是1,要取决于所用的计算机系统.有的系统移入0,有的系统移入1.移入0的称为”逻辑移位”,即简单移位;移入1的称为”算术移位”.</p>
<p>例: a的值是八进制数113755:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a:1001011111101101 (用二进制形式表示)</span><br><span class="line">a&gt;&gt;1: 0100101111110110 (逻辑右移时)</span><br><span class="line">a&gt;&gt;1: 1100101111110110 (算术右移时)</span><br></pre></td></tr></table></figure></p>
<p>在有些系统中,<code>a&gt;&gt;1</code>得八进制数<code>045766</code>,而在另一些系统上可能得到的是<code>145766</code>.Turbo C和其他一些C编译采用的是算术右移,即对有符号数右移时,如果符号位原来为1,左面移入高位的是1.<br>源代码:<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">int</span> a=<span class="number">0113755</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d"</span>,a&gt;&gt;<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h6 id="7、位运算赋值运算符"><a href="#7、位运算赋值运算符" class="headerlink" title="7、位运算赋值运算符"></a><strong>7、位运算赋值运算符</strong></h6><p>位运算符与赋值运算符可以组成复合赋值运算符.<br> 例如: &amp;=, |=, &gt;&gt;=, &lt;&lt;=, ^=<br> 例: a &amp; = b相当于 a = a &amp; b<br> a &lt;&lt; =2相当于a = a &lt;&lt; 2</p>
<h2 id="三-实例"><a href="#三-实例" class="headerlink" title="三 实例"></a>三 实例</h2><ul>
<li><p>Integer.toHexString(bt &amp; 0xFF);//为什么在算MD5时为什么与要0xff进行与运算呢<br>先来看二进制的与运算，如：-1 &amp; 1 ＝ 1<br>-1（负1）的二进制编码为：   11111111      11111111     11111111   11111111   即一个32位的字符串，前面一位是1表示负数<br>1（正1） 的二进制编码为：    00000000    00000000   00000000  00000001   即，只有最后一位是1，其他部分全部为0<br>按&amp;（与运算）的法则结果：  00000000    00000000   00000000   00000001  即，只有当两个都为1时才为1，所以最后的结果为：1(正1)<br>则可以知道为什么要与0xFF进行与运算，因为OxFF的16进行为 ：000000FF。任意数与OxFF进行与运算都是取16进制的后两位<br>运算示例如下：<br>-127(负数127)的16进制为：   FFFFFF81<br>0xFF的16进制为：           000000FF<br>则&amp;（与）运算是结果为：     00000081<br>所以：Integer.toHexStriing(-127 &amp; 0xFF) 的结果为：81  </p>
</li>
<li><p>以十六进制查看二进制文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hex</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">format</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> b : data) &#123;</span><br><span class="line">                  <span class="keyword">if</span>(n%<span class="number">16</span>==<span class="number">0</span>)</span><br><span class="line">                   result.append(String.format(<span class="string">"%05x:  "</span>,n));</span><br><span class="line">                  result.append(String.format(<span class="string">"%02x  "</span>,b));</span><br><span class="line">                  n++;</span><br><span class="line">                  <span class="keyword">if</span>(n%<span class="number">16</span>==<span class="number">0</span>)</span><br><span class="line">                   result.append(<span class="string">'\n'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.toString();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="位运算总览"><a href="#位运算总览" class="headerlink" title="位运算总览"></a>位运算总览</h3><table>
<thead>
<tr>
<th>运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:right">图解</th>
<th style="text-align:right">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>&amp;</td>
<td style="text-align:center">按位与。按位与运算符对两个数进行操作，然后返回一个新的数，这个数的每个位都需要两个输入数的同一位都为1时才为1</td>
<td style="text-align:right"><img src="http://farwmarth.bestnewbee.com/images/8370_140612144422_1.png"></td>
<td style="text-align:right">(A &amp; B) 结果为 12, 二进制为 0000 1100</td>
</tr>
<tr>
<td>或</td>
<td style="text-align:center">按位或。按位或运算符比较两个数，然后返回一个新的数，这个数的每一位设置1的条件是两个输入数的同一位都不为0(即任意一个为1，或都为1)</td>
<td style="text-align:right"><img src="http://farwmarth.bestnewbee.com/images/8370_140612144511_1.png"></td>
<td style="text-align:right">(A或 B) 结果为 61, 二进制为 0011 1101</td>
</tr>
<tr>
<td>^</td>
<td style="text-align:center">按位异或. 按位异或运算符^比较两个数，然后返回一个数，这个数的每个位设为1的条件是两个输入数的同一位不同，如果相同就设为0</td>
<td style="text-align:right"><img src="http://farwmarth.bestnewbee.com/images/8370_140612144558_1.png"></td>
<td style="text-align:right">(A ^ B) 结果为 49, 二进制为 0011 0001</td>
</tr>
<tr>
<td>~</td>
<td style="text-align:center">按位取反运算符~对一个操作数的每一位都取反</td>
<td style="text-align:right"><img src="http://farwmarth.bestnewbee.com/images/8370_140612144245_1.png"></td>
<td style="text-align:right">(~A ) 结果为 -61, 二进制为 1100 0011</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td style="text-align:center">按位左移。左移操作符（&lt;&lt;）将操作数的所有位向左移动指定的位数</td>
<td style="text-align:right">下图展示了11111111 &lt;&lt; 1（11111111 左移一位）的结果。蓝色数字表示被移动位，灰色表示被丢弃位，空位用橙色的0填充<img src="http://farwmarth.bestnewbee.com/images/leftbit.jpg"></td>
<td style="text-align:right">A &lt;&lt; 2 结果为 240, 二进制为 1111 0000</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td style="text-align:center">按位右移。右移操作符（&lt;&lt;）将操作数的所有位向又移动指定的位数</td>
<td style="text-align:right">下图展示了11111111 &gt;&gt; 1（11111111 右移一位）的结果。蓝色数字表示被移动位，灰色表示被丢弃位，空位用橙色的0填充<img src="http://farwmarth.bestnewbee.com/images/rightbit.jpg"></td>
<td style="text-align:right">A &gt;&gt; 2 结果为 15, 二进制为 0000 1111</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 基础 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[同步利器GoodSync]]></title>
      <url>http://www.farwmarth.com/%E5%90%8C%E6%AD%A5%E5%88%A9%E5%99%A8GoodSync/</url>
      <content type="html"><![CDATA[<p>Goodsync 用了两年了，个人感觉是比较好的同步工具，适合各种同步场景。u盘到目录，本地目录到本地目录，本地到远程，局域网共享目录到目录 等等。</p>
<p>Goodsync分为免费和付费版，我用的版本是9.1 破解版，破解前要将日期往2010年前调，破解之后去掉自动更新设置，网上有破解版本。</p>
<p>使用它第一步就是新建任务，任务分两种类型:备份和同步.&nbsp; 备份任务是单向的，如左向右，则备份则是保证右边和左边的状态一致，右边有多余的文件会删除。&nbsp; 同步任务会保证两边的状态保证一致。</p>
<a id="more"></a>
<p>新建任务后浏览左右边的目录，点击分析,分析完成后，点击同步就开始同步了.</p>
<p>下面我建立的arrow是一个单向从左到右的备份任务，用来发布测试工程到tomcat,不用每次都重新复制整个工程.publish任务是将编译好的工程与要发布到外网svn上的工程同步.assets是用来同步普通版本和台湾版本素材的。<br><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/01/image8.png" alt="image"> </p>
<p> 如图中向右的箭头表示会将左边的数据覆盖到右边,树形视图中有各个状态的目录.&nbsp; 更改: 要更改的文件,&nbsp;&nbsp;&nbsp; 已排除: 不会同步的文件 ， 新建: 新添加的文件 , 覆盖:&nbsp; 右边将要被覆盖的文件.</p>
<p>1 如果要排除文件: 右键分析的文件夹:有排除选项.&nbsp; 我通常用这个功能来排除所有的.svn文件.</p>
<p>2 如果从向左到右的任务里只是想将左边新增的项复制到右边，而不覆盖右边的文件，可选中树形视图中覆盖选项，在根项目中不做复制<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/01/image9.png" alt="image"> </p>
<p>昨天晚上发现可以用它来备份wordpress数据.如图<img src="http://farwmarth.bestnewbee.com/images/uploads/2013/01/image7.png" alt="image"></p>
<p>sftp协议格式: s<a href="ftp://ip:port" target="_blank" rel="noopener">ftp://ip:port</a> 注意的是要支持SSH-2的服务器 ,配置可参考:<a href="http://www.goodsync.com/support/manual#fs-sftp" title="http://www.goodsync.com/support/manual#fs-sftp" target="_blank" rel="noopener">http://www.goodsync.com/support/manual#fs-sftp</a></p>
<p>不知道是国外主机的原因还是什么: 40M的内容sftp 用了将近两个小时，恒定速度为8kb/s.求解.</p>
]]></content>
      
        <categories>
            
            <category> tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 效率之道 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浅析 robotlegs2]]></title>
      <url>http://www.farwmarth.com/%E6%B5%85%E6%9E%90%20robotlegs2/</url>
      <content type="html"><![CDATA[<p>当前阅读版本: 2.0.0b3.  <a href="https://github.com/robotlegs/robotlegs-framework" title="https://github.com/robotlegs/robotlegs-framework" target="_blank" rel="noopener">https://github.com/robotlegs/robotlegs-framework</a>  源代码中有readme文档，阅读readme可以了解整个程序的大致结构.</p>
<a id="more"></a>
<h6 id="1-概述"><a href="#1-概述" class="headerlink" title="1  概述"></a>1  概述</h6><p>robotlegs2比  1.5 的结构更加灵活,但是额外加了两个依赖包:</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/01/image5.png" alt="image"></p>
<p>重构后robotlegs2分为四个部分 ：</p>
<ol>
<li>核心framework,包括:容器(Context) ,配置管理器(Configuration manager),扩展管理(Extension installer),两个新的状态对象(Guards and hooks) ,生命周期管理(Lifecycle),日志(Logging)</li>
<li>扩展 :包括了 m v c 的管理器，日志扩展，事件中心等等。</li>
<li>扩展包(Bundles):  实现的只有一个MVCSBundle,顾名思义是MVC的扩展组合 .</li>
<li>MXML支持</li>
</ol>
<h6 id="2-容器解析"><a href="#2-容器解析" class="headerlink" title="2   容器解析"></a>2   容器解析</h6><p>RobotLegs的核心类是Context 管理整个程序的生命周期，和 puremvc 的Facade 有点类似的味道.</p>
<p>我们先来创建一个简单的容器,再分析创建容器具体做了一些什么.<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">_context = <span class="keyword">new</span> Context()</span><br><span class="line">.install(MVCSBundle)</span><br><span class="line">.configure(</span><br><span class="line">AppConfig,</span><br><span class="line"><span class="keyword">new</span> ContextView(<span class="keyword">this</span>));</span><br></pre></td></tr></table></figure></p>
<p>这句代码就是创建一个容器上下文，并且装载mvc扩展包，添加一些自定的配置，将主视图初始化. Context初始化调用的方法<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setup</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">            _injector.map(Injector).toValue(_injector);</span><br><span class="line">            _injector.map(IContext).toValue(<span class="keyword">this</span>);</span><br><span class="line">            _logger = _logManager.getLogger(<span class="keyword">this</span>);</span><br><span class="line">            _lifecycle = <span class="keyword">new</span> Lifecycle(<span class="keyword">this</span>);</span><br><span class="line">            _configManager = <span class="keyword">new</span> ConfigManager(<span class="keyword">this</span>);</span><br><span class="line">            _extensionInstaller = <span class="keyword">new</span> ExtensionInstaller(<span class="keyword">this</span>);</span><br><span class="line">            beforeInitializing(beforeInitializingCallback);</span><br><span class="line">            afterInitializing(afterInitializingCallback);</span><br><span class="line">            beforeDestroying(beforeDestroyingCallback);</span><br><span class="line">            afterDestroying(afterDestroyingCallback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>大概操作为:绑定注入器,绑定上下文，为容器提供日志,生命周期对象 ,配置管理，扩展安装类，后面几个是执行几个回调.</p>
<p>MVCSBundle 装载<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">extend</span><span class="params">(context:IContext)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">            context.logLevel = LogLevel.DEBUG;</span><br><span class="line">            context.install(</span><br><span class="line">                TraceLoggingExtension,</span><br><span class="line">                VigilanceExtension,</span><br><span class="line">                InjectableLoggerExtension,</span><br><span class="line">                ContextViewExtension,</span><br><span class="line">                EventDispatcherExtension,</span><br><span class="line">                ModularityExtension,</span><br><span class="line">                CommandCenterExtension,</span><br><span class="line">                EventCommandMapExtension,</span><br><span class="line">                LocalEventMapExtension,</span><br><span class="line">                ViewManagerExtension,</span><br><span class="line">                StageObserverExtension,</span><br><span class="line">                ManualStageObserverExtension,</span><br><span class="line">                MediatorMapExtension,</span><br><span class="line">                StageSyncExtension);</span><br><span class="line">            context.configure(ContextViewListenerConfig);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2013/01/image6.png" alt="image"></p>
<p>写了个关于下拉切换图片的demo,还发邮件给作者 Shaun Smith 问了个低级问题:怎么样在初始化容器后派发事件来启动框架，Shaun Smith 让我把问题提交到<a href="http://knowledge.robotlegs.org/discussions/robotlegs-2/" title="http://knowledge.robotlegs.org/discussions/robotlegs-2/" target="_blank" rel="noopener">http://knowledge.robotlegs.org/discussions/robotlegs-2/</a> ,在这找到了答案，在你的config里面里就可以使用容器上下文，和事件派发器了:<br><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> <span class="title">com</span>.<span class="title">far</span>.<span class="title">robotlegs2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.commands.GetDataCommand;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.common.view.ImageSelect;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.common.view.ImageShow;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.events.AppEvent;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.mediators.ImageSelectMediator;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.mediators.ImageShowMediator;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> com.far.robotlegs2.models.ImageModel;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> flash.display.DisplayObjectContainer;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> flash.events.IEventDispatcher;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> robotlegs.bender.extensions.contextView.ContextView;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> robotlegs.bender.extensions.eventCommandMap.api.IEventCommandMap;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;</span></span><br><span class="line">    <span class="meta"><span class="meta-keyword">import</span> robotlegs.bender.framework.api.IContext;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        [Inject]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> eventDispatcher:IEventDispatcher;</span><br><span class="line">        [Inject]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> contextview:ContextView;</span><br><span class="line">        [Inject]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> mediatorMap:IMediatorMap;</span><br><span class="line">        [Inject]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> commandMap:IEventCommandMap;</span><br><span class="line">        [Inject]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> context:IContext;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">AppConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        [PostConstruct]</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">()</span>:void</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                    context.injector.map(ImageModel).toSingleton(ImageModel);</span><br><span class="line">                    mediatorMap.map(ImageSelect).toMediator(ImageSelectMediator);</span><br><span class="line">                    mediatorMap.map(ImageShow).toMediator(ImageShowMediator);</span><br><span class="line">                    commandMap.map(AppEvent.GETDATA,AppEvent).toCommand(GetDataCommand);</span><br><span class="line">                    addImageSelect(contextview.view);</span><br><span class="line">                    addImageShow(contextview.view);</span><br><span class="line">                    eventDispatcher.dispatchEvent(<span class="keyword">new</span> AppEvent(AppEvent.GETDATA));</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addImageSelect</span><span class="params">(container:DisplayObjectContainer)</span>:ImageSelect</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ImageSelect(container);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addImageShow</span><span class="params">(container:DisplayObjectContainer)</span>:ImageShow</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> imshow:ImageShow=<span class="keyword">new</span> ImageShow();</span><br><span class="line">                    imshow.y=<span class="number">50</span>;</span><br><span class="line">                    container.addChild(imshow);</span><br><span class="line">                   <span class="keyword">return</span> imshow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>还要注意的是Mediator的onRegister 在2里面是initialize. robotlegs2还在开发中，希望作者尽快出来正式版.这段时间会仿着写个更轻量的框架.</p>
]]></content>
      
        <categories>
            
            <category> actionscript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> robotlegs2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GTD]]></title>
      <url>http://www.farwmarth.com/gtd/</url>
      <content type="html"><![CDATA[<blockquote>
<p>GTD流程图 : Getting Things Done的缩写</p>
</blockquote>
<p>把所有事情都从你的脑袋里弄出来。在事情出现就做好相关行动的一系列决定，而不是在事情爆发的时候。以合适的类别组织好你的项目的各种提醒以及下一步行动。保持你的系统更新和完整，及时进行回顾，使你在任何时候都能信任你的系统和对任务的处理。”</p>
<p>GTD系统由五条核心原则组成：收集、处理、管理、执行、回顾</p>
<p><img src="http://farwmarth.bestnewbee.com/images/5584467049_4caa6bdff6.jpg" alt=""></p>
<a id="more"></a>
<h2 id="搜集"><a href="#搜集" class="headerlink" title="搜集"></a>搜集</h2><p>把任何你需要跟踪或者记住或者做的事情记在Allen称之为‘水桶’的地方：一个收件箱，电子邮箱，磁带，笔记本，PDA，或者它们的组合。把你脑子里的任何东西都拿出来放到你的搜集设备里，准备好做下一步的处理。每星期所有的水桶都应该被至少清空一次。</p>
<h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><p>处理你的收件箱要遵循一个严格的工作流程：<br>从最上面开始。<br>一次处理一项。<br>不把任何东西放回收件箱。<br>如果任何一项需要做：<br>做（如果花的时间少于两分钟）<br>委托别人完成，或者<br>把它延期。<br>否则<br>把它存档以便查询，<br>把它扔掉，或者<br>使它成熟以便下一步的处理<br>两分钟原则：任何事情如果花的时间少于两分钟，那么马上就去做。两分钟是一个分水岭，这样的时间和正式地推迟一个动作所花的时间差不多。</p>
<h2 id="组织"><a href="#组织" class="headerlink" title="组织"></a>组织</h2><p>Allen描述了一个建议的列表集合，你可以用来跟踪需要关注的项目：<br>下一步行动(Next actions) - 对于每个需要你关注的事项，定好什么是你可以实际采取的下一步行动。例如，如果事项为“写项目报告”，下一步行动可能会是“给Fred发邮件开个简短会议”，或者“给Jim打电话问报告的要求”，或者类似的事情。虽然要完成这个事项，可能会有很多的步骤和行动，但是其中一定会有你需要首先去做的事情，这样的事情就应该被记录在“下一步行动”列表上。较好的做法是把这些事项根据能够被完成的“环境”整理分类，例如“在办公室”,“用电话”,“在商场”.</p>
<p>专案(Projects) - 每个需要多于一个实际的行动才能达到的生活或者工作中的“开放式回路”就是一个“专案”.</p>
<p>使用跟踪以及周期性的回顾来确保每个专案都有一个下一步的行动进行下去。</p>
<p>等待(Waiting for) - 当你已经指派了一个事项给其他人或者在项目进行下去之前需要等待外部的事件，就应当在你的系统当中跟踪以及定期检查是否已经可以采取行动或者需要发出一个提醒。</p>
<p>将来／可能(Someday/Maybe) - 这些事情你需要在某个点去做，但是不是马上。例如：“学习中文”，或者“进行一个潜水假期”.</p>
<p>对于跟踪你的预约和委托，一个日历也是重要的；另外，Allen特别推荐日历应该被用在他所谓的“硬工程”上：必须在某个特定的期限之前完成的事情，或者在约定的时间和地点完成的会议和约会.“待办”事项应该用在下一步行动列表当中。</p>
<p>GTD的最后一个关键组织模块是归档系统.“Getting Things Done”书里说如果要用一个归档系统，那它必须得是简单易用和有趣。即使是一张纸，如果你需要用来记录参考信息，如果不属于你已经有的一个目录，也要有自己的文件组织方式。Allen的建议是你可以维护一个按照字母顺序组织的归档系统，这样可以比较容易快速的存储和提取你所想要的信息。</p>
<p>Google的Gmail的用户可以用创建标签的方式来创建“待办事项”和“项目”，这种方式在Bryan Murdaugh的 “Getting Things Done with Gmail” [1]白皮书中有清楚的描述。它保留了很多GTD的相同概念，但是是在在线的电子邮件系统中实施。</p>
<h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p> </p><p>如果你不至少每天或者只要你有时间就回顾检查，那么你的行动和提醒的列表将会变的毫无用处。以你当时拥有的精力，资源和时间，决定什么是对你来说最重要的事情，然后做。如果你倾向于拖延，你可能会老是做最容易的事情，避免那些难的。为了解决这个问题，你可以一个接一个地做列表上的事情，按照它们的顺序，就象你处理你的收件箱一样。<br>至少以星期为周期，GTD要求你回顾所有你比较主要的“行动”,“项目”和“等待”的事项，确保所有的新任务或者即将到来的事件都进入你的系统，而且所有的事情都更新到符合最新的情况。Allen建议制作一个难题档案来帮助你更新你关于主要行动的记忆。</p>
<h2 id="做"><a href="#做" class="headerlink" title="做"></a>做</h2><p> </p><p>如果你把你的时间都花在组织工作，而不是做它们，那么所有的GTD系统都是不好用的！David Allen的观点是，如果你可以把必须做的事情，让它变得简单、容易、有趣的话，那你就比较不会拖延、或者被太多的“开放性回路”所压倒。 </p><p></p>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul>
<li><a href="http://farwmarth.bestnewbee.com/images/5584467049_4caa6bdff6.jpg" target="_blank" rel="noopener">doit.im</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> mind </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gtd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用bat来提高工作效率]]></title>
      <url>http://www.farwmarth.com/%E7%94%A8bat%E6%9D%A5%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</url>
      <content type="html"><![CDATA[<p>项目发布流程通常是手工的，需要加密，编译模块，改名，svn提交，生成版本号。上传svn服务器。手工发布效率很低。还容易出错。就写了个bat脚本 。</p>
<p>本来是打算写ant脚本的。但ant脚本需要环境支持,还是用bat算了。</p>
<a id="more"></a>
<p>关键的语法解析:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">%</span>~d0 定位到bat所在盘符</span><br><span class="line">cd %~dp0 定位到bat目录</span><br><span class="line">find "isDebug" %sysnet%|find "true"&amp;gt;nul 检测as文件开关是否是发布版本</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- %projectPath%bin-debug\    0   1 给air程序传递参数来加密素材</span><br></pre></td></tr></table></figure></p>
<p>还有就是遍历模块编译bat,不再详细写出了。代码如下:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">::aidiTestCode-app.xml</span><br><span class="line">::递归加密目录     目录 ,1,0</span><br><span class="line">::非递归加密目录     目录 ,0,0</span><br><span class="line">::加密单个文件   文件,1,0</span><br><span class="line">::加密主文件     目录 ,0,1</span><br><span class="line">@echo off</span><br><span class="line">::工程路径 ，项目路径改变时请更改</span><br><span class="line"><span class="meta">%</span>~d0</span><br><span class="line">cd %~dp0</span><br><span class="line">cd ..</span><br><span class="line">set projectPath=%cd%\</span><br><span class="line">:: 每个bat生成的编译数</span><br><span class="line">set pageNum=15</span><br><span class="line">::不同版本的素材别称  tw\</span><br><span class="line">::set langType=tw\   ::下面的变量不要配置</span><br><span class="line">set buildPath=%projectPath%bin-build</span><br><span class="line">set versionPath=%projectPath%src\%langType%assets</span><br><span class="line">set modulesPath=%versionPath%\app</span><br><span class="line">set versionFile=%versionPath%\ui\common\filever.xml</span><br><span class="line">set ucommon=%versionPath%\ui\common</span><br><span class="line">set u7kcommon=%versionPath%\ui\7k7k\common</span><br><span class="line">set sysnet=%projectPath%src\etc\net\SysNet.as</span><br><span class="line">find "isDebug" %sysnet%|find "true"&gt;nul</span><br><span class="line">if %errorlevel% equ 0 (      echo 不是发行版本,请修改SysNet.as      pause      exit</span><br><span class="line">)</span><br><span class="line">echo 是发行版本</span><br><span class="line">echo *****</span><br><span class="line">echo 1 大陆版  2台湾版</span><br><span class="line">set  /p langTypeChoice="选择编译版本    "   if  %langTypeChoice% EQU 1 (set langType=)   if  %langTypeChoice% EQU 2 (set langType=tw)</span><br><span class="line"><span class="meta">%</span>~d0</span><br><span class="line">cd %~dp0</span><br><span class="line">echo 开始发布主程序</span><br><span class="line">call "Main.bat"</span><br><span class="line"><span class="meta">%</span>~d0</span><br><span class="line">cd %~dp0</span><br><span class="line">echo 开始生成模块编译文件</span><br><span class="line">mydailybuild\bin\adl  mydailybuild\bin\scriptBuilder-app.xml -- %projectPath%  %pageNum%  %langType%</span><br><span class="line">echo 开始加密主程序</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- %projectPath%bin-debug\    0   1</span><br><span class="line">move  /y "%projectPath%bin-debug\utils.tempdata"        "%ucommon%"</span><br><span class="line">move /y   "%projectPath%bin-debug\events.tempdata"      "%ucommon%"</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- %projectPath%bin-debug\7k7k\    1   0</span><br><span class="line">move /y   "%projectPath%bin-debug\7k7k\utils.tempdata"      "%u7kcommon%"</span><br><span class="line">move /y   "%projectPath%bin-debug\7k7k\events.tempdata"      "%u7kcommon%"</span><br><span class="line">echo 移动加密好的主程序成功</span><br><span class="line">:beginCode</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line">echo  ********</span><br><span class="line">echo 请输入选项：</span><br><span class="line">echo -2 直接生成版本号xml</span><br><span class="line">echo -1 编译并加密所有模块</span><br><span class="line">echo 0 退出</span><br><span class="line">for /f "tokens=*" %%i in ('dir  /s/b %buildPath%\modules*.bat') do (       set batPath=!batPath!%%i;       set  /a count=!count!+1       echo !count! %%~ni   )</span><br><span class="line">set /p coi="请输入选项：   "   if  %coi% EQU -2 (goto createVersion)   if  %coi% EQU -1 (goto codeAll)   if  %coi% EQU 0  (exit)</span><br><span class="line">for  %%m in (!batPath!) do (       set  /a counta=!counta!+1            if  %coi%==!counta!  (           for  /f  "tokens=4 delims= " %%x in ('find  "mxmlc" %%m') do (               set tempstr=%%x               set "tempstr=!tempstr:/=!"               set  oneModuleSwfPath=%projectPath%!tempstr:~6!               call %%m              %~d0              cd %~dp0              mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- !oneModuleSwfPath!   1   0              del !oneModuleSwfPath!              echo !oneModuleSwfPath! ok               endlocal               pause           )           goto beginCode            )</span><br><span class="line">)</span><br><span class="line">:codeAll</span><br><span class="line">echo 编译所有模块</span><br><span class="line">for /f "tokens=*" %%j in ('dir  /s/b %buildPath%\all*.bat') do ( call "%%j" )</span><br><span class="line"><span class="meta">%</span>~d0</span><br><span class="line">cd %~dp0</span><br><span class="line">echo 加密模块</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- %modulesPath%  1  0</span><br><span class="line">echo 加密模块成功,清除swf</span><br><span class="line">for /f "tokens=*" %%k in ('dir  /s/b %modulesPath%*.swf') do ( del "%%k" )</span><br><span class="line">goto beginCode</span><br><span class="line">:createVersion</span><br><span class="line">echo ******</span><br><span class="line">echo 提交模块 (1 提交  0不提交 )</span><br><span class="line">set /p  commitAll="是否提交所有更改:   "</span><br><span class="line">if %commitAll% EQU 0  (goto createXML)</span><br><span class="line">if %commitAll% EQU 1 (</span><br><span class="line">echo 提交所有更改模块</span><br><span class="line">svn commit  -m "commit modules" %modulesPath%</span><br><span class="line">echo 提交7k7k更改</span><br><span class="line">svn commit  -m "commit 7k7kcommon" %u7kcommon%</span><br><span class="line">echo 提交common更改</span><br><span class="line">svn commit  -m "commit normalcommon" %ucommon%</span><br><span class="line">pause</span><br><span class="line">)</span><br><span class="line">:createXML</span><br><span class="line">echo  生成版本号xml</span><br><span class="line">cd %versionPath%</span><br><span class="line">svn status   assets  .  -v --xml&gt;%versionFile%</span><br><span class="line">echo 转换版本号文件</span><br><span class="line"><span class="meta">%</span>~d0</span><br><span class="line">cd %~dp0</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\createVersion-app.xml -- %versionFile% </span><br><span class="line">echo 加密版本号文件</span><br><span class="line">mydailybuild\bin\adl mydailybuild\bin\aidiTestCode-app.xml -- %versionFile%  1   0</span><br><span class="line">del %versionFile%</span><br></pre></td></tr></table></figure></p>
<p>等有时间改成ant脚本试试</p>
]]></content>
      
        <categories>
            
            <category> bat </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 效率之道 </tag>
            
            <tag> bat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初入wordpress]]></title>
      <url>http://www.farwmarth.com/%E5%88%9D%E5%85%A5wordpress/</url>
      <content type="html"><![CDATA[<p>刚开始玩网站，记录一下。多谢<a href="http://www.litefeel.com" target="_blank" rel="noopener">litefeel</a>的帮忙</p>
<h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><ul>
<li>注册: <code>godaddy.com</code> ,注册教程:<a href="http://jingyan.baidu.com/article/414eccf63bb2ea6b421f0a47.html" title="http://jingyan.baidu.com/article/414eccf63bb2ea6b421f0a47.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/414eccf63bb2ea6b421f0a47.html</a></li>
</ul>
<a id="more"></a>
<ul>
<li>域名解析:DNSpod 教程: <a href="http://xianhuo.org/godaddy-yuming-dnspod-jiexi.html" title="http://xianhuo.org/godaddy-yuming-dnspod-jiexi.html" target="_blank" rel="noopener">http://xianhuo.org/godaddy-yuming-dnspod-jiexi.html</a></li>
</ul>
<h2 id="连接vps"><a href="#连接vps" class="headerlink" title="连接vps"></a>连接vps</h2><p>推荐两个工具:</p>
<ul>
<li><code>putty</code> :纯命令行</li>
<li><code>winscp</code>:有图形界面</li>
</ul>
<p><strong>putty</strong>:</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228192833.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228192833.png" alt="QQ截图20121228192833" title="QQ截图20121228192833"></a></p>
<p><strong>上传文件 用pscp . –r 参数递归拷贝目录.</strong><br><code>pscp -P 端口号 -l 用户 -r 本地路径 服务器ip:服务器目录</code></p>
<p><strong>winscp:</strong></p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228193513.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228193513.png" alt="QQ截图20121228193513" title="QQ截图20121228193513"></a></p>
<p>还可以绑定putty来启动.</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228193814.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228193814.png" alt="QQ截图20121228193814" title="QQ截图20121228193814"></a></p>
<p>熟悉的图形界面.</p>
<p><a href="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228194100.png" target="_blank" rel="noopener"><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228194100.png" alt="QQ截图20121228194100" title="QQ截图20121228194100"></a></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>vps上的环境litefeel都搭好了,centos +lnmp ,服务器是nginx:</p>
<h3 id="ngnix配置"><a href="#ngnix配置" class="headerlink" title="ngnix配置"></a>ngnix配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">log_format  域名 '$remote_addr - $remote_user [$time_local] $request '</span><br><span class="line">             '$status $body_bytes_sent $http_referer '</span><br><span class="line">             '$http_user_agent $http_x_forwarded_for';</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name 域名;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  项目目录;</span><br><span class="line">        include wordpress.conf;</span><br><span class="line">        location ~ .*.(php|php5)?$</span><br><span class="line">            &#123;</span><br><span class="line">                try_files $uri =404;</span><br><span class="line">                fastcgi_pass  unix:/tmp/php-cgi.sock;</span><br><span class="line">                fastcgi_index index.php;</span><br><span class="line">                include fcgi.conf;</span><br><span class="line">            &#125;</span><br><span class="line">        location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">            &#123;</span><br><span class="line">                expires      30d;</span><br><span class="line">            &#125;</span><br><span class="line">        location ~ .*.(js|css)?$</span><br><span class="line">            &#123;</span><br><span class="line">                expires      1y;</span><br><span class="line">            &#125;</span><br><span class="line">        access_log  /home/wwwlogs/*.log  域名;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>检测配置是否正常:/usr/local/nginx/sbin/nginx –t</li>
<li>重启nginx: /usr/local//sbin/nginx -s reload</li>
</ul>
<p>ok 网站搭建好了。</p>
<h2 id="数据导入。"><a href="#数据导入。" class="headerlink" title="数据导入。"></a>数据导入。</h2><p>我的数据是从cnblog上导过来的。用了一个插件。导数据过程中出现warming.是网站目录的文件所属用户不正确的原因。可参考:<a href="http://www.litefeel.com/solve-wordpress-need-to-login-to-ftp/" title="http://www.litefeel.com/solve-wordpress-need-to-login-to-ftp/" target="_blank" rel="noopener">http://www.litefeel.com/solve-wordpress-need-to-login-to-ftp/</a>.其实也可以通过mysql导入。/usr/bin/mysql -u root –p 登录mysql后用导入命令.</p>
<h2 id="选择写博工具"><a href="#选择写博工具" class="headerlink" title="选择写博工具."></a>选择写博工具.</h2><ul>
<li><p><code>wordpress for android</code>:我的wordpress是3.5的版本，默认开启了xml-rpc服务。这个工具还是挺不错，可以在android手机上管理自己的博客，评论文章等功能。</p>
</li>
<li><p><code>Windows Live Writer</code> :离线写作的好工具.</p>
</li>
</ul>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228195948.png" alt="QQ截图20121228195948"></p>
<p>唯一要注意的是日志的远程发布url和日志类型。我选择的是wordpress2.2+</p>
<p><img src="http://farwmarth.bestnewbee.com/images/uploads/2012/12/QQ20121228200109.png" alt="QQ截图20121228200109"></p>
<p>Down.</p>
]]></content>
      
        <categories>
            
            <category> wordpress </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在github上建立自己的开源项目]]></title>
      <url>http://www.farwmarth.com/%E5%9C%A8github%E4%B8%8A%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<p>&nbsp;</p>
<p>由于代码一直在自己这保存，一方面别人看不见，也不安全。搜了下，发现在github是一个提供免费git管理的网站，于是用了下，非常爽，功能很强大。</p>
<p>下面就是我注册和提交github代码的流程<br><a id="more"></a></p>
<p>先到地址<a href="https://github.com/signup/free" target="_blank" rel="noopener">https://github.com/signup/free</a><br>注册你的个人信息,用户名，密码，注册邮箱，<br>其中的ssh public key使用如下命令得到：<br>ssh-keygen -C <a href="mailto:guobamantou@126.com" target="_blank" rel="noopener">guobamantou@126.com</a> -t rsa<br>这里的-C后的内容就是注册时要登记的邮箱地址<br>如果你本机已经有个用于ssh的公私钥，就注意把新生成的那个放到别的目录，否则就覆盖掉了。我这条命令是在普通目录下打的，输入命令后输出如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): test</span><br></pre></td></tr></table></figure></p>
<p>这时我打了一个test,也就是改变了生成公私钥的默认位置，这样就不会覆盖.ssh下的了。<br>接着一路回车，生成的公私钥就在当前目录下的test和test.pub了。<br>把这两个文件拷到.ssh下（注意备份旧的）<br>这时执行cat test.pub，就打出<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-rsa ABIwAAAQ..................DGtYAnCQ== guobamantou@126.com</span><br></pre></td></tr></table></figure></p>
<p>复制这个输出的内容到SSH Public Key的输入框，随便写的这个key值是无效的。<br>确定提交注册申请。   </p>
<p>至此，就注册好了&nbsp;<br>登录自己的帐号，左边出现如下内容。   </p>
<p>Welcome to GitHub! What’s next? (36 minutes ago)</p>
<ul>
<li>Create a Repository&nbsp;</li>
<li>Find a Repository</li>
<li>Peruse the GitHub Guides</li>
</ul>
<p>点击新建新仓库，名字就是minibios，加上描述<br>其中的homepage url为minibios<br>好，minibios的项目就建立了。<br>之后会弹出一个页面教你如何把你的项目代码提交上去，都是git的常规操作。<br>我的minibios一直都是使用git管理的，直接做最后几步就行了<br>在minibios目录下：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:guobamantou/clean-pmon.git</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p>
<p>这个代码现在有2MB左右，上传大概用了有1分钟吧，要有点小耐心。   </p>
<p>如果提交的是一个新项目,比如我提交了一个clean-pmon,在创建项目的时设置项目名clean-pmon    </p>
<p>现在就提交试试。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir test</span><br><span class="line">cd test</span><br><span class="line">vi test.txt</span><br><span class="line">git add test.txt</span><br><span class="line">git init</span><br><span class="line">git add test.txt</span><br><span class="line">git commit -a</span><br><span class="line">git remote add origin git@github.com:guobamantou/clean-pmon.git</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p>
<p>如果顺利的话，几秒钟之后东西就提交上去了<br>你也可以使用git clone git;//github.com:guobamantou/clean-pmon.git<br>下载一遍确认一下。<br>好了，以后minibios就有了家了<br>主页是<a href="http://github.com/guobamantou/minibios" target="_blank" rel="noopener">http://github.com/guobamantou/minibios</a><br>这个地址可以看到每次的修改<br><a href="http://github.com/guobamantou/minibios/commits/master" target="_blank" rel="noopener">http://github.com/guobamantou/minibios/commits/master</a><br>如果要下载源码，有download的按钮可供下载tar.gz和zip两种格式的<br>如果可以的话，使用<br>git clone git://github.com:guobamantou/minibios.git<br>使用git协议可以看到每次的提交。   </p>
]]></content>
      
        <categories>
            
            <category> git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> programm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三月一夏]]></title>
      <url>http://www.farwmarth.com/%E4%B8%89%E6%9C%88%E4%B8%80%E5%A4%8F/</url>
      <content type="html"><![CDATA[<p>老实说这个夏天 过得太漫长。</p>
<p>花一三个月的时间把所学忘得差不多，细想只剩一些基本思想 。想换个地方 。</p>
<p>草草地总结一下 二个月的工作，其实还学到了些许东西:</p>
<a id="more"></a>
<ul>
<li><strong>工作态度要严谨</strong>   </li>
</ul>
<p>工作不能像学习环境 一下，对一些东西不能模凌两可。比如对数据库的表设计：<br>&nbsp;&nbsp;&nbsp;&nbsp;原则是：以角色为出发点，再扩展其他的表，每一张表先设计出最核心的字段。<br> 每一张表都是一个对象，要体现出在它的特征，比如：在一个球馆管理系统的表设计 上，学员有普通学员和特长生，特长生有一些参赛信息，而普通学员并没有，所有我单独列了一张表来储存特长生的参赛信息，王总问我怎么来区分普通学员与特长生，我一想：搜索特长生参赛信息表不就ok,<br> &nbsp;&nbsp;&nbsp;&nbsp;但细想，一个学员的类型应该属于对象特征，而不应该通过其他表的关联来判断它的类型。所以在学员表加了一个学员类型的字段.<br> &nbsp;&nbsp;&nbsp;&nbsp;设计初期一个考虑不周的地方是无可避免的，唯一能做的是尽量少的减少这种错误，而这直接跟客户需求挂钩，所以在表设计时，对需求的理解是至关重要的   。<br>&nbsp;&nbsp;&nbsp;&nbsp;在球馆管理系统中有一处地方是比较纠结的，并不是业务有多复杂，是对需求不清楚 ，客户来了谈了一上午，有一处地方没有听清楚 ，在每日盈利计算的时候就有点迷惑了，球馆每天的的盈利算起来很简单的:收益-支出,收益包括商品销售，学员上课的课时费，客户租场地的场地费等等，支出包括球馆日常消费，教练工资，器材消费，关键是要算出每课时学员的课时费.<br>&nbsp;&nbsp;&nbsp;&nbsp;课时类型和会员类型又有联系，所以就迷糊了。但后还是王总点拔啊，设计出了比较好的解决方案。   </p>
<ul>
<li><p><strong>善于与人沟通</strong></p>
<p>无论从事什么职位，这点都是必需的，个人觉得在这方面需要不断努力 。</p>
<p>两个项目中和客户打了一下交道，第一次是一个信息发布的网站，跑了一趟外面，了解了一下基本情况，我不断地问，还有什么需要新加的功能，现在想起来傻的可以，这是变相地给自己加任务。总结就是：在客户满意的基础上给自己减少工作量。</p>
<p>第二次是客户自己过来的，人比较随和,然后提了一些功能方面的要求 ，我一一答应 ，王总回来 对我说:不要老是学会答应 ，试着改变他们的想法。呃，我又无语了。总结是:尝试引导客户，要阐述自己的观点。共同讨论，记得你是提供者，有发言权。</p>
</li>
<li><p><strong> 客户体验至上，编程语言只是个工具</strong></p>
<p>写了一段时间程序过后，你会发现自己在编程的时候形成了一种思想：对代码结构会有一定的想法，常常会浪费一些时间来设计这些东西，当然这是个好的习惯，但如果项目时间比较紧急的时候，还是要先把任务完成再说，因为，客户看到的只是操作的流畅性和人性化，可能对界面的美化会有一定的要求，但一般人不会说你这个代码结构设计得要有多优良。他们本身并不懂这个，他们要的是最终产品。</p>
</li>
</ul>
<p>我在做第一个任务的时候 一个多星期时间要完成一个门户网站的后台，还有前台的一部分功能，重复性的工作比较多。有二天的时间我都在总结一个ibatis的通知工具类，还有相当一部分时间来找最佳的文件上传方案,后来草草地结束了这个项目。发布后发现有一个很低级的bug，首页的超链接忘记指向到某个地方 了。别人只是认为你太粗心大意了。</p>
<p> 所以在时间紧急的情况下，先把任务完成，再修正成好的解决方案。</p>
<ul>
<li><p><strong> 时间估算</strong></p>
<p>这是最值得学习的一点，在以前很少去列一个这样的工作计划列表出来，一般都是今天做今天的事情，尽量完成。这样的缺点是对工作的趋势没有一个好的把握，不知道什么时候能完成手上的工作，所以以后做一个任务应该先有一个工作列表 ，估算某个时间段应该完成什么东西。现在每天都会写工作日志(被逼的),要记录的是:今天上下午的工作内容，遇到的问题。明天的工作估算。还有一个就是写周报: 对上个星期每一个的工作总结 ，这一周的工作总结，下一周的工作估算 。 虽然可能并不能按估算的精确完成每日的任务，但是起码自己心里有个底，知道每一天需要去干什么。</p>
<p>王总让我写了二个项目的周期预算，对于小型项目的话觉得这个估算还是比较精确的。这个工作对以后做项目组长有帮助，哈哈。</p>
</li>
<li><p><strong> 其实有很多事情是可以做的。</strong></p>
</li>
</ul>
<blockquote>
<ul>
<li>不断学习新的知识。</li>
<li>保持对行业的关注 ，多看一下资讯，以前总认为这是没必要的事情 。</li>
<li>重在积累 ,积累自己的工具包，可以仿写框架 。</li>
<li>不一定要做开发。</li>
<li>坚持感兴趣的东西。</li>
<li>放假了别老呆在房里，一个问题的解决多不定就是因为在路边看到了某件事情 。</li>
<li>保持健康的体魄，清醒的头脑。这点很重要。</li>
<li>适当游戏 。</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[as3一些常用数学公式]]></title>
      <url>http://www.farwmarth.com/as3%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h3 id="基本三角函数的计算："><a href="#基本三角函数的计算：" class="headerlink" title="基本三角函数的计算："></a>基本三角函数的计算：</h3><ul>
<li>角的正弦值 = 对边 / 斜边</li>
<li>角的余弦值 = 邻边 / 斜边</li>
<li>角的正切值 = 对边 / 邻边</li>
</ul>
<h3 id="角度制与弧度制的相互转换："><a href="#角度制与弧度制的相互转换：" class="headerlink" title="角度制与弧度制的相互转换："></a>角度制与弧度制的相互转换：</h3><ul>
<li>弧度 = 角度 * Math.PI / 180</li>
<li>角度 = 弧度 * 180 / Math.PI</li>
</ul>
<a id="more"></a>
<h3 id="计算两点间距离："><a href="#计算两点间距离：" class="headerlink" title="计算两点间距离："></a>计算两点间距离：</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">dx = x2 &amp;ndash; x1;</span><br><span class="line">dy = y2 &amp;ndash; y1;</span><br><span class="line">dist = Math.sqrt(dx*dx + dy*dy);</span><br></pre></td></tr></table></figure>
<h3 id="缓动公式"><a href="#缓动公式" class="headerlink" title="缓动公式:"></a>缓动公式:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">sprite.x += (targetX - sprite.x) * easing;<span class="comment">//easing为缓动系数变量</span></span><br><span class="line">sprite.y += (targetY - sprite.y) * easing;</span><br></pre></td></tr></table></figure>
<h3 id="弹性公式"><a href="#弹性公式" class="headerlink" title="弹性公式:"></a>弹性公式:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">vx += (targetX - sprite.x) * spring;<span class="comment">//spring为弹性系数</span></span><br><span class="line">vy += (targetY - sprite.y) * spring;</span><br><span class="line">sprite.x += (vx *= friction);<span class="comment">//friction为摩擦力</span></span><br><span class="line">sprite.y += (vy *= friction);</span><br></pre></td></tr></table></figure>
<h3 id="偏移弹性公式"><a href="#偏移弹性公式" class="headerlink" title="偏移弹性公式:"></a>偏移弹性公式:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dx:Number = sprite.x - fixedX;</span><br><span class="line"><span class="keyword">var</span> dy:Number = sprite.y - fixedY;</span><br><span class="line"><span class="keyword">var</span> angle:Number = Math.atan2(dy, dx);</span><br><span class="line"><span class="keyword">var</span> targetX:Number = fixedX + Math.cos(angle) * springLength;</span><br><span class="line"><span class="keyword">var</span> targetY:Number = fixedX + Math.sin(angle) * springLength;</span><br></pre></td></tr></table></figure>
<h3 id="向鼠标旋转-或向某点旋转"><a href="#向鼠标旋转-或向某点旋转" class="headerlink" title="向鼠标旋转(或向某点旋转)"></a>向鼠标旋转(或向某点旋转)</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">dx = mouseX - sprite.x;</span><br><span class="line">dy = mouseY - sprite.y;</span><br><span class="line">sprite.rotation = Math.atan2(dy, dx) * <span class="number">180</span> / Math.PI;</span><br></pre></td></tr></table></figure>
<h3 id="波形运动"><a href="#波形运动" class="headerlink" title="波形运动:"></a>波形运动:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onEnterFrame1</span><span class="params">(event:Event)</span>:void </span>&#123;</span><br><span class="line">	ball.y=centerScale+Math.sin(angle)*range</span><br><span class="line">	angle+=speed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="心跳"><a href="#心跳" class="headerlink" title="心跳:"></a>心跳:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onEnterFrame1</span><span class="params">(event:Event)</span>:void </span>&#123;</span><br><span class="line">	ball.scaleX=centerScale+Math.sin(angle)*range;</span><br><span class="line">	ball.scaleY=centerScale+Math.sin(angle)*range;</span><br><span class="line">	angle+=speed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="圆心旋转"><a href="#圆心旋转" class="headerlink" title="圆心旋转:"></a>圆心旋转:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onEnterFrame</span><span class="params">(event:Event)</span>:void </span>&#123;</span><br><span class="line">	ball.x=centerX+Math.cos(angle)*radius;</span><br><span class="line">	ball.y=centerY+Math.sin(angle)*radius;</span><br><span class="line">	angle+=speed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="椭圆旋转"><a href="#椭圆旋转" class="headerlink" title="椭圆旋转:"></a>椭圆旋转:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onEnterFrame</span><span class="params">(event:Event)</span>:void </span>&#123;</span><br><span class="line">	ball.x=centerX+Math.cos(angle)*radiusX;</span><br><span class="line">	ball.y=centerY+Math.sin(angle)*radiusY;</span><br><span class="line">	angle+=speed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="颜色运算得到透明值"><a href="#颜色运算得到透明值" class="headerlink" title="颜色运算得到透明值:"></a>颜色运算得到透明值:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> t:uint=<span class="number">0</span>&amp;times;<span class="number">77</span>ff8877</span><br><span class="line"><span class="keyword">var</span> s:uint=<span class="number">0xff000000</span></span><br><span class="line"><span class="keyword">var</span> h:uint=t&amp;amp;s</span><br><span class="line"><span class="keyword">var</span> m:uint=h&amp;gt;&amp;gt;&amp;gt;<span class="number">24</span></span><br><span class="line">trace(m)</span><br></pre></td></tr></table></figure>
<h3 id="转换进制"><a href="#转换进制" class="headerlink" title="转换进制:"></a>转换进制:</h3><ul>
<li>转换为十进制<br><code>trace(hexValue);</code></li>
<li>十进制转换为十六进制:<br><code>decimalValue.toString(16)</code></li>
</ul>
<h3 id="颜色提取"><a href="#颜色提取" class="headerlink" title="颜色提取:"></a>颜色提取:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">red = color24 &amp;gt;&amp;gt; <span class="number">16</span>;</span><br><span class="line">green = color24 &amp;gt;&amp;gt; <span class="number">8</span> &amp;amp; <span class="number">0xFF</span>;</span><br><span class="line">blue = color24 &amp;amp; <span class="number">0xFF</span>;</span><br><span class="line">alpha = color32 &amp;gt;&amp;gt; <span class="number">24</span>;</span><br><span class="line">red = color32 &amp;gt;&amp;gt; <span class="number">16</span> &amp;amp; <span class="number">0xFF</span>;</span><br><span class="line">green = color32 &amp;gt;&amp;gt; <span class="number">8</span> &amp;amp; <span class="number">0xFF</span>;</span><br><span class="line">blue = color232 &amp;amp; <span class="number">0xFF</span>;</span><br></pre></td></tr></table></figure>
<h3 id="按位计算得到颜色值"><a href="#按位计算得到颜色值" class="headerlink" title="按位计算得到颜色值:"></a>按位计算得到颜色值:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">color24 = red &amp;lt;&amp;lt; <span class="number">16</span> | green &amp;lt;&amp;lt; <span class="number">8</span> | blue;</span><br><span class="line">color32 = alpha &amp;lt;&amp;lt; <span class="number">24</span> | red &amp;lt;&amp;lt; <span class="number">16</span> | green &amp;lt;&amp;lt; <span class="number">8</span> | blue;</span><br></pre></td></tr></table></figure>
<h3 id="过控制点的曲线"><a href="#过控制点的曲线" class="headerlink" title="过控制点的曲线:"></a>过控制点的曲线:</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="comment">// xt, yt是你想要让曲线通过的那一点</span></span><br><span class="line"><span class="comment">// x0, y0 和x2, y2 是曲线的终点</span></span><br><span class="line"><span class="comment">//PS.发现很多人转帖都是直接复制粘贴，也不翻译一下</span></span><br><span class="line">xt * <span class="number">2</span> &amp;ndash; (x0 + x2) / <span class="number">2</span>;</span><br><span class="line">y1 = yt * <span class="number">2</span> &amp;ndash; (y0 + y2) / <span class="number">2</span>;</span><br><span class="line">moveTo(x0, y0);</span><br><span class="line">curveTo(x1, y1, x2, y2);</span><br></pre></td></tr></table></figure>
<h3 id="匀速移动到目标点"><a href="#匀速移动到目标点" class="headerlink" title="匀速移动到目标点"></a>匀速移动到目标点</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onEnterFrame</span><span class="params">(event:Event)</span>:void </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> X = targetX - ball.x;</span><br><span class="line">	<span class="keyword">var</span> Y = targetY - ball.y;</span><br><span class="line">	<span class="keyword">var</span> Z = Math.sqrt(X * Y + Y * Y); <span class="comment">//求出距离</span></span><br><span class="line">	<span class="keyword">var</span> t = ball.Speed / Z; <span class="comment">//求出时间ball.Speed 为求的运动速度</span></span><br><span class="line">	<span class="keyword">var</span> Vx = X / t;  <span class="comment">//横向速度</span></span><br><span class="line">	<span class="keyword">var</span> Vy = Y / t;  <span class="comment">//纵向速度</span></span><br><span class="line">	ball.x += Vx;</span><br><span class="line">	ball.y += Vy;</span><br><span class="line">		<span class="keyword">if</span>(Z &amp;lt;= ball.Speed)&#123;</span><br><span class="line">		  ball.x = targetX;</span><br><span class="line">		  ball.y = targetY;</span><br><span class="line">		  <span class="keyword">return</span>;</span><br><span class="line">		&#125;<span class="comment">//判断距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="移动到目标点-抖动特效-公式"><a href="#移动到目标点-抖动特效-公式" class="headerlink" title="移动到目标点 抖动特效 公式"></a>移动到目标点 抖动特效 公式</h3><figure class="highlight as"><table><tr><td class="code"><pre><span class="line">functiononEnterFrame () :<span class="keyword">void</span>&#123;</span><br><span class="line">	v = v + easing * (targetX - ball._x);<span class="comment">//easing为缓动系数变量</span></span><br><span class="line">	ball._x = ball._x + v;</span><br><span class="line">	v = spring * v;<span class="comment">//spring为抖动幅度变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> programm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> as3 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[开始记录]]></title>
      <url>http://www.farwmarth.com/%E5%BC%80%E5%A7%8B%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>上班十来天了,觉得很有必要写一个这样的博客 ,记录一下所见所学所感.</p>
<p>刚开始找工作的时候感觉是挺容易的事,面试,通过,握手,然后就入职。但事实上并非是一蹴而就的,面试了各种不同的公司,每一轮都会暴露出新的薄弱环,刚开始是觉得没准备好,知识储备不够深厚,有些受挫感,但后来仔细想想其实客观原因的比重更大些,毕竟是刚毕业没有任何实战经验的黄毛小子,而不同公司的技术要求又不尽相同.</p>
<a id="more"></a>
<p>初次面试,心情紧张远远超越了兴奋感.有一次学校组织的面试,一个人事妹子让我们自我介绍,我脱口而出:各位面试官下午好,其实那天我们是上午去的.全场暴笑.MM给我打的评语是:比较紧张.完了,我当时心里打着退堂鼓,安排了两轮笔试 ,我都侥幸通过,一起过来的同学刷掉了一批,最后剩下了三个人.</p>
<p>过了几天,来电话催人了,面试也安排了两轮:第一轮,一个技术组长过来面试,感觉也是工作不久的,问的问题也没啥水平,没什么压力通过了.然后经理过来跟我们谈工资,问我们的真实学历 ,当时不知道这是学校和这外包公司的勾当,一五一十地说了,这狗娘养的,立马降工资，谈判失败,拍拍屁股就走人了,后来才知道是外包公司,低价买应届生高价出售的那种.</p>
<p>然后陆续面试了几家公司 ,自己从网上投简历，每家必,大多是在谈工资的时候驾崩了.当时就在想,这批人都他妈的是吸血鬼,后来仔细想想也觉得合乎常理了,这就是降低成本来获得最高的利益是基本原则啊.面试见过各种各样的面试官,打着官腔的,也有真正的大拿,也碰到不少和自己一样面试的人,大多是应届毕业和我们一样像是带宰的羔羊,感想就是一些细节性的东西要处理好,代码的精简性,知识点的深度挖掘度.这可能就决定了你是stay here,还是 say goodbye了。</p>
<p>看的面试题大多雷同,葵花宝典上的东西很多,但是如果你真照着答案写的话,不可能得到认可,面试官也不是傻子,真枪实弹地干过,还是纸片功夫一眼便看穿了.</p>
<p>记得有一家做自己产品的公司问了很多无脑的问题(当时的想法),其实是个人水平太差才有这样的想法.并发,负载平衡,事务,数据库锁机制,表分区,不接触到某一类型的项目根本不会去用这些东西，所以说是水平问题啊，每面一次试就觉得，还有很大很大程度上的提高可能，自己完全站在这个金字塔的最低部。为什么每次在谈工资的时候就崩呢,原因不言而喻,经验不足,想问题不够有深度.</p>
<p>面试发现大小公司对人的要求还不是很高,因为大公司有资源去储存,去培养一批人,所以即使你没有经验,但是思维活跃可能就能入职了,而小公司就不一样,小公司要求的是实时的价值.</p>
<p>昨天和老板聊了会天,他问我上了一个星期的班有什么感触,是不是感觉实际应用经验匮乏,确实,因为有些问题你没有碰到的话,你哪会去考虑这么多,这周刚做了个ajax上传的功能,自我感觉良好的时候老板跑过来指正 ,这样工程重新发布的时候 就会出大问题。原来他以前做一个证券公司的网站时就因为这样发布产生了数据丢失.</p>
<p>软件这行业，技术更新太快了，一不小心就落伍了，今天出这个技术，明天是那个，公司一接新的项目，你又得重新去学习新的东西，可能是全新的一种思想，所以要时刻保持着对行业的第度,其实什么编程语言都是假的,用精简方式来解决问题才是一个好的程序员的衡量标准.所以一个很小的东西就能体现你的真实水平，在那家做自己产品的公司面试的时候，要做就做个最牛b的.</p>
<p>经典的东西永远不会过时 ，程序不管怎么变，解决问题的基本方式是无可逆转的。</p>
<p>老板给的启示是:要有良好的编程习惯，要全面深入地去考虑问题的各种可能性，还有一个方面就是要学会沟通，写程序不是最难的，最难的是一个团队一起来完成一个好的产品.</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
